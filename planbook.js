(function () {
    'use strict';
    $.fn.handleSpinner = function (options) {
        var $handleSpinner = this;
       
        $handleSpinner.each(function(){
        	 var $input,
             $btnMinus,
             $btnPlugs,
             minimum,
             maximum,
             writable,
             onChange,
             onMinimum,
             onMaximum;
        	 
        	 $(this).click(function(e){
        		e.preventDefault();
        		return false;
        	 });
        	 
             $btnMinus = $(this).find('.minusButton');
             $input = $(this).find('input');
             $btnPlugs = $(this).find('.plusButton');
             var defaultOpts = {
                 writable: true,
                 minimum: 1,
                 maximum: 10,
                 onChange: function(){},
                 onMinimum: function(){},
                 onMaximum: function(){}
             };
             var settings = $.extend({}, defaultOpts, options);
             minimum = settings.minimum;
             maximum = settings.maximum;
             writable = settings.writable;
             onChange = settings.onChange;
             onMinimum = settings.onMinimum;
             onMaximum = settings.onMaximum;
             if (!$.isNumeric(minimum)) {
                 minimum = defaultOpts.minimum;
             }
             if (!$.isNumeric(maximum)) {
                 maximum = defaultOpts.maximum;
             }
             var inputVal = $input.val();
             if (isNaN(parseInt(inputVal))) {
                 inputVal = $input.val(0).val();
             }
             if (!writable) {
                 $input.prop('disabled', true);
             }

             changeVal(inputVal);
             $input.val(inputVal);
             $btnMinus.click(function () {
                 var num = parseInt($input.val());
                 if (num > minimum) {
                     $input.val(num - 1);
                     changeVal(num - 1);
                 }
             });
             $btnPlugs.click(function (e) {
             	var num = parseInt($input.val());
                 if (maximum==null||num < maximum) {
                     $input.val(num + 1);
                     changeVal(num + 1);
                 }
             });
             var keyUpTime;
             $input.keyup(function () {
                 clearTimeout(keyUpTime);
                 keyUpTime = setTimeout(function() {
                     var num = $input.val();
                     if (num == ''){
                         num = minimum;
                         $input.val(minimum);
                     }
                     var reg = new RegExp("^[\\d]*$");
                     if (isNaN(parseInt(num)) || !reg.test(num)) {
                         $input.val($input.data('num'));
                         changeVal($input.data('num'));
                     } else if (num < minimum) {
                         $input.val(minimum);
                         changeVal(minimum);
                     }else if (maximum!=null&&num > maximum) {
                         $input.val(maximum);
                         changeVal(maximum);
                     } else {
                         changeVal(num);
                     }
                 },300)
             })
             $input.focus(function () {
                 var num = $input.val()
                 if (num == 0) $input.select()
             })

             function changeVal(num) {
                 $input.data('num', num);
                 $btnMinus.removeClass('spinnerDisabled');
                 $btnPlugs.removeClass('spinnerDisabled');
                 if (num <= minimum) {
                     $btnMinus.addClass('spinnerDisabled');
                     onMinimum.call(this, num);
                 } else if (maximum!=null&&num >= maximum) {
                     $btnPlugs.addClass('spinnerDisabled');
                     onMaximum.call(this, num);
                 }
                 onChange.call(this, num);
             }
        });
        
        return $handleSpinner;
    };
})(jQuery);

$(document).ready(function( ) {

	$.ajaxSetup({ cache:false });

	jQuery.ajaxSettings.traditional = true;
	
	$(document).bind("contextmenu", function(e) {
	    return false;
	});  

	$(document).click(function() {
		hideLists();
		$('#standardsDesc').hide();
	});
	
	$(document).ajaxError(function( event, jqxhr, settings, thrownError ) {
		hideLoading();
		if (jqxhr.readyState == 0) {
			showErrorBox('Your request has timed out.  If the problem continues, please close and then restart your internet browser to establish a new connection with our application servers.');
		} else {
			showErrorMsg();
		}
	});
	
	
	/*UserVoice=window.UserVoice||[];(function(){
		var uv=document.createElement('script');
		uv.type='text/javascript';
		uv.async=true;
		uv.src='//widget.uservoice.com/IHqmEUiRkOiFEtMiwLng.js';
		var s=document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(uv,s);
	})();

	UserVoice.push(['set', {
	  accent_color: '#448dd6',
	  trigger_color: 'white',
	  trigger_background_color: 'rgba(46, 49, 51, 0.6)'
	}]);

	UserVoice.push(['addTrigger', '#supportButton', { mode: 'contact' }]);*/
	
	$('#standardsReportTable').tablesorter();
	
	$('#append').prop('checked',true);
	$('#insertDate').prop("disabled", true);
	$('#insertDate').val("");
	
	teacherStudentNotes = new Array();

	storage = null;
	
	var scoreWeightSubjectId = 0;
	var havePickStrategies = false;
	var haveStrategies = false;
	var currentStrategyId = "";
	var oldFileName = "";
	var copyTeacherPos = "";
	var copyYearPos = "";
	var copyClassPos = "";
	var toClassPos = "";
		
	var changePickCopyTeacher = false;
	var changePickCopyYear = false;
	var changePickCopyClass = false;
	var changePickToClass = false;
	var bannerMenuOpen = false;
	
	var todayFromLessonRow = 0;
	var todayFromLessonPos = 0;
	var todayToLessonRow = 0;
	var todayToLessonPos = 0;
	var todayLessonRow = 0;
	var todayLessonPos = 0;
	var todayEventRow = 0;
	var todayEventPos = 0;
	var haveToDos = false;
	var viewUnitLessons = false;
	var importFromDate = '';
	var importToDate = '';
	var noSchoolCheck = false;
	var haveStudentGrades = false;
	var haveAllStudentGrades = false;

	var asgGradesButtonId = 'allAssignments';
	var asmGradesButtonId = 'allAssessments';
	var asgGradeColsPos = 0;
	var asmGradeColsPos = 0;
	asgGradeCols = new Array();
	asmGradeCols = new Array();
	
	letterGrades = new Array();
	lessonLayouts = new Array();
	standardStates = new Array();
	statesSelected = new Array();
	tempStatesSelected = new Array();
	subjectsSelected = new Array();
	tempSubjectsSelected = new Array();
	
	var lessonTitleStyle = "";
	var applyUnitType = "";
	var currentFormatSection = "";
	var newClassDays = 0;
	newClasses = new Array();
	var haveCommentTo = false;
	var currentScoreId = 0;
	jsonInfo = new Object();
	adminLayouts = new Array();
	var haveAdminLayouts = false;
	var haveSchoolStudentsForGradesView = false;
	var haveStudentsForPerformanceReport = false;
	var currentLessonLayoutId = 0;
	var browserButton = false;
	var haveStudents = false;
	var havePromoteDetails = false;
	var currentStudentId = '';
	var studentClassPicked = '';
	var studentTeacherPicked = '';
	var currentStudentClassId = '';
	var dragStudentId = '';
	var individualStudentGradesView = false;
	var gradesClassPicked = '';
	var gradesStudentPicked = ''
	var currentGradesClassId = '';
	var currentGradesStudentId = '';
	assignmentGrades = new Array();
	assessmentGrades = new Array();
	var changePickPeriod = false;
	var currentGradingPeriodId = '';
	var currentEditGradePeriodId = '';
	var gradesPeriodPicked = 0;
	var maxUploadSize = 104857600;
	var loadingTimerId = null;
	var gradeLevelChanged = false;
	assignmentWeights = new Array();
	assessmentWeights = new Array();
	standardGrades = new Array();
	standardWeights = new Array();
	
	allAssignmentWeights = new Array();
	allAssessmentWeights = new Array();
	allStandardWeights = new Array();
	
	//var gs = new GoogleServices({
	//	clientId : '318112608367-dl5gkn0dqn1eo8pje9169khdp7hh617n.apps.googleusercontent.com',
	//	developerKey : 'AIzaSyDTeQByFfkcXzeWkODMkqJSaY-p_qJCbtg'
	//});
	
	var displayDay = ['#Sunday1','#Monday1','#Tuesday1','#Wednesday1','#Thursday1','#Friday1','#Saturday1',
	                  '#Sunday2','#Monday2','#Tuesday2','#Wednesday2','#Thursday2','#Friday2','#Saturday2',
	                  '#Sunday3','#Monday3','#Tuesday3','#Wednesday3','#Thursday3','#Friday3','#Saturday3'];

	var displayWeek = ['.weekOne', '.weekTwo', '.weekThree'];	
	var displayWeekE = ['.w1', '.w2', '.w3'];	

	var colors1 = ['#C7561E','#B5515D','#C244AB','#603F99','#536CA6','#3640AD','#3C995B','#5CA632','#7EC225','#A7B828',
	               '#CF9911','#D47F1E','#B56414','#914D14','#AB2671','#9643A5','#4585A3','#737373','#41A587','#D1BC36',
	               '#AD2D2D','#D96666','#E67399','#B373B3','#8C66D9','#668CB3','#668CD9','#59BFB3','#65AD89','#4CB052',
	               '#8CBF40','#BFBF4D','#E0C240','#F2A640','#E6804D','#BE9494','#A992A9','#8997A5','#94A2BE','#85AAA5','#A7A77D','#C4A883',
	               '#993300','#333300','#003300','#003366','#000080','#333399','#333333','#800000','#FF6600',
	               '#808000','#008000','#008080','#0000FF','#666699','#808080','#FE090A','#FE9C0A','#9CCD0A','#3A9C6C',
	               '#33CCCC','#3366FF','#800080','#999999','#FF00FF','#FFCC00','#FFFF00','#00FF00','#00FFFF','#00CCFF',
	               '#993366','#C0C0C0','#FF99CC','#FFCC99','#FFFF99','#CCFFCC','#CCFFFF','#99CCFF','#CC99FF','#FFFFFF','#000000'];

	var displayCellTitle = ['#monthTitleR1C1','#monthTitleR1C2','#monthTitleR1C3','#monthTitleR1C4','#monthTitleR1C5','#monthTitleR1C6','#monthTitleR1C7','#monthTitleR2C1','#monthTitleR2C2','#monthTitleR2C3','#monthTitleR2C4','#monthTitleR2C5','#monthTitleR2C6','#monthTitleR2C7','#monthTitleR3C1','#monthTitleR3C2','#monthTitleR3C3','#monthTitleR3C4','#monthTitleR3C5','#monthTitleR3C6','#monthTitleR3C7','#monthTitleR4C1','#monthTitleR4C2','#monthTitleR4C3','#monthTitleR4C4','#monthTitleR4C5','#monthTitleR4C6','#monthTitleR4C7','#monthTitleR5C1','#monthTitleR5C2','#monthTitleR5C3','#monthTitleR5C4','#monthTitleR5C5','#monthTitleR5C6','#monthTitleR5C7'];
	var displayCell = ['#monthCellR1C1','#monthCellR1C2','#monthCellR1C3','#monthCellR1C4','#monthCellR1C5','#monthCellR1C6','#monthCellR1C7','#monthCellR2C1','#monthCellR2C2','#monthCellR2C3','#monthCellR2C4','#monthCellR2C5','#monthCellR2C6','#monthCellR2C7','#monthCellR3C1','#monthCellR3C2','#monthCellR3C3','#monthCellR3C4','#monthCellR3C5','#monthCellR3C6','#monthCellR3C7','#monthCellR4C1','#monthCellR4C2','#monthCellR4C3','#monthCellR4C4','#monthCellR4C5','#monthCellR4C6','#monthCellR4C7','#monthCellR5C1','#monthCellR5C2','#monthCellR5C3','#monthCellR5C4','#monthCellR5C5','#monthCellR5C6','#monthCellR5C7'];
	
	var fontTypes = ["none",
	                 "andale mono,times",
	                 "arial,helvetica,sans-serif",
	                 "arial black,avant garde",
	                 "book antiqua,palatino",
	                 "comic sans ms,sans-serif",
	                 "courier new,courier",
	                 "georgia,palatino",
	                 "helvetica",
	                 "impact,chicago",
	                 "tahoma,arial,helvetica,sans-serif",
	                 "terminal,monaco",
	                 "times new roman,times",
	                 "trebuchet ms,geneva",
	                 "verdana,geneva"];
	
	var plansHS = true;
	
	var assignmentClassPicked = "pcall";
	var assessmentClassPicked = "pcall";
	var templateClassPicked = "pcall";
	var unitClassPicked = "pcall";
	var lessonClassPicked = '';
	var assignmentUnitPicked = "puall";
	var assessmentUnitPicked = "puall";
	var lessonUnitPicked = "puall";
	var tempUnitId = "";

	var lessonDoIt2On = false;
	var collaborateType = "T";
	var moveShowClass1 = "";
	var moveShowDate1 = "";
	var copyMoveLesson = "N";
	var overwriteMoveLesson = "N";
	var lessonLoaded = "N";
	var moveClassId = "";
	var moveLessonDate = "";
	var moveExtraLesson = "";
	var lastPaymentId = 0;
	var standardsTeacherId = 0;
	var yearNeeded = "N";
	var copyCount = 0;
	var searchYearId = "";
	var tutorOn = false;
	var tutorPage = 0;
	var weekWidth = '20%';
	var userMode = "";
	var cursorType = "pointer";
	var currentTeacherId = "";
	var currentYearId = "";
	var editTeacherId = "";
	var teacherNotes = "";
	var studentNotes = "";
	var subPlans = "";
	var currentSchoolId = 0;
	
	var scheduleChange = false;
	var haveComments = false;
	var newUser = false;
	var firstTime = true;
	var haveWeeks = false;
	var haveMonth = false;
	var haveList = false;
	var haveTemplates = false;
	var haveAssignments = false;
	var haveAssessments = false;
	var haveUnits = false;
	var haveStudentPlans = true;
	var currentWeek = 1;
	var currentDay = 7;
	var action = 'showToday';
	var haveEvents = false;
	var changeMonthYear = false;
	var changeSpinCount = false;
	var changeViewList = false;
	var changePickClass = false;
	var changePickUnit = false;
	var changePickGradeLevel = false;
	var fontColorTab = 1;
	var searchShowAll = false;
	var currentExtraLesson = 0;
	var newExtraLesson = false;
	var changePickNotes = false;
	
	var haveSearch = false;
	var haveStandards = false;
	var oneSubject = false;
	
	var autoSaved = false;
	var saveLesson = false;
	
	var currentView = '';
	var currentCustomStart = '';
	var currentCustomEnd = '';
	var currentId = '';
	var currentSequence = '';
	var currentClassId = '';
	var currentCollaborateSubjectId = 0;
	var currentCollaborateType = 0;
	var currentCollaborateUnitId = 0;
	var currentClassName = '';
	var currentClassStart = '';
	var currentClassEnd = '';
	var currentLessonText = '';	
	var currentHomeworkText = '';
	var currentNotesText = '';
	var currentTab4Text = '';
	var currentTab5Text = '';
	var currentTab6Text = '';
	var currentStrategiesText = '';
	var currentMyStandardsText = '';
	var currentSchoolStandardsText = '';
	var currentStandardsText = '';
	var currentAttachmentsText = '';
	var currentEventDatastoreId = '';
	var currentEventDate = '';
	var currentEventText = '';
	var currentNoSchool = '';
	var currentNoCycle = '';
	var currentEventPrivate = '';
	var currentEventEndDate = '';
	var currentRepeats = '';
	var currentEventStartTime = '';
	var currentEventEndTime = '';
	var currentEventTitle = '';
	var currentEventData = '';
	var updateCurrentEvent = 'N';
	var updateRecurringEvent = 'N';
	var currentYear = '';
	var currentMyStandardId = '';
	var currentTemplateId = '';
	var currentAssignmentId = '';
	var currentAssessmentId = '';
	var currentUnitId = '';
	var currentUnitSubjectId = '';
	var currentLessonTitle = '';
	var currentLessonLock = '';
	var currentAttachmentsLength = '';
	var currentSearchText = '';
	
	var d = new Date();
	var dMonth = d.getMonth();
	var dDate = d.getDate();
	var dYear = d.getFullYear();
	
	var currentDate = new Date(dYear, dMonth, dDate);
	var getMonday = new Date(dYear, dMonth, dDate);
	var startMonday = new Date(dYear, dMonth, dDate);
	
	var showDate = '';
	var oneDay = 1000 * 60 * 60 * 24;
	var dayDiff = '';

	var gDate = '';
	var gMonth = '';
	var gYear = '';
	var	gMonday = '';
	var mMonth = '';
	var mYear = '';

	var cDays=0;
	
	var autoSaveTimeOut = '';
	
	var convertedColor = '';
	
	classInfo = new Object();
	userInfo = new Object();
	shareYears = new Object();
	studentData = new Object();

	yearNames = new Array();
	convertYears = new Array();
	var convertPos = 0;
	dayNames = new Array();
	terms = new Array();
	noClass = new Array();
	attachments = new Array();
	strategies = new Array();
	tempStrategies = new Array();
	standards = new Array();
	tempStandards = new Array();
	myStandards = new Array();
	tempMyStandards = new Array();
	schoolStandards = new Array();
	tempSchoolStandards = new Array();
	sCategoryId = new Array();
	sCategoryDesc = new Array();
	sCategoryType = new Array();
	rCategoryId = new Array();
	rCategoryDesc = new Array();
	rCategoryType = new Array();
	grCategoryId = new Array();
	grCategoryDesc = new Array();
	grCategoryType = new Array();
	assignments = new Array();
	assessments = new Array();
	tempMyFiles = new Array();
	myFiles = new Array();
	hideClasses = new Array();

	dayTeach = new Array();
	startTime = new Array();
	endTime = new Array();
	savedTeachers = new Array();
	
	var sharedUser = '';
	var holdEmailAddress = '';
	var classCount = 0;
	var standardType = '';
	var attachType = 'attach';
	var classPickType = '';
	
	classStart = new Array();
	classEnd = new Array();
	classNames = new Array();
	classId = new Array();
	classUnits = new Array();
	subjectSharedId = new Array();
	lessonDate = new Array();
	schoolStart2 = new Array();
	
	currentStandards = new Array();
	
	var currentHour = '';
	var currentMinute = '';
	var currentAmPm = '';
	var timeFieldId = '';
	
	var copyLessonTitle = '';
	var copyLessonText = '';
	var copyHomeworkText = '';
	var copyNotesText = '';
	var copyTab4Text = '';
	var copyTab5Text = '';
	var copyTab6Text = '';
	copyStrategies = new Array();
	copyStandards = new Array();
	copyMyStandards = new Array();
	copySchoolStandards = new Array();
	copyAttachments = new Array();
	var copyReady = false;

	var oldLesson = "";
	var oldHomework = "";
	var oldNotes = "";
	var oldTab4 = "";
	var oldTab5 = "";
	var oldTab6 = "";

	oldStandardDBIds = new Array();
	oldMyStandardDBIds = new Array();
	oldSchoolStandardDBIds = new Array();
	
	var fromCheckBox = false;
	var showClassCount = 0;
	var itemCount = 18;
	var partId = ['allTab1','allTab2','allTab3','allTab4','allTab5','allTab6','allStIDs','allStText','allTemplates','allTimes','event','lessonDoIt','allAttach','allAssign','allAssess','allTitles','allUnits','allStrategies'];
	$('.CBpartItem').prop('checked',true);
	
	var paymentNeeded = false;
	var suspendAccount = false;
	var importTab = 'M';
	
	var lessonView = "";
	var listClassId = "";
	
	var deletedLessons = "";
	var undoAction = "";
	var undoNumDays = "";
	var undoExtraLesson = "";
	var undoDate = "";
	var undoShiftLessons = "";
	var undoClassId = "";
	
	teacherList = new Array();
	
	var loadToLessons = false;
	
	$('#vNum').html('v5-20161205');
	
	var noSchoolCount = 4;
	var holidayCount = 0;
	calArray = new Array();
	loadCalArray();
	googleEmailCal = new Array();
	$('#googleSignedIn').html("N");
	
	$('#copyTab1').prop("checked",true);
	$('#copyTab2').prop("checked",true);
	$('#copyTab3').prop("checked",true);
	$('#copyTab4').prop("checked",true);
	$('#copyTab5').prop("checked",true);
	$('#copyTab6').prop("checked",true);
	$('#copyTab7').prop("checked",true);
	$('#copyTab8').prop("checked",true);
	$('#copyTab9').prop("checked",true);
	$('#copyTab0').prop("checked",true);
	$('#copyTabA').prop("checked",true);
	
	var startDay;
	var classStartDay;
	cycleChange = new Object();
	
	var showUnitLessons = true;
	var showUnitAssignments = true;
	var showUnitAssessments = true;
	var showUnitStandards = true;
	
	var fileNameChanged = false;
	
	var theDay=currentDate.getDay();
	switch (theDay) {
		case 0: startMonday.setDate(startMonday.getDate()+1); break;
		case 1: startMonday.setDate(startMonday.getDate()+0); break;
		case 2: startMonday.setDate(startMonday.getDate()-1); break;
		case 3: startMonday.setDate(startMonday.getDate()-2); break;
		case 4: startMonday.setDate(startMonday.getDate()-3); break;
		case 5: startMonday.setDate(startMonday.getDate()-4); break;
		default: startMonday.setDate(startMonday.getDate()+2);
	}
	
	setPlanbookLogo();
	
	getMonday.setTime(startMonday.getTime());
	mMonth = getMonday.getMonth(); mMonth++;
	mYear = getMonday.getFullYear();
	
	$('.week2').hide();
	$('.week1').hide();
	$('.weekOne').hide();
	$('.weekThree').hide();
	$('.w1').hide();
	$('.w2').hide();
	$('.w3').hide();
	
	$('.dateButton').hide();

	$('.datePicker').datepicker({});
	
	$('.timePick').timepicker({
		'scrollDefault' : '8:00am',
		'forceRoundTime' : false,
		'typeaheadHighlight' : false,
		'step' : 15
	});
			
	$('textarea.tinymce').tinymce({
		script_url : 'tinymce/js/tinymce/tinymce.min.js',
	    content_css : "css/tinymce_content.css",
	    plugins: [
	        "advlist autolink lists link image charmap",
	        "visualblocks code fullscreen textcolor",
	        "media table emoticons"],
	    menubar: false,
	    statusbar: false,
	    browser_spellcheck: true,
	    resize:true,
        fontsize_formats: "8pt 9pt 10pt 11pt 12pt 13pt 14pt 16pt 18pt 20pt",
        default_link_target:"_blank",
	    toolbar1: "fontselect fontsizeselect | bold italic underline strikethrough | bullist numlist | outdent indent | forecolor backcolor",
	    toolbar2: "cut copy paste | undo redo | link image media | subscript superscript | charmap emoticons | removeformat code",
	    setup: function (editor) {editor.on('keyup paste', function (e) {saveLesson = true;});}
	});
	
//    init_instance_callback: function (editor) {
//    	$(editor.getContainer()).find(".mce-path").css("visibility", "hidden");
//    	},

	$('.dragBox').draggable({
		handle:'.dragHead',
		stop: function() {
			$(this).css('height','');
		}
	});

	$('#actionBarLeft').css({'width':'330px'});
	$('#actionBarRight').css({'width':'330px'});

	$(".spinner").spinner({
		min:1,
		max:10,
		spin: function( event, ui ) {
			changeSpinCount = true;
		}
	});

	$('.spinner').click(function() {
		changeSpinCount = true;
	});

	 $('#bumpSpin').val(1);
	 $('#backSpin').val(1);
	 $('#extendSpin').val(1);
	 $('#stanSpin').val(1);

	 window.onhashchange = function() {

		 if (browserButton == true) {
			 hideLists();
			 var hash = window.location.hash.substr(1);
			 if (hash == "day") {
				 showDay();
			 } else if (hash == "month") {
				 showMonth();
			 } else if (hash == "list") {
				 viewUnitLessons = false;
				 showList();
			 } else if (hash == "week"){
				 showWeek();
			 } else if (hash == "class") {
				classView();
			} else if (hash == "event") {
				showEvents();
			} else if (hash == "account") {
				showAccount();
			} else if (hash == "schoolyear") {
				showSchoolYear();
			} else if (hash == "display") {
				showDisplay();
			} else if (hash == "sharing") {
				showShare();
			} else if (hash == "print") {
				showPrint();
			} else if (hash == "template") {
				showTemplates();
			} else if (hash == "teachers") {
				showTeachers();
			} else if (hash == "standards") {
				showStandardsReport();
			} else if (hash == "strategies") {
				viewStrategies();
			} else if (hash == "mylist") {
				showStandards();
			} else if (hash == "comment") {
				showComments();
			} else if (hash == "search") {
				showSearchList();
			} else if (hash == "assignment") {
				viewAssignments();
			} else if (hash == "assessment") {
				viewAssessments();
			} else if (hash == "grade") {
				showStudentGrades();
			} else if (hash == "assignstudent") {
				if (userMode == "T") {
					showAssignStudents();
				} else {
					showAdminAssignStudents();
				}
			} else if (hash == "student") {
				showStudents();
			} else if (hash == "unit") {
				showUnits();
			} else if (hash == "myfiles") {
				showMyFiles();
			} else if (hash == "sections") {
				showSections();
			} else if (hash == "copy") {
				showCopyLessons();
			}			
		 } else {
			 browserButton = true;
		 }
		 
	 }
	 
	gDate = getMonday.getDate();
	gMonth = getMonday.getMonth(); gMonth++;
	gYear = getMonday.getFullYear();
	gMonday = gMonth + "/" + gDate + "/" + gYear;

	// Determine if a teacher or student access
	if (getUrlVars()["k"] != null || getUrlVars()["s"] != null) {

		userMode = 'S';
		cursorType = "default";

		studentData.teacherId = getUrlVars()["t"];
		studentData.studentKey = getUrlVars()["k"];
		studentData.yearId = getUrlVars()["y"];
		studentData.subjectId = getUrlVars()["c"];
		studentData.studentId = getUrlVars()["s"];

		if (studentData.yearId == null)    {studentData.yearId = 0;}
		if (studentData.subjectId == null) {studentData.subjectId = 0;}
		if (studentData.teacherId == null) {studentData.teacherId = 0;}
		if (studentData.studentKey == null) {studentData.studentKey = 0;}
		if (studentData.studentId == null) {studentData.studentId = 0;}

		if (studentData.studentId != 0) {
			showLoading();
			$.getJSON('getTeachersStudent', 'studentId='+studentData.studentId, loadStudentTeachers);
		} else {
			lessonView = "week";
			haveWeeks = false;
			getLessons();
		}
	
	} else {

		action = 'showToday';
		showLoading();
		$.getJSON('/planbook/public/getSettings', 'user=user', loadSettings);

	}

	$('#refreshButton').click(function() {
		action = 'showToday';
		showLoading();
		$.getJSON('getSettings', 'user=user', loadSettings);
	});	
	
	function loadStudentTeachers(data) {
		
		hideLoading();	
		
		if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			$('#studentList').html('');
			$('#commentSendTo').html('');
			$('#gradePeriodList').html('');
			
			if (data.activeTeachers != null && data.activeTeachers.length > 0) {
				if (data.activeTeachers.length > 1) {
					$('#studentList').append($('<div class="studentItem" id="studentItem0">All Teachers</div>').data(data.defaultTeacher));
					$('#studentLabel').html('All Teachers');
					studentData.teacherId = 0;
				}
				
				for (var x=0; x<data.activeTeachers.length; x++) {
					var tempName = data.activeTeachers[x].displayName;
					if (tempName == null || tempName == "") {
						tempName = data.activeTeachers[x].emailAddress;
					}
					$('#studentList').append($('<div class="studentItem" id="studentItem' + data.activeTeachers[x].teacherId + '">' + tempName + '</div>').data(data.activeTeachers[x]));
					
					$('#commentSendTo').append('<option value="' + data.activeTeachers[x].teacherId + '">' + tempName + '</option>');
					
					if (data.activeTeachers.length == 1 && x == 0) {
						$('#studentLabel').html(tempName);
						studentData.teacherId = data.activeTeachers[x].teacherId;
						$('#studentLabel').html($(this).html());
						$('#studentList').data('selected', data.activeTeachers[x].teacherId);
						loadGradePeriods(data.activeTeachers[x]);
					}
				}
				
				$('#studentButton').show();
				$('#commentsButton').show();
				$('#gradesButton').show();
				
				lessonView = "week";
				haveWeeks = false;
				getLessons();

			} else {
				showBox('#noTeachersMsgBox', 30);
			}
	
		}
	}
	
	$('#closeNoTeachers').click(function() {
		window.location="welcome.html";
	});	
	
	$('#adminModeButton').click(function() {

		if (userMode != "A") {

			$('#modeLabel').html("School");
			$('#myListColTitle').html("School List");
			$('#myListEditLabel').html("School List");
			$('#myListIDLabel').html("ID");
			
			userMode = "A";
			cursorType = "default";
			
			addUserModeToCache(userMode, currentTeacherId, currentYearId);
			
			var codes = $('#reportState').data().codes;
			$('#reportState').html('');
			if (codes) {
				$.each(codes, function() {
					$('#reportState').append('<option value="' + this.id + '">' + this.name + '</option>');;
				})
			}
			
			
			$('.adminOnly').show();
			$('.teacherOnly').hide();
			$('#notesButton').hide();

			haveStandards = false;
			haveEvents = false;
			haveComments = false;
			
			currentTeacherId = "";
			action = "getTeacherList";
			showLoading();
			$.getJSON('getTeachersAll', 'getAdmin=Y', loadTeacherList);
			
		}

	});	

	$('#teachModeButton').click(function() {

		if (userMode != "T") {

			$('#modeLabel').html("Teacher");
			$('#myListColTitle').html("My List");
			$('#myListEditLabel').html("My List");
			$('#myListIDLabel').html("My List ID");

			userMode = "T";
			cursorType = "pointer";

			addUserModeToCache(userMode, currentTeacherId, currentYearId);
			
			$('.adminOnly').hide();
			$('.teacherOnly').show();
			$('#notesButton').show();
			
			haveStandards = false;
			haveEvents = false;
			haveComments = false;

			action = 'showToday';
			showLoading();
			$.getJSON('getSettings', 'user=user', loadSettings);

		}

	});	
	
	$('#planButton, #adminPlanButton, #returnToPlans, #returnToPlans2').click(function() {
		action = "showPlans";
		showPlans();
	});
	
	$('#returnToPlans2').click(function() {
		$('#printButton').hide();
	});

	$('#closeMyFilesPage').click(function() {
		hideBox('#editMyFileBox', 10);
	});
	
	$('.gotoDay').live('click', function(e) {
		currentDay = this.id.substring(7);
		lessonView = "day";
		showPlans();
	});

	function showPlans() {

		browserButton = false;
		if (userMode != "S") {window.location.hash = lessonView;}
		
		if (lessonView == "day") {
			showDay();
		} else if (lessonView == "month") {
			showMonth();
		} else if (lessonView == "list") {
			viewUnitLessons = false;
			showList();
		} else {
			showWeek();
		}
		
	}
	
	$('#weekNavButton, #mainLogo, #returnToWeek').click(function() {
		browserButton = false;
		if (userMode != "S") {window.location.hash = "week";}
		showWeek();
	});	

	function showWeek() {

		lessonView = "week";
		currentView = "Plans";

		if (haveWeeks == false) {
			getLessons();
		} else {
			
			$('#weekLessonBox').show();

			// set divs for Week View
			$('.weekOne').css({'width':weekWidth});
			$('.weekTwo').css({'width':weekWidth});
			$('.weekThree').css({'width':weekWidth});

			if (weekWidth == '14%') {
				$('.daySun').css({'width':'15%'});
				$('.daySat').css({'width':'15%'});
			}

			if (weekWidth == '16%') {
				$('.daySun').css({'width':'17%'});
				$('.daySat').css({'width':'17%'});
				$('.dayMon').css({'width':'17%'});
				$('.dayFri').css({'width':'17%'});
			}
			
			planViewSetup();
			
			if (userInfo.equalSize == "Y") {
				$(displayWeekE[currentWeek]).show();
			} else {
				$(displayWeek[currentWeek]).show();
			}
			
			hideDays();
			showAction();
		}
		
	}

	function planViewSetup() {
		
		hideAll();
		
		$('.dateButton').show();
		$('#planBox').show();

		if (userMode == "T") {
			if (userInfo.newCommentA == "Y") {
				$('#oldComment').hide();
				$('#newComment').show();
			} else {
				$('#oldComment').show();
				$('#newComment').hide();
			}
		}

		if (userMode == "A") {
			$('#adminButton').show();
			$('#notesButton').hide();
			$('#copyButton').hide();
			$('#searchListButton').hide();
		} else {
			$('#adminButton').hide();
		}

		if (userMode == "S") {
			$('#moreButton').hide();
			$('#copyButton').hide();
			$('#listNavButton').hide();
			$('#viewList2').hide();
			$('#printButton').hide();
			$('#searchListButton').hide();
		}
		
	}
	
	
	$('#dayNavButton').click(function() {
		browserButton = false;
		if (userMode != "S") {window.location.hash = "day";}
		showDay();
	});	

	function showDay() {
		
		lessonView = "day";
		currentView = "Plans";

		if (haveWeeks == false) {
			getLessons();
		} else {

			$('#weekLessonBox').show();
			
			// set divs for Day View
			$('.weekOne').css({'width':'100%'});
			$('.weekTwo').css({'width':'100%'});
			$('.weekThree').css({'width':'100%'});
				
			planViewSetup();
			
			$(displayDay[currentDay]).show();
			showAction();			
		}
	}	

	$('#monthNavButton').click(function() {
		browserButton = false;
		if (userMode != "S") {window.location.hash = "month";}
		showMonth();
	});

	function showMonth() {

		lessonView = "month";
		currentView = "Plans";

		if (haveMonth == false) {
			getLessons();
		} else {

			$('#weekLessonBox').hide();

			planViewSetup();
			
			$('#monthBox').show();
			$('#monthBar').html(getCurrentMonth());
			$('.mCell').show();
			hideDays();
			showAction();
		}

	}	
		
	$('#listNavButton').click(function() {
		browserButton = false;
		window.location.hash = "list";
		viewUnitLessons = false;
		showList();
	});

	function showList() {
		
		classPickType = 'lesson';
		$('#pcall').hide();

		if (lessonClassPicked != currentClassId) {

			lessonClassPicked = currentClassId;

			$('#lessonClassLabel').html($('#pc'+lessonClassPicked).html());
			$('#lessonChangeClass').css({'background-color':$('#pc'+lessonClassPicked).css('background-color'),'border':'0px','color':'white'});
			$('#lessonClassImg').html('<img src="images/downwhite2.png">');

			lessonUnitPicked = "puall";
			$('#lessonUnitLabel').html("All Units");
			updateUnitPicker();
		}
		
		lessonView = "list";
		currentView = "Plans";

		if (haveList == false || listClassId != currentClassId) {
			haveList = false;
			getLessons();
		} else {

			$('#weekLessonBox').hide();

			planViewSetup();
			
			$('#listBox').show();
			$('#todayButton').hide();
			$('#calButton').hide();
			$('#prevButton').hide();
			$('#nextButton').hide();
			showAction();
			
			showTodayLesson();
			
			if (viewUnitLessons == true) {
				$('#'+classPickType+'UnitLabel').html($('#unitTitle').val());
				$('.'+classPickType+'Row').hide();
				lessonUnitPicked = currentUnitId;
				$('.'+classPickType+'Row'+lessonUnitPicked).show();
			}
			
		}

	}

	$('#classNavButton').click(function() {
		browserButton = false;
		window.location.hash = "class";
		classView();
	});	

	function classView() {
		showClass();
	}
	
	function showClass() {
		hideMessage();
		hideAll();
		$('#classView').show();
	}
	
	$('#eventNavButton, #adminEventButton').click(function() {
		browserButton = false;
		window.location.hash = "event";
		showEvents();
	});	

	function showEvents() {
		
		if (haveEvents == false) {
			action = "getEvents";
			showLoading();
			$.getJSON('getEvents', 'userMode='+userMode, loadEvents);
		} else {
			hideMessage();
			hideAll();
			$('#plansHS').show();
			$('#eventView').show();
			showTodayEvent();
		}
		
	}	

	$('#lessonDoIt2').click(function() {

		if (lessonDoIt2On == true) {
			$('#lessonActions').hide(); 
			$('#pickListTop').hide();
			lessonDoIt2On = false;			
		} else {
			lessonDoIt2On = true;			
			lessonLoaded = "Y";
			$('.lessonActionsHS').hide();
			if (currentCollaborateSubjectId == 0) {
				$('#aMove').show();
				$('#aPaste').show();
				$('#aBump2').show();
				$('#aBack2').show();
				$('#aExtend2').show();
				$('#aStan2').show();
				$('#aDelete').show();
				$('#aNoClass').show();
				$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
				$('#lessonActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-170}).show();
			} else {
				$('#aMove').hide();
				$('#aBump2').hide();
				$('#aBack2').hide();
				$('#aExtend2').hide();
				$('#aStan2').hide();
				$('#aDelete').hide();
				$('#aNoClass').hide();
				$('#aPaste').show();
				$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
				$('#lessonActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-170}).show();
			}
		}
		
		return false;
	});	
	
	$('.lessonDoIt').live('click', function(event) {

		hideLists();
		searchYearId = "";
		
		if (this.id.substring(4) == 0) {
			showErrorBox('Google events cannot be updated.');
			return false;
		}
		
		if (userMode == "T") {
			if (this.id.substring(0,1) == 'l') {
				lessonLoaded = "N";
				currentId = this.id.substring(4);
				chooseActions(currentId);
				$('#lessonActions').css({'top':$(this).offset().top-2,'left':$(this).offset().left-235}).show();
			} else {
				$('#eventActions').css({'top':$(this).offset().top-1,'left':$(this).offset().left-75}).show();
				$('.eventActionHS').show();

				currentEventDatastoreId = this.id.substring(4);
				if (lessonView == "month") {
					currentNoSchool  = '#' + currentEventDatastoreId + 'SM';
					currentNoCycle   = '#' + currentEventDatastoreId + 'CM';
					currentEventData = '#' + currentEventDatastoreId + 'EDSM';
				} else if (userInfo.equalSize == "Y") {
					currentNoSchool = '#' + currentEventDatastoreId + 'SE';
					currentNoCycle  = '#' + currentEventDatastoreId + 'CE';
					currentEventData = '#' + currentEventDatastoreId + 'EDSE';
				} else {
					currentNoSchool = '#' + currentEventDatastoreId + 'SW';
					currentNoCycle  = '#' + currentEventDatastoreId + 'CW';
					currentEventData = '#' + currentEventDatastoreId + 'EDSW';					
				}
				
			}
			return false;
		}
		
	});	
	
	$('.searchDoIt').live('click', function(event) {
		
		hideLists();
		if (userMode == "T") {
			lessonLoaded = "N";
			currentId = this.id;
			chooseActions(currentId);
			$('#lessonActions').css({'top':$(this).offset().top+1,'left':$(this).offset().left+22}).show();
			searchYearId = $('#'+this.id+'searchYear').html();
		}
		return false;

	});	

	$('.unitLessonRow').live('click', function(event) {
		
		hideLists();
		searchYearId = "";

		if (userMode == "T") {
			if (allowEdit(this.id.substring(4)) == true) {
				setUpLessonEditor();
				loadLesson(this.id.substring(4));
			}
		}

	});	
	
	$('#eEdit').click(function() {
		editEvent();
	});	
	
	$('#aEdit').click(function() {
		
		 if (allowEdit(currentId) == true) {
			 setUpLessonEditor();
			 loadLesson(currentId);
		 }
		 
		 return false;
	});	
	
	$('.lessonHeadDoIt').live('mousedown', function(event) {
				
		hideLists();
		searchYearId = "";
		
		if (userMode == "T") {
		
			if (event.which == 3) {
				lessonLoaded = "N";
				currentId = this.id.substring(4);
				chooseActions(currentId);
				$('#lessonActions').css({top:event.pageY+'px', left:event.pageX+'px'}).show();
				return false;
			 } else {
				 if (allowEdit(this.id.substring(4)) == true) {
					 setUpLessonEditor();
					 loadLesson(this.id.substring(4));
				 }
				 return false;
			 }
		}
		
	});	
	
	$('.lessonContent').live('mousedown', function(event) {
		
		hideLists();
		searchYearId = "";
		
		if (userMode == "T") {
			if (event.which == 3) {
				lessonLoaded = "N";
				currentId = this.id.substring(4);
				chooseActions(currentId);
				$('#lessonActions').css({top:event.pageY+'px', left:event.pageX+'px'}).show();
				changeSpinCount = true;
				return false;
			 } else {
				return true;
			 }
		}
		
	});	

	$('.listDoIt').live('click', function(event) {

		hideLists();
		searchYearId = "";
		
		if (userMode == "T") {
			lessonLoaded = "N";
			currentId = this.id;
			chooseActions(currentId);
			$('#lessonActions').css({'top':$(this).offset().top+1,'left':$(this).offset().left+22}).show();
		}
		return false;

	});	
	
	$('.lessonRow').live('dblclick', function(e) {

		hideLists();
		searchYearId = "";

		if (userMode == "T") {
			if (allowEdit(this.id) == true) {
				setUpLessonEditor();
				loadLesson(this.id.substring(2));
			}
		}

	});
	
	$('.lessonRow').live('mousedown', function(event) {
		
		hideLists();
		searchYearId = "";
		
		if (userMode == "T") {
			if (event.ctrlKey) {
				return true;
			} else if (event.which == 3) {
				lessonLoaded = "N";
				currentId = this.id.substring(2);
				chooseActions(currentId);
				$('#lessonActions').css({top:event.pageY+'px', left:event.pageX+'px'}).show();
				return false;
			 }
		}
		
	});	

	$('.lessonContent').live('dblclick', function(e) {

		hideLists();
		searchYearId = "";

		if (userMode == "T") {
			if (allowEdit(this.id.substring(4)) == true) {
				setUpLessonEditor();
				loadLesson(this.id.substring(4));
			}
		}

	});

	$('.eC').live('dblclick', function(e) {

		hideLists();
		searchYearId = "";
		
		if (userMode == "T") {
			var cellType = $(this).children(":first").attr('id').substring(0,1);
			
			if (cellType == "E") {
				currentEventDatastoreId = $(this).children(":first").attr('id').substring(1);
				editEvent();
			} else {
				var cellId = $(this).children(":first").attr('id');
				if (allowEdit(cellId) == true) {
					setUpLessonEditor();
					loadLesson(cellId);
				}
			}
		}
		
	});
	
	$('.spinnerContainer').handleSpinner();
	
	function setUpLessonEditor() {
		
		$('#lessonActions').hide();
		lessonDoIt2On = false;

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#strategiesTextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		
		// find children with current class and remove it
		// find the first tab and set it to current
		$("ul#lessonSections>li.current").removeClass("current");
		var tempTab = '#'+$('ul#lessonSections').find('li:not([style*="display: none"]):first').attr('id');
		$(tempTab).addClass('current');
		
		if (tempTab=='#editTab1') {
			$('#lessonTextBox').show();
		} else if (tempTab=='#editTab2') {
			$('#homeworkTextBox').show();
		} else if (tempTab=='#editTab3') {
			$('#notesTextBox').show();
		} else if (tempTab=='#editTab4') {
			$('#tab4TextBox').show();
		} else if (tempTab=='#editTab5') {
			$('#tab5TextBox').show();
		} else if (tempTab=='#editTab6') {
			$('#tab6TextBox').show();
		} else if (tempTab=='#editStrategiesTab') {
			$('#strategiesTextBox').show();
		} else if (tempTab=='#editMyStandardsTab') {
			$('#myStandardsTextBox').show();
		} else if (tempTab=='#editStandardsTab') {
			$('#standardsTextBox').show();
		} else if (tempTab=='#editSchoolStandardsTab') {
			$('#schoolStandardsTextBox').show();
		} 
		
		$('.customLesson').hide();
		$('.normalLesson').show();
		
		showBox('#editLessonBox', 10);
		$('#lessonTitle').focus();
		
	}
	
	function loadLesson(str) {
		
		var pos = str.indexOf('X');
		currentSequence = str.substring(pos+1);
		var posE = str.indexOf('Z');
		currentExtraLesson = str.substring(posE+1);
		var lessonLock = "";
		var unitId = 0;
		var lessonTitle = "";
		
		if (currentView == "Search") {
			currentClassId = str.substring(0,pos);
			currentLessonText = '#' + currentClassId + currentSequence + 'LS';
			currentHomeworkText = '#' + currentClassId + currentSequence + 'HS';
			currentNotesText = '#' + currentClassId + currentSequence + 'NS';
			currentTab4Text = '#' + currentClassId + currentSequence + '4S';
			currentTab5Text = '#' + currentClassId + currentSequence + '5S';
			currentTab6Text = '#' + currentClassId + currentSequence + '6S';
			currentStrategiesText = '#' + currentClassId + currentSequence + 'STRS';
			currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSS';
			currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSS';
			currentStandardsText = '#' + currentClassId + currentSequence + 'SS';
			currentAttachmentsText = '#' + currentClassId + currentSequence + 'AS';
			currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDS').html();
			unitId = $('#' + currentClassId + currentSequence + 'UTS').html();
			currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIS').text();
			$('#lbClass').html($('#' + currentClassId + currentSequence + 'CN').html());
		} else if (currentView == "Units") {
			currentLessonText = '#' + currentClassId + currentSequence + 'LU';
			currentHomeworkText = '#' + currentClassId + currentSequence + 'HU';
			currentNotesText = '#' + currentClassId + currentSequence + 'NU';
			currentTab4Text = '#' + currentClassId + currentSequence + '4U';
			currentTab5Text = '#' + currentClassId + currentSequence + '5U';
			currentTab6Text = '#' + currentClassId + currentSequence + '6U';
			currentStrategiesText = '#' + currentClassId + currentSequence + 'STRU';
			currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSU';
			currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSU';
			currentStandardsText = '#' + currentClassId + currentSequence + 'SU';
			currentAttachmentsText = '#' + currentClassId + currentSequence + 'AU';
			currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDU').html();
			unitId = currentUnitId;
			currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIU').text();
			$('#lbClass').html($('#' + currentClassId + currentSequence + 'CN').html());
		} else if (lessonView == "week" || lessonView == "day") {
			currentClassId = str.substring(0,pos);
			if(lessonView == "week" && userInfo.equalSize == "Y") {
				currentLessonText = '#' + currentClassId + currentSequence + 'LE';
				currentHomeworkText = '#' + currentClassId + currentSequence + 'HE';
				currentNotesText = '#' + currentClassId + currentSequence + 'NE';
				currentTab4Text = '#' + currentClassId + currentSequence + '4E';
				currentTab5Text = '#' + currentClassId + currentSequence + '5E';
				currentTab6Text = '#' + currentClassId + currentSequence + '6E';
				currentStrategiesText = '#' + currentClassId + currentSequence + 'STRE';
				currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSE';
				currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSE';
				currentStandardsText = '#' + currentClassId + currentSequence + 'SE';
				currentAttachmentsText = '#' + currentClassId + currentSequence + 'AE';
				currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDE').html();
				unitId = $('#' + currentClassId + currentSequence + 'UTE').html();
				currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIE').text();
			} else {
				currentLessonText = '#' + currentClassId + currentSequence + 'LW';
				currentHomeworkText = '#' + currentClassId + currentSequence + 'HW';
				currentNotesText = '#' + currentClassId + currentSequence + 'NW';
				currentTab4Text = '#' + currentClassId + currentSequence + '4W';
				currentTab5Text = '#' + currentClassId + currentSequence + '5W';
				currentTab6Text = '#' + currentClassId + currentSequence + '6W';
				currentStrategiesText = '#' + currentClassId + currentSequence + 'STRW';
				currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSW';
				currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSW';
				currentStandardsText = '#' + currentClassId + currentSequence + 'SW';
				currentAttachmentsText = '#' + currentClassId + currentSequence + 'AW';
				currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDW').html();
				unitId = $('#' + currentClassId + currentSequence + 'UTW').html();
				currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIW').text();
			}
			$('#lbClass').html($('#' + currentClassId + currentSequence + 'CN').html());
		} else if (lessonView == "month") {
			currentClassId = str.substring(0,pos);
			currentLessonText = '#' + currentClassId + currentSequence + 'LM';
			currentHomeworkText = '#' + currentClassId + currentSequence + 'HM';
			currentNotesText = '#' + currentClassId + currentSequence + 'NM';
			currentTab4Text = '#' + currentClassId + currentSequence + '4M';
			currentTab5Text = '#' + currentClassId + currentSequence + '5M';
			currentTab6Text = '#' + currentClassId + currentSequence + '6M';
			currentStrategiesText = '#' + currentClassId + currentSequence + 'STRM';
			currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSM';
			currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSM';
			currentStandardsText = '#' + currentClassId + currentSequence + 'SM';
			currentAttachmentsText = '#' + currentClassId + currentSequence + 'AM';
			currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDM').html();
			unitId = $('#' + currentClassId + currentSequence + 'UTM').html();
			currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIM').text();
			$('#lbClass').html($('#' + currentClassId + currentSequence + 'CN').html());
		} else {
			currentLessonText = '#' + currentClassId + currentSequence + 'LL';
			currentHomeworkText = '#' + currentClassId + currentSequence + 'HL';
			currentNotesText = '#' + currentClassId + currentSequence + 'NL';
			currentTab4Text = '#' + currentClassId + currentSequence + '4L';
			currentTab5Text = '#' + currentClassId + currentSequence + '5L';
			currentTab6Text = '#' + currentClassId + currentSequence + '6L';
			currentStrategiesText = '#' + currentClassId + currentSequence + 'STRL';
			currentMyStandardsText = '#' + currentClassId + currentSequence + 'MSL';
			currentSchoolStandardsText = '#' + currentClassId + currentSequence + 'SSL';
			currentStandardsText = '#' + currentClassId + currentSequence + 'SL';
			currentAttachmentsText = '#' + currentClassId + currentSequence + 'AL';
			currentLessonLock = $('#' + currentClassId + currentSequence + 'ALDL').html();
			unitId = $('#' + currentClassId + currentSequence + 'UTL').html();
			currentLessonTitle = $('#' + currentClassId + currentSequence + 'LTIL').text();
			$('#lbClass').html(currentClassName);
		}
	
		$('#lbDate').html($('#' + currentClassId + currentSequence + 'D').html());
		$('#lbStart').html($('#' + currentClassId + currentSequence + 'NStart').html());
		$('#lbEnd').html($('#' + currentClassId + currentSequence + 'ND').html());
		
		currentCollaborateSubjectId = $('#' + currentClassId + currentSequence + 'SSID').html();
		currentCollaborateType = $('#' + currentClassId + currentSequence + 'SSTY').html();
		
		$('#lessonUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if (currentClassId == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#lessonUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		$('#lessonUnit').val(unitId);
		$('#lessonTitle').val(currentLessonTitle);
		
		if (currentCollaborateSubjectId == 0) {
			$('#lessonUnitBox').show();
		} else {
			$('#lessonUnitBox').hide();
			currentCollaborateUnitId = unitId;
		}
		
		tempUnitId = $('#lessonUnit').val();
		
		// if any part of lesson is a template, store it away to see if it
		// changes...
		if ($('#'+currentClassId+currentSequence+'LT').html() == "Y") {oldLesson = $(currentLessonText).html();}
		if ($('#'+currentClassId+currentSequence+'HT').html() == "Y") {oldHomework = $(currentHomeworkText).html();}
		if ($('#'+currentClassId+currentSequence+'NT').html() == "Y") {oldNotes = $(currentNotesText).html();}
		if ($('#'+currentClassId+currentSequence+'4T').html() == "Y") {oldTab4 = $(currentTab4Text).html();}
		if ($('#'+currentClassId+currentSequence+'5T').html() == "Y") {oldTab5 = $(currentTab5Text).html();}
		if ($('#'+currentClassId+currentSequence+'6T').html() == "Y") {oldTab6 = $(currentTab6Text).html();}

		$('#lessonText').val($(currentLessonText).html());
		$('#homeworkText').val($(currentHomeworkText).html());
		$('#notesText').val($(currentNotesText).html());
		$('#tab4Text').val($(currentTab4Text).html());
		$('#tab5Text').val($(currentTab5Text).html());
		$('#tab6Text').val($(currentTab6Text).html());

		standardType = 'Lesson';
		loadStrategiesText();
		loadStandardsText();
		loadMyStandardsText();
		loadSchoolStandardsText();
		
		attachType = 'attach';
		loadAttachmentsText();
		
		currentAttachmentsLength = (attachments != null?attachments.length:0);

		if ($('#'+currentClassId+currentSequence+'ST').html() == "Y") {
			if (standards == null) {
				oldStandardDBIds = null;
			} else {
				oldStandardDBIds = new Array();
				for (var x=0; x<standards.length; x++) {
					oldStandardDBIds[x] = standards[x].dbId;
				}
			}
		} else {
			oldStandardDBIds = null;
		}

		if ($('#'+currentClassId+currentSequence+'MST').html() == "Y") {
			if (myStandards == null) {
				oldMyStandardDBIds = null;
			} else {
				oldMyStandardDBIds = new Array();
				for (var x=0; x<myStandards.length; x++) {
					oldMyStandardDBIds[x] = myStandards[x].dbId;
				}
			}
		} else {
			oldMyStandardDBIds = null;
		}
		
		if ($('#'+currentClassId+currentSequence+'SST').html() == "Y") {
			if (schoolStandards == null) {
				oldSchoolStandardDBIds = null;
			} else {
				oldSchoolStandardDBIds = new Array();
				for (var x=0; x<schoolStandards.length; x++) {
					oldSchoolStandardDBIds[x] = schoolStandards[x].dbId;
				}
			}
		} else {
			oldSchoolStandardDBIds = null;
		}
		
		var customStart = $('#' + currentClassId + currentSequence + 'CS').html();
		var customEnd = $('#' + currentClassId + currentSequence + 'CE').html();

		currentCustomStart = customStart;
		currentCustomEnd = customEnd;

		if (customStart != '' || customEnd != '') {
			$('#customStart').val(customStart);
			$('#customEnd').val(customEnd);
		} else {
			$('#customStart').val($.trim($('#lbStart').html()));
			$('#customEnd').val($.trim($('#lbEnd').html()));
			currentCustomStart = $.trim($('#lbStart').html());
			currentCustomEnd = $.trim($('#lbEnd').html());
		}	
		
		if (currentLessonLock == 'Y') {
			$('#lessonLock').prop('checked',true);
		} else {
			$('#lessonLock').prop('checked',false);
		}

		if (currentExtraLesson != 0) {
			$('.normalLesson').hide();
			$('.customLesson').show();
			$('#customClass').hide();
			$('#customDateDiv').hide();
			$('#lbClass').show();
			$('#lbDate').show();
		} else {
			$('.customLesson').hide();
			$('.normalLesson').show();
		}
		
		clearTimeout(autoSaveTimeOut);
		saveLesson=false;
		
		if (userInfo.autosaveInterval > 0) {
			autoSaved=true;
			checkAutoSave();
		}

	}

	$('#extraLessonButton').click(function() {

		newExtraLesson = true;
		
		setUpLessonEditor();
		
		currentExtraLesson = 999;
		
		$("#customClass").prop("selectedIndex", 0);
		
		loadClassUnits();
		
		$('#customDate').val('');

		$('#customStart').val('');
		$('#customEnd').val('');
		
		$('#lessonText').val('');	
		$('#homeworkText').val('');
		$('#notesText').val('');
		$('#tab4Text').val('');
		$('#tab5Text').val('');
		$('#tab6Text').val('');

		standardType = 'Lesson';
		currentStrategiesText = '';
		currentStandardsText = '';
		currentMyStandardsText = '';
		currentSchoolStandardsText = '';
		loadStrategiesText();
		loadStandardsText();
		loadMyStandardsText();
		loadSchoolStandardsText();

		currentAttachmentsText = '';
		attachType = 'attach';
		loadAttachmentsText();
		
		$('.normalLesson').hide();
		$('.customLesson').show();
	
	});
	
	$('#applyLesson').keypress(function(event){
		 
		var keycode = (event.keyCode ? event.keyCode : event.which);
		if (keycode == '13') {
			if ($('#applyLesson').html() == "Save") {
				clearTimeout(autoSaveTimeOut);
				autoSaved = false;
				startApplyLesson();	
			}
		}
	 
	});
	
	$('#applyLesson').click(function() {
		if ($('#applyLesson').html() == "Save") {
			clearTimeout(autoSaveTimeOut);
			autoSaved = false;
			startApplyLesson();	
		}
	});

	function startApplyLesson() {
		
		var valError = false;
		
		if ($.trim($('#customStart').val()) != '') {
			if (valTime($.trim($('#customStart').val())) == false) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please enter a valid Start Time');
			}
		}
		
		if ($.trim($('#customEnd').val()) != '') {
			if (valTime($.trim($('#customEnd').val())) == false) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please enter a valid End Time');
			}
		}

		if (valError == false && currentExtraLesson == 999) {
			if ($.trim($('#customDate').val()) == "") {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please enter a lesson date');
			} else {
	 	 		if (valDate(formatDateToSave($.trim($('#customDate').val()))) == false) {
	 	 			valError = true;
	 	 			showNotification('#lessonErrorMsg', 'Please enter a valid lesson date');
	 	 		}
	 		}
		}		
		
		if (valError == false) {
			applyLesson();
		}
		
	}
	
	function applyLesson() {
		
		clearNotification('#lessonErrorMsg');

		var posSpace=$('#lbDate').html().indexOf(' ');

		var lessonInfo = new Object();

		if (currentExtraLesson == 999) {
			lessonInfo.classId     = $('#customClass').val();
			lessonInfo.customDate  = formatDateToSave($.trim($('#customDate').val()));
		} else {
			lessonInfo.classId    = currentClassId;
			lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
		}

		lessonInfo.unitId = $('#lessonUnit').val();
		if (currentCollaborateSubjectId != 0) {
			lessonInfo.customTimeClassId = lessonInfo.classId;
			lessonInfo.classId = currentCollaborateSubjectId;
			lessonInfo.unitId = currentCollaborateUnitId;
		}
		
		lessonInfo.extraLesson  = currentExtraLesson;
		lessonInfo.lessonText   = checkLessonText($('#lessonText').val());
		lessonInfo.homeworkText = checkHomeworkText($('#homeworkText').val());
		lessonInfo.notesText    = checkNotesText($('#notesText').val());
		lessonInfo.tab4Text     = checkTab4Text($('#tab4Text').val());
		lessonInfo.tab5Text     = checkTab5Text($('#tab5Text').val());
		lessonInfo.tab6Text     = checkTab6Text($('#tab6Text').val());

		var oldStart = new Date("January 1, 2015 " + $.trim($('#lbStart').html()));
		var newStart = new Date("January 1, 2015 " + $.trim($('#customStart').val()));
		var oldEnd = new Date("January 1, 2015 " + $.trim($('#lbEnd').html()));
		var newEnd = new Date("January 1, 2015 " + $.trim($('#customEnd').val()));
		var startDiff = oldStart - newStart;
		var endDiff = oldEnd - newEnd;
		if (startDiff == 0 && endDiff == 0 && currentExtraLesson == 0) {
			lessonInfo.customStart = "";
			lessonInfo.customEnd = "";
		} else {
			lessonInfo.customStart = $.trim($('#customStart').val());
			lessonInfo.customEnd = $.trim($('#customEnd').val());
		}
		
		lessonInfo.lessonTitle  = $.trim($('#lessonTitle').val());
		
		if ($('#lessonLock').prop('checked')) {
			lessonInfo.lessonLock = "Y";
		} else {
			lessonInfo.lessonLock = "N";
		}
		
		lessonInfo.strategySent = "Y";
		lessonInfo.strategyIds = new Array();
		if (strategies != null) {
			for (var x=0; x<strategies.length; x++) {
				lessonInfo.strategyIds[x] = strategies[x].id.substring(12);
			}
		}

		lessonInfo.standardDBIds = new Array();
		if (checkStandardsText() == true) {
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}
		}

		lessonInfo.myStandardDBIds = new Array();
		if (checkMyStandardsText() == true) {
			if (myStandards != null) {
				for (var x=0; x<myStandards.length; x++) {
					lessonInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
				}
			}
		}
		
		lessonInfo.schoolStandardDBIds = new Array();
		if (checkSchoolStandardsText() == true) {
			if (schoolStandards != null) {
				for (var x=0; x<schoolStandards.length; x++) {
					lessonInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
				}
			}
		}

		lessonInfo.attachmentNames = new Array();
		lessonInfo.attachmentPrivate = new Array();
		lessonInfo.attachmentURL = new Array();
		var arrayPos = 0;
		if (attachments != null) {
			for (var x=0; x<attachments.length; x++) {
				if (attachments[x].type == "lesson") {
					lessonInfo.attachmentNames[arrayPos] = attachments[x].filename;
					lessonInfo.attachmentPrivate[arrayPos] = attachments[x].privateFlag;
					lessonInfo.attachmentURL[arrayPos] = attachments[x].url;
					arrayPos++;
				}
			}
		}
		
		if (paymentNeeded == false) {
			$('#applyLesson').html("Saving");
			if (autoSaved == false) {showLoading();}
			$.post('updateLesson', lessonInfo, lessonAdded, "json");
		} else {
			showExpiredMsg();
		}

	}
	
	function lessonAdded(data) {

		hideLoading();
		$('#applyLesson').html("Save");
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showLessonErrorMsg();
		} else {

			action = 'updateLesson';
			saveLesson = false;
			if (autoSaved) {
				clearTimeout(autoSaveTimeOut);
				autoSaveTimeOut = setTimeout(function() {autoSaved = true;checkAutoSave()}, userInfo.autosaveInterval*1000);
			} else {
				hideBox('#editLessonBox', 10);
				clearTimeout(autoSaveTimeOut);
			}

			if (currentCustomStart != $.trim($('#customStart').val()) || currentCustomEnd != $.trim($('#customEnd').val()) || newExtraLesson == true) {

				newExtraLesson = false;
				currentCustomStart = $.trim($('#customStart').val());
				currentCustomEnd = $.trim($('#customEnd').val());
				
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
				getLessons();
				
			} else {
				updateLesson();
				showAction();
			}
		
		}
	}	
				
	function updateLesson() {
	
		var fieldId = "";
		if (currentCollaborateSubjectId != 0) {
			fieldId = '.shared' + currentCollaborateSubjectId + currentSequence;
		} else {
			fieldId = '.shared' + currentClassId + currentSequence;
		}

		$(fieldId+"L").html($('#lessonText').val());
		$(fieldId+"H").html($('#homeworkText').val());
		$(fieldId+"N").html($('#notesText').val());
		$(fieldId+"4").html($('#tab4Text').val());
		$(fieldId+"5").html($('#tab5Text').val());
		$(fieldId+"6").html($('#tab6Text').val());
		$(fieldId+"STR").html(getStrategiesText());
		$(fieldId+"MS").html(getMyStandardsText());
		$(fieldId+"SS").html(getSchoolStandardsText());
		$(fieldId+"S").html(getStandardsText());
		$(fieldId+"A").html(getAttachmentsText());
		
		if ($('#lessonLock').prop('checked')) {$(fieldId+"ALD").html("Y");} else {$(fieldId+"ALD").html("N");}

		$(fieldId+"UT").html($('#lessonUnit').val());
		$(fieldId+"LTI").html($('#lessonTitle').val());
		
		if (currentCollaborateSubjectId == 0 && tempUnitId != $('#lessonUnit').val()) {

			var unitNum = "";
			var unitLabel = "";
			if ($('#lessonUnit').val() != 0) {
				for (var y=0; y<classUnits.length; y++) {
					if ($('#lessonUnit').val() == classUnits[y].unitId) {
						unitLabel = classUnits[y].unitTitle;
						unitNum = classUnits[y].unitNum;
						if (unitNum == "") {unitNum = "Unit";}
						break;
					}
				}
			}
			$(fieldId+"UTL").html(unitLabel);
			$(fieldId+"LUN").html(unitNum);

			$('#lr' + currentClassId + 'X' + currentSequence).removeClass('lessonRow'+tempUnitId);
			$('#lr' + currentClassId + 'X' + currentSequence).addClass('lessonRow'+$('#lessonUnit').val());
			
			if ($('#lessonUnit').val() == 0) {$(fieldId+"LUN").hide();} else {$(fieldId+"LUN").show();}
			
		}
		
		if ($('#lessonTitle').val() == '') {$(fieldId+"LTI").hide();} else {$(fieldId+"LTI").show();}
		if ($('#lessonText').val() == '' || userInfo.lessonEnabled == "N") {$(fieldId+"LH").hide();} else {$(fieldId+"LH").show();}
		if ($('#homeworkText').val() == '' || userInfo.tab2Enabled == "N") {$(fieldId+"HH").hide();} else {$(fieldId+"HH").show();}
		if ($('#notesText').val() == '' || userInfo.tab3Enabled == "N") {$(fieldId+"NH").hide();} else {$(fieldId+"NH").show();}
		if ($('#tab4Text').val() == '' || userInfo.tab4Enabled == "N") {$(fieldId+"4H").hide();} else {$(fieldId+"4H").show();}
		if ($('#tab5Text').val() == '' || userInfo.tab5Enabled == "N") {$(fieldId+"5H").hide();} else {$(fieldId+"5H").show();}
		if ($('#tab6Text').val() == '' || userInfo.tab6Enabled == "N") {$(fieldId+"6H").hide();} else {$(fieldId+"6H").show();}
		if (getStrategiesText() == '' || userInfo.strategiesEnabled == "N") {$(fieldId+"STRH").hide();} else {$(fieldId+"STRH").show();}
		if (getStandardsText() == '' || userInfo.sharedStandardsEnabled == "N") {$(fieldId+"SH").hide();} else {$(fieldId+"SH").show();}
		if (getSchoolStandardsText() == '' || userInfo.schoolStandardsEnabled == "N") {$(fieldId+"SSH").hide();} else {$(fieldId+"SSH").show();}
		if (getMyStandardsText() == '' || userInfo.myStandardsEnabled == "N") {$(fieldId+"MSH").hide();} else {$(fieldId+"MSH").show();}
		if (getAttachmentsText() == '') {$(fieldId+"AH").hide();} else {$(fieldId+"AH").show();}

		if ($('#CBallStIDs').prop('checked') == false) {
			$('.allStIDs').hide();
		}

		if ($('#CBallStText').prop('checked') == false) {
			$('.allStText').hide();
		}
		
		standardDescToolTip();
		
	}
	
	function bumpLesson() {

		if ($('#lessonLock').prop('checked')) {

			showErrorBox('To bump this lesson, you must first un-check the "Lock lesson to date" option');

		} else 	if (searchYearId != "" && searchYearId != userInfo.yearId) {
			
			showErrorBox('You can only bump lessons in the current school year');

		} else {
			
			clearNotification('#lessonErrorMsg');
			
			var posSpace=$('#lbDate').html().indexOf(' ');

			var lessonInfo = new Object();

			if (currentExtraLesson == 999) {
				lessonInfo.classId     = $('#customClass').val();
				lessonInfo.customDate  = formatDateToSave($.trim($('#customDate').val()));
			} else {
				lessonInfo.classId    = currentClassId;
				lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
			}

			lessonInfo.unitId = $('#lessonUnit').val();
			if (currentCollaborateSubjectId != 0) {
				lessonInfo.classId = currentCollaborateSubjectId;
				lessonInfo.unitId = currentCollaborateUnitId;
			}
			
			lessonInfo.extraLesson  = currentExtraLesson;
			lessonInfo.lessonText   = checkLessonText($('#lessonText').val());
			lessonInfo.homeworkText = checkHomeworkText($('#homeworkText').val());
			lessonInfo.notesText    = checkNotesText($('#notesText').val());
			lessonInfo.tab4Text     = checkTab4Text($('#tab4Text').val());
			lessonInfo.tab5Text     = checkTab5Text($('#tab5Text').val());
			lessonInfo.tab6Text     = checkTab6Text($('#tab6Text').val());

			var oldStart = new Date("January 1, 2015 " + $.trim($('#lbStart').html()));
			var newStart = new Date("January 1, 2015 " + $.trim($('#customStart').val()));
			var oldEnd = new Date("January 1, 2015 " + $.trim($('#lbEnd').html()));
			var newEnd = new Date("January 1, 2015 " + $.trim($('#customEnd').val()));
			var startDiff = oldStart - newStart;
			var endDiff = oldEnd - newEnd;
			if (startDiff == 0 && endDiff == 0 && currentExtraLesson == 0) {
				lessonInfo.customStart = "";
				lessonInfo.customEnd = "";
			} else {
				lessonInfo.customStart = $.trim($('#customStart').val());
				lessonInfo.customEnd = $.trim($('#customEnd').val());
			}

			lessonInfo.numDays      = $('#bumpSpin').val();
			lessonInfo.lessonTitle  = $.trim($('#lessonTitle').val());

			if ($('#lessonLock').prop('checked')) {
				lessonInfo.lessonLock = "Y";
			} else {
				lessonInfo.lessonLock = "N";
			}

			lessonInfo.strategySent = "Y";
			lessonInfo.strategyIds = new Array();
			if (strategies != null) {
				for (var x=0; x<strategies.length; x++) {
					lessonInfo.strategyIds[x] = strategies[x].id.substring(12);
				}
			}

			lessonInfo.standardDBIds = new Array();
			if (checkStandardsText() == true) {
				if (standards != null) {
					for (var x=0; x<standards.length; x++) {
						lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
					}
				}
			}
			
			lessonInfo.myStandardDBIds = new Array();
			if (checkMyStandardsText() == true) {
				if (myStandards != null) {
					for (var x=0; x<myStandards.length; x++) {
						lessonInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
					}
				}
			}
			
			lessonInfo.schoolStandardDBIds = new Array();
			if (checkSchoolStandardsText() == true) {
				if (schoolStandards != null) {
					for (var x=0; x<schoolStandards.length; x++) {
						lessonInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
					}
				}
			}

			lessonInfo.attachmentNames = new Array();
			lessonInfo.attachmentPrivate = new Array();
			lessonInfo.attachmentURL = new Array();
			var arrayPos = 0;
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					if (attachments[x].type == "lesson") {
						lessonInfo.attachmentNames[arrayPos] = attachments[x].filename;
						lessonInfo.attachmentPrivate[arrayPos] = attachments[x].privateFlag;
						lessonInfo.attachmentURL[arrayPos] = attachments[x].url;
						arrayPos++;
					}
				}
			}
			
			var valError = false;
			
			if ($.trim($('#customStart').val()) != '') {
				if (valTime($.trim($('#customStart').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid Start Time');
				}
			}
			
			if ($.trim($('#customEnd').val()) != '') {
				if (valTime($.trim($('#customEnd').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid End Time');
				}
			}
			
			if (isNaN(lessonInfo.numDays) || (parseFloat(lessonInfo.numDays) != parseInt(lessonInfo.numDays))) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Bump Days to a value between 1 and 10');
			} else if (lessonInfo.numDays < 0 || lessonInfo.numDays > 10) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Bump Days to a value between 1 and 10');
			}

			if (valError == false) {
				if (paymentNeeded == false) {
					showLoading();
					$.post('bumpLesson', lessonInfo, lessonBumped, "json");
				} else {
					showExpiredMsg();
				}
			}
		}
	}

	function lessonBumped(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
			
				undoAction = "B";
				var posSpace = $('#lbDate').html().indexOf(' ');
				undoDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
				undoExtraLesson = currentExtraLesson;
				undoClassId = currentClassId;
				undoNumDays = $('#bumpSpin').val();
				
				action = 'bumpLesson';
				hideBox('#editLessonBox', 10);

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				getLessons();

			}
		}
	}
	
	function bumpBackLesson() {

		if ($('#lessonLock').prop('checked')) {

			showErrorBox('To bump this lesson, you must first un-check the "Lock lesson to date" option');

		} else 	if (searchYearId != "" && searchYearId != userInfo.yearId) {
			
			showErrorBox('You can only bump lessons in the current school year');

		} else {
		
			clearNotification('#lessonErrorMsg');
			
			var posSpace=$('#lbDate').html().indexOf(' ');

			var lessonInfo = new Object();

			if (currentExtraLesson == 999) {
				lessonInfo.classId     = $('#customClass').val();
				lessonInfo.customDate  = formatDateToSave($.trim($('#customDate').val()));
			} else {
				lessonInfo.classId    = currentClassId;
				lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
			}

			lessonInfo.unitId = $('#lessonUnit').val();
			if (currentCollaborateSubjectId != 0) {
				lessonInfo.classId = currentCollaborateSubjectId;
				lessonInfo.unitId = currentCollaborateUnitId;
			}
			
			lessonInfo.extraLesson  = currentExtraLesson;
			lessonInfo.lessonText   = checkLessonText($('#lessonText').val());
			lessonInfo.homeworkText = checkHomeworkText($('#homeworkText').val());
			lessonInfo.notesText    = checkNotesText($('#notesText').val());
			lessonInfo.tab4Text     = checkTab4Text($('#tab4Text').val());
			lessonInfo.tab5Text     = checkTab5Text($('#tab5Text').val());
			lessonInfo.tab6Text     = checkTab6Text($('#tab6Text').val());

			var oldStart = new Date("January 1, 2015 " + $.trim($('#lbStart').html()));
			var newStart = new Date("January 1, 2015 " + $.trim($('#customStart').val()));
			var oldEnd = new Date("January 1, 2015 " + $.trim($('#lbEnd').html()));
			var newEnd = new Date("January 1, 2015 " + $.trim($('#customEnd').val()));
			var startDiff = oldStart - newStart;
			var endDiff = oldEnd - newEnd;
			if (startDiff == 0 && endDiff == 0 && currentExtraLesson == 0) {
				lessonInfo.customStart = "";
				lessonInfo.customEnd = "";
			} else {
				lessonInfo.customStart = $.trim($('#customStart').val());
				lessonInfo.customEnd = $.trim($('#customEnd').val());
			}

			lessonInfo.numDays      = $('#backSpin').val() * -1;
			lessonInfo.lessonTitle  = $.trim($('#lessonTitle').val());

			if ($('#lessonLock').prop('checked')) {
				lessonInfo.lessonLock = "Y";
			} else {
				lessonInfo.lessonLock = "N";
			}

			lessonInfo.strategySent = "Y";
			lessonInfo.strategyIds = new Array();
			if (strategies != null) {
				for (var x=0; x<strategies.length; x++) {
					lessonInfo.strategyIds[x] = strategies[x].id.substring(12);
				}
			}

			lessonInfo.standardDBIds = new Array();
			if (checkStandardsText() == true) {
				if (standards != null) {
					for (var x=0; x<standards.length; x++) {
						lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
					}
				}
			}
			
			lessonInfo.myStandardDBIds = new Array();
			if (checkMyStandardsText() == true) {
				if (myStandards != null) {
					for (var x=0; x<myStandards.length; x++) {
						lessonInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
					}
				}
			}
			
			lessonInfo.schoolStandardDBIds = new Array();
			if (checkSchoolStandardsText() == true) {
				if (schoolStandards != null) {
					for (var x=0; x<schoolStandards.length; x++) {
						lessonInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
					}
				}
			}

			lessonInfo.attachmentNames = new Array();
			lessonInfo.attachmentPrivate = new Array();
			lessonInfo.attachmentURL = new Array();
			var arrayPos = 0;
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					if (attachments[x].type == "lesson") {
						lessonInfo.attachmentNames[arrayPos] = attachments[x].filename;
						lessonInfo.attachmentPrivate[arrayPos] = attachments[x].privateFlag;
						lessonInfo.attachmentURL[arrayPos] = attachments[x].url;
						arrayPos++;
					}
				}
			}
			
			var valError = false;
			
			if ($.trim($('#customStart').val()) != '') {
				if (valTime($.trim($('#customStart').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid Start Time');
				}
			}
			
			if ($.trim($('#customEnd').val()) != '') {
				if (valTime($.trim($('#customEnd').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid End Time');
				}
			}
			
			if (isNaN(lessonInfo.numDays) || (parseFloat(lessonInfo.numDays) != parseInt(lessonInfo.numDays))) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Bump Back Days to a value between 1 and 10');
			} else if (lessonInfo.numDays < -10 || lessonInfo.numDays > -1) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Bump Back Days to a value between 1 and 10');
			}

			if (valError == false) {
				if (paymentNeeded == false) {
					var errorString = "";
					if ($('#backSpin').val() == 1) {errorString = "lesson";} else {errorString = $('#backSpin').val() + " lessons";}
					if (confirm('This will remove the ' + errorString + ' prior to the current lesson. Are you sure you want to bump?')) {
						showLoading();
						$.post('bumpLesson', lessonInfo, lessonBumpedBack, "json");
					}
				} else {
					showExpiredMsg();
				}
			}
		}
	}

	function lessonBumpedBack(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
			
				deletedLessons = data.lessonIds;
				undoAction = "BB";
				var posSpace = $('#lbDate').html().indexOf(' ');
				undoDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
				undoExtraLesson = currentExtraLesson;
				undoClassId = currentClassId;
				undoNumDays = $('#backSpin').val();
				
				action = 'bumpLesson';
				hideBox('#editLessonBox', 10);

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
				getLessons();

			}
		}
	}

	function extendLesson() {
		
		if (searchYearId != "" && searchYearId != userInfo.yearId) {
		
			showErrorBox('You can only extend lessons in the current school year');

		} else {

			clearNotification('#lessonErrorMsg');
			
			var posSpace=$('#lbDate').html().indexOf(' ');

			var lessonInfo = new Object();

			if (currentExtraLesson == 999) {
				lessonInfo.classId     = $('#customClass').val();
				lessonInfo.customDate  = formatDateToSave($.trim($('#customDate').val()));
			} else {
				lessonInfo.classId    = currentClassId;
				lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
			}

			lessonInfo.unitId = $('#lessonUnit').val();
			if (currentCollaborateSubjectId != 0) {
				lessonInfo.classId = currentCollaborateSubjectId;
				lessonInfo.unitId = currentCollaborateUnitId;
			}
			
			lessonInfo.extraLesson  = currentExtraLesson;
			lessonInfo.lessonText   = checkLessonText($('#lessonText').val());
			lessonInfo.homeworkText = checkHomeworkText($('#homeworkText').val());
			lessonInfo.notesText    = checkNotesText($('#notesText').val());
			lessonInfo.tab4Text     = checkTab4Text($('#tab4Text').val());
			lessonInfo.tab5Text     = checkTab5Text($('#tab5Text').val());
			lessonInfo.tab6Text     = checkTab6Text($('#tab6Text').val());

			var oldStart = new Date("January 1, 2015 " + $.trim($('#lbStart').html()));
			var newStart = new Date("January 1, 2015 " + $.trim($('#customStart').val()));
			var oldEnd = new Date("January 1, 2015 " + $.trim($('#lbEnd').html()));
			var newEnd = new Date("January 1, 2015 " + $.trim($('#customEnd').val()));
			var startDiff = oldStart - newStart;
			var endDiff = oldEnd - newEnd;
			if (startDiff == 0 && endDiff == 0 && currentExtraLesson == 0) {
				lessonInfo.customStart = "";
				lessonInfo.customEnd = "";
			} else {
				lessonInfo.customStart = $.trim($('#customStart').val());
				lessonInfo.customEnd = $.trim($('#customEnd').val());
			}

			lessonInfo.numDays      = $('#extendSpin').val();
			lessonInfo.lessonTitle  = $.trim($('#lessonTitle').val());

			if ($('#lessonLock').prop('checked')) {
				lessonInfo.lessonLock = "Y";
			} else {
				lessonInfo.lessonLock = "N";
			}

			lessonInfo.strategySent = "Y";
			lessonInfo.strategyIds = new Array();
			if (strategies != null) {
				for (var x=0; x<strategies.length; x++) {
					lessonInfo.strategyIds[x] = strategies[x].id.substring(12);
				}
			}

			lessonInfo.standardDBIds = new Array();
			if (checkStandardsText() == true) {
				if (standards != null) {
					for (var x=0; x<standards.length; x++) {
						lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
					}
				}
			}
			
			lessonInfo.myStandardDBIds = new Array();
			if (checkMyStandardsText() == true) {
				if (myStandards != null) {
					for (var x=0; x<myStandards.length; x++) {
						lessonInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
					}
				}
			}
			
			lessonInfo.schoolStandardDBIds = new Array();
			if (checkSchoolStandardsText() == true) {
				if (schoolStandards != null) {
					for (var x=0; x<schoolStandards.length; x++) {
						lessonInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
					}
				}
			}
			
			lessonInfo.attachmentNames = new Array();
			lessonInfo.attachmentPrivate = new Array();
			lessonInfo.attachmentURL = new Array();
			var arrayPos = 0;
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					if (attachments[x].type == "lesson") {
						lessonInfo.attachmentNames[arrayPos] = attachments[x].filename;
						lessonInfo.attachmentPrivate[arrayPos] = attachments[x].privateFlag;
						lessonInfo.attachmentURL[arrayPos] = attachments[x].url;
						arrayPos++;
					}
				}
			}
			
			var valError = false;
			
			if ($.trim($('#customStart').val()) != '') {
				if (valTime($.trim($('#customStart').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid Start Time');
				}
			}
			
			if ($.trim($('#customEnd').val()) != '') {
				if (valTime($.trim($('#customEnd').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid End Time');
				}
			}

			if (isNaN(lessonInfo.numDays) || (parseFloat(lessonInfo.numDays) != parseInt(lessonInfo.numDays))) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Extend Days to a value between 1 and 10');
			} else if (lessonInfo.numDays < 1 || lessonInfo.numDays > 10) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Extend Days to a value between 1 and 10');
			}

			if (valError == false) {
				if (paymentNeeded == false) {
					showLoading();
					$.post('extendLesson', lessonInfo, lessonExtended, "json");
				} else {
					showExpiredMsg();
				}
			}

		}
	}
	
	function lessonExtended(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				undoAction = "E";
				var posSpace = $('#lbDate').html().indexOf(' ');
				undoDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
				undoExtraLesson = currentExtraLesson;
				undoClassId = currentClassId;
				undoNumDays = $('#extendSpin').val();

				action = 'extendLesson';
				hideBox('#editLessonBox', 10);

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
				getLessons();
			}
		}
	}

	function extendStandards() {
		
		if (searchYearId != "" && searchYearId != userInfo.yearId) {
		
			showErrorBox('You can only extend standards for lessons in the current school year');

		} else {

			clearNotification('#lessonErrorMsg');
			
			var posSpace=$('#lbDate').html().indexOf(' ');

			var lessonInfo = new Object();

			lessonInfo.classId    = currentClassId;
			lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
			lessonInfo.extraLesson  = currentExtraLesson;
			lessonInfo.numDays      = $('#stanSpin').val();
			
			if (currentCollaborateSubjectId != 0) {lessonInfo.classId = currentCollaborateSubjectId;}
			
			var valError = false;

			lessonInfo.standardDBIds = new Array();
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			} else {
				showErrorBox('Current lesson has no standards to extend');
				valError = true;
			}
			
			if (isNaN(lessonInfo.numDays) || (parseFloat(lessonInfo.numDays) != parseInt(lessonInfo.numDays))) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Extend Standard Days to a value between 1 and 10');
			} else if (lessonInfo.numDays < 1 || lessonInfo.numDays > 10) {
				valError = true;
				showNotification('#lessonErrorMsg', 'Please set Extend Standard Days to a value between 1 and 10');
			}

			if (valError == false) {
				if (paymentNeeded == false) {
					showLoading();
					$.post('extendStandards', lessonInfo, standardsExtended, "json");
				} else {
					showExpiredMsg();
				}
			}

		}
	}

	function standardsExtended(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				action = 'extendStandards';

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
				getLessons();
			}
		}
	}
	
	$('#closeLessonDelete').click(function() {
		hideBox('#lessonDeleteBox', 30);
	});

	$('#cancelLessonDelete').click(function() {
		hideBox('#lessonDeleteBox', 30);
	});
	
	$('#deleteShift').click(function() {
		hideBox('#lessonDeleteBox', 30);
		deleteLesson("Y");
	});

	$('#deleteNoShift').click(function() {
		hideBox('#lessonDeleteBox', 30);
		deleteLesson("N");
	});
	
	function deleteLesson(shiftLessons) {
	
		undoShiftLessons = shiftLessons;
		
		clearNotification('#lessonErrorMsg');
		
		var posSpace=$('#lbDate').html().indexOf(' ');
		
		lessonInfo = new Object();
		lessonInfo.extraLesson = currentExtraLesson;
		lessonInfo.classId    = currentClassId;
		lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
		lessonInfo.numDays    = 1;
		lessonInfo.shiftLessons = shiftLessons;

		if (currentCollaborateSubjectId != 0) {lessonInfo.classId = currentCollaborateSubjectId;}
		
		if (paymentNeeded == false) {
			showLoading();
			$.getJSON('deleteLesson', lessonInfo, lessonDeleted);
		} else {
			showExpiredMsg();
		}
	}		
	
	function lessonDeleted(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				var posSpace=$('#lbDate').html().indexOf(' ');
				
				deletedLessons  = data.lessonIds;
				undoAction      = "D";
				undoDate        = formatDateToSave($('#lbDate').html().substring(posSpace+1));
				undoExtraLesson = currentExtraLesson
				undoClassId     = currentClassId;
				undoNumDays     = 1;

				action = 'deleteLesson';
				hideBox('#editLessonBox', 10);

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
				getLessons();
			}
		}
	}
	
/** ** CANCEL LESSON selected, close lesson box *** */

	$('#cancelLesson').click(function() {
		clearNotification('#lessonErrorMsg');
		autoSaved = false;
		saveLesson = false;
		clearTimeout(autoSaveTimeOut);
		hideBox('#editLessonBox', 10);
	});

	$('#closeLesson').click(function() {
		clearNotification('#lessonErrorMsg');
		autoSaved = false;
		saveLesson = false;
		clearTimeout(autoSaveTimeOut);
		hideBox('#editLessonBox', 10);
	});

	$('#addClassButton').click(function() {
		showAddClass();
	});

	$('#addClass2').click(function() {
		showAddClass();
	});
	
	function showAddClass () {
		
		$('#classAction').hide();	
		
		noClass = null;
   		loadNoClassTable();
   		
		clearNotification('#classErrorMsg');
		
		$('#className').val('');
		$('#classStartDate').val(formatDateToShow(userInfo.firstDay));
		$('#classEndDate').val(formatDateToShow(userInfo.lastDay));

		$('#useSchoolStart').prop('checked',true);
		$('#classStartDate').prop("disabled", true);
		$('#useSchoolEnd').prop('checked',true);
		$('#classEndDate').prop("disabled", true);
		
		$('#mondayStart').prop("disabled", false);
		$('#mondayEnd').prop("disabled", false);
		$('#tuesdayStart').prop("disabled", false);
		$('#tuesdayEnd').prop("disabled", false);
		$('#wednesdayStart').prop("disabled", false);
		$('#wednesdayEnd').prop("disabled", false);
		$('#thursdayStart').prop("disabled", false);
		$('#thursdayEnd').prop("disabled", false);
		$('#fridayStart').prop("disabled", false);
		$('#fridayEnd').prop("disabled", false);
		$('#sundayStart').prop("disabled", true);
		$('#sundayEnd').prop("disabled", true);
		$('#saturdayStart').prop("disabled", true);
		$('#saturdayEnd').prop("disabled", true);

		$('#mondayStart2').prop("disabled", false);
		$('#mondayEnd2').prop("disabled", false);
		$('#tuesdayStart2').prop("disabled", false);
		$('#tuesdayEnd2').prop("disabled", false);
		$('#wednesdayStart2').prop("disabled", false);
		$('#wednesdayEnd2').prop("disabled", false);
		$('#thursdayStart2').prop("disabled", false);
		$('#thursdayEnd2').prop("disabled", false);
		$('#fridayStart2').prop("disabled", false);
		$('#fridayEnd2').prop("disabled", false);
		$('#sundayStart2').prop("disabled", true);
		$('#sundayEnd2').prop("disabled", true);
		$('#saturdayStart2').prop("disabled", true);
		$('#saturdayEnd2').prop("disabled", true);
		
		$('#mondayStart').val('');
		$('#mondayEnd').val('');
		$('#tuesdayStart').val('');
		$('#tuesdayEnd').val('');
		$('#wednesdayStart').val('');
		$('#wednesdayEnd').val('');
		$('#thursdayStart').val('');
		$('#thursdayEnd').val('');
		$('#fridayStart').val('');
		$('#fridayEnd').val('');
		$('#sundayStart').val('');
		$('#sundayEnd').val('');
		$('#saturdayStart').val('');
		$('#saturdayEnd').val('');

		$('#mondayStart2').val('');
		$('#mondayEnd2').val('');
		$('#tuesdayStart2').val('');
		$('#tuesdayEnd2').val('');
		$('#wednesdayStart2').val('');
		$('#wednesdayEnd2').val('');
		$('#thursdayStart2').val('');
		$('#thursdayEnd2').val('');
		$('#fridayStart2').val('');
		$('#fridayEnd2').val('');
		$('#sundayStart2').val('');
		$('#sundayEnd2').val('');
		$('#saturdayStart2').val('');
		$('#saturdayEnd2').val('');
		
		$('#mondayCheck').prop('checked',true);
		$('#tuesdayCheck').prop('checked',true);
		$('#wednesdayCheck').prop('checked',true);
		$('#thursdayCheck').prop('checked',true);
		$('#fridayCheck').prop('checked',true);
		$('#sundayCheck').prop('checked',false);
		$('#saturdayCheck').prop('checked',false);

		$('#mondayCheck2').prop('checked',true);
		$('#tuesdayCheck2').prop('checked',true);
		$('#wednesdayCheck2').prop('checked',true);
		$('#thursdayCheck2').prop('checked',true);
		$('#fridayCheck2').prop('checked',true);
		$('#sundayCheck2').prop('checked',false);
		$('#saturdayCheck2').prop('checked',false);
		
		if (cDays > 0) {
			var dc, ds, de;
			for (var x=0; x<cDays; x++) {
				dc = '#dayCheck' + x;
				ds = '#dayStart' + x;
				de = '#dayEnd' + x;
				$(dc).prop('checked',true);
				$(ds).val('');
				$(de).val('');
			}
			$('#firstDayName').html('Day 1');
		} else {
			$('#firstDayName').html('Monday');
		}
		
		$('#classSettingsName').html('Add new class');
		
		$('input[name="collaborate"]')[0].checked = true;
		classInfo.collaborateType = 0;
		checkCollaborate();
		
		showBox('#editClassBox', 10);
		
		$('#classFontFamily').val(2);
		$('#classFontSize').val(10);
		$('#cBL1').css({'background-color':'#D3D7CF'});
		$('#cBL1').addClass('bttnPressed');
		$('#cIL1').css({'background-color':'#eee'});
		$('#cIL1').removeClass('bttnPressed');
		$('#cUL1').css({'background-color':'#eee'});
		$('#cUL1').removeClass('bttnPressed');
		
		$("#selectedColor").spectrum({
		    showPaletteOnly: true,
		    togglePaletteOnly: true,
		    togglePaletteMoreText: 'more',
		    togglePaletteLessText: 'less',
		    preferredFormat: "hex",
		    color: colors1[6],
		    palette: [colors1]
		});
		
		$("#selectedTitleColor").spectrum({
		    showPaletteOnly: true,
		    togglePaletteOnly: true,
		    togglePaletteMoreText: 'more',
		    togglePaletteLessText: 'less',
		    color: '#FFFFFF',
		    preferredFormat: "hex",
		    palette: [colors1]
		});
		
		action = "newClass";
		
		$('#className').focus();
		
	}
	
	function editClassSettings() {

		$('#classAction').show();	

		clearNotification('#classErrorMsg');
		
		$('#className').val(classInfo.className);
		$('#classStartDate').val(formatDateToShow(classInfo.classStartDate));
		$('#classEndDate').val(formatDateToShow(classInfo.classEndDate));
		
		// save to check for shifting lessons
		classStartDay = classInfo.classStartDate;
		
		//load font style buttons
		if (classInfo.classLabelBold == "Y") {
			$('#cBL1').css({'background-color':'#D3D7CF'});
			$('#cBL1').addClass('bttnPressed');
		} else {
			$('#cBL1').css({'background-color':'#eee'});
			$('#cBL1').removeClass('bttnPressed');
		}
		if (classInfo.classLabelItalic == "Y") {
			$('#cIL1').css({'background-color':'#D3D7CF'});
			$('#cIL1').addClass('bttnPressed');
		} else {
			$('#cIL1').css({'background-color':'#eee'});
			$('#cIL1').removeClass('bttnPressed');
		}
		if (classInfo.classLabelUnderline == "Y") {
			$('#cUL1').css({'background-color':'#D3D7CF'});
			$('#cUL1').addClass('bttnPressed');
		} else {
			$('#cUL1').css({'background-color':'#eee'});
			$('#cUL1').removeClass('bttnPressed');
		}
		
		if (classInfo.useSchoolStart == "Y") {
			$('#useSchoolStart').prop('checked',true);
			$('#classStartDate').val(formatDateToShow(userInfo.firstDay));
			$('#classStartDate').prop("disabled", true);
		} else {
			$('#useSchoolStart').prop('checked',false);
			$('#classStartDate').prop("disabled", false);
		}
		
		if (classInfo.useSchoolEnd == "Y") {
			$('#useSchoolEnd').prop('checked',true);
			$('#classEndDate').val(formatDateToShow(userInfo.lastDay));
			$('#classEndDate').prop("disabled", true);
		} else {
			$('#useSchoolEnd').prop('checked',false);
			$('#classEndDate').prop("disabled", false);
		}
		
		if (classInfo.mondayTeach == "Y") {
			$('#mondayCheck').prop('checked',true);
			$('#mondayStart').prop("disabled", false);
			$('#mondayEnd').prop("disabled", false);
			$('#mondayStart').val(classInfo.mondayStartTime);
			$('#mondayEnd').val(classInfo.mondayEndTime);
		} else {
			$('#mondayCheck').prop('checked',false);
			$('#mondayStart').prop("disabled", true);
			$('#mondayEnd').prop("disabled", true);
			$('#mondayStart').val("");
			$('#mondayEnd').val("");
		}
		
		if (classInfo.tuesdayTeach == "Y") {
			$('#tuesdayCheck').prop('checked',true);
			$('#tuesdayStart').prop("disabled", false);
			$('#tuesdayEnd').prop("disabled", false);
			$('#tuesdayStart').val(classInfo.tuesdayStartTime);
			$('#tuesdayEnd').val(classInfo.tuesdayEndTime);
		} else {
			$('#tuesdayCheck').prop('checked',false);
			$('#tuesdayStart').prop("disabled", true);
			$('#tuesdayEnd').prop("disabled", true);
			$('#tuesdayStart').val("");
			$('#tuesdayEnd').val("");
		}
		
		if (classInfo.wednesdayTeach == "Y") {
			$('#wednesdayCheck').prop('checked',true);
			$('#wednesdayStart').prop("disabled", false);
			$('#wednesdayEnd').prop("disabled", false);
			$('#wednesdayStart').val(classInfo.wednesdayStartTime);
			$('#wednesdayEnd').val(classInfo.wednesdayEndTime);
		} else {
			$('#wednesdayCheck').prop('checked',false);
			$('#wednesdayStart').prop("disabled", true);
			$('#wednesdayEnd').prop("disabled", true);
			$('#wednesdayStart').val("");
			$('#wednesdayEnd').val("");
		}
		
		if (classInfo.thursdayTeach == "Y") {
			$('#thursdayCheck').prop('checked',true);
			$('#thursdayStart').prop("disabled", false);
			$('#thursdayEnd').prop("disabled", false);
			$('#thursdayStart').val(classInfo.thursdayStartTime);
			$('#thursdayEnd').val(classInfo.thursdayEndTime);
		} else {
			$('#thursdayCheck').prop('checked',false);
			$('#thursdayStart').prop("disabled", true);
			$('#thursdayEnd').prop("disabled", true);
			$('#thursdayStart').val("");
			$('#thursdayEnd').val("");
		}
		
		if (classInfo.fridayTeach == "Y") {
			$('#fridayCheck').prop('checked',true);
			$('#fridayStart').prop("disabled", false);
			$('#fridayEnd').prop("disabled", false);
			$('#fridayStart').val(classInfo.fridayStartTime);
			$('#fridayEnd').val(classInfo.fridayEndTime);
		} else {
			$('#fridayCheck').prop('checked',false);
			$('#fridayStart').prop("disabled", true);
			$('#fridayEnd').prop("disabled", true);
			$('#fridayStart').val("");
			$('#fridayEnd').val("");
		}

		if (classInfo.saturdayTeach == "Y") {
			$('#saturdayCheck').prop('checked',true);
			$('#saturdayStart').prop("disabled", false);
			$('#saturdayEnd').prop("disabled", false);
			$('#saturdayStart').val(classInfo.saturdayStartTime);
			$('#saturdayEnd').val(classInfo.saturdayEndTime);
		} else {
			$('#saturdayCheck').prop('checked',false);
			$('#saturdayStart').prop("disabled", true);
			$('#saturdayEnd').prop("disabled", true);
			$('#saturdayStart').val("");
			$('#saturdayEnd').val("");
		}

		if (classInfo.sundayTeach == "Y") {
			$('#sundayCheck').prop('checked',true);
			$('#sundayStart').prop("disabled", false);
			$('#sundayEnd').prop("disabled", false);
			$('#sundayStart').val(classInfo.sundayStartTime);
			$('#sundayEnd').val(classInfo.sundayEndTime);
		} else {
			$('#sundayCheck').prop('checked',false);
			$('#sundayStart').prop("disabled", true);
			$('#sundayEnd').prop("disabled", true);
			$('#sundayStart').val("");
			$('#sundayEnd').val("");
		}

		if (classInfo.wk2mondayTeach == "Y") {
			$('#mondayCheck2').prop('checked',true);
			$('#mondayStart2').prop("disabled", false);
			$('#mondayEnd2').prop("disabled", false);
			$('#mondayStart2').val(classInfo.wk2mondayStartTime);
			$('#mondayEnd2').val(classInfo.wk2mondayEndTime);
		} else {
			$('#mondayCheck2').prop('checked',false);
			$('#mondayStart2').prop("disabled", true);
			$('#mondayEnd2').prop("disabled", true);
			$('#mondayStart2').val("");
			$('#mondayEnd2').val("");
		}
		
		if (classInfo.wk2tuesdayTeach == "Y") {
			$('#tuesdayCheck2').prop('checked',true);
			$('#tuesdayStart2').prop("disabled", false);
			$('#tuesdayEnd2').prop("disabled", false);
			$('#tuesdayStart2').val(classInfo.wk2tuesdayStartTime);
			$('#tuesdayEnd2').val(classInfo.wk2tuesdayEndTime);
		} else {
			$('#tuesdayCheck2').prop('checked',false);
			$('#tuesdayStart2').prop("disabled", true);
			$('#tuesdayEnd2').prop("disabled", true);
			$('#tuesdayStart2').val("");
			$('#tuesdayEnd2').val("");
		}
		
		if (classInfo.wk2wednesdayTeach == "Y") {
			$('#wednesdayCheck2').prop('checked',true);
			$('#wednesdayStart2').prop("disabled", false);
			$('#wednesdayEnd2').prop("disabled", false);
			$('#wednesdayStart2').val(classInfo.wk2wednesdayStartTime);
			$('#wednesdayEnd2').val(classInfo.wk2wednesdayEndTime);
		} else {
			$('#wednesdayCheck2').prop('checked',false);
			$('#wednesdayStart2').prop("disabled", true);
			$('#wednesdayEnd2').prop("disabled", true);
			$('#wednesdayStart2').val("");
			$('#wednesdayEnd2').val("");
		}
		
		if (classInfo.wk2thursdayTeach == "Y") {
			$('#thursdayCheck2').prop('checked',true);
			$('#thursdayStart2').prop("disabled", false);
			$('#thursdayEnd2').prop("disabled", false);
			$('#thursdayStart2').val(classInfo.wk2thursdayStartTime);
			$('#thursdayEnd2').val(classInfo.wk2thursdayEndTime);
		} else {
			$('#thursdayCheck2').prop('checked',false);
			$('#thursdayStart2').prop("disabled", true);
			$('#thursdayEnd2').prop("disabled", true);
			$('#thursdayStart2').val("");
			$('#thursdayEnd2').val("");
		}
		
		if (classInfo.wk2fridayTeach == "Y") {
			$('#fridayCheck2').prop('checked',true);
			$('#fridayStart2').prop("disabled", false);
			$('#fridayEnd2').prop("disabled", false);
			$('#fridayStart2').val(classInfo.wk2fridayStartTime);
			$('#fridayEnd2').val(classInfo.wk2fridayEndTime);
		} else {
			$('#fridayCheck2').prop('checked',false);
			$('#fridayStart2').prop("disabled", true);
			$('#fridayEnd2').prop("disabled", true);
			$('#fridayStart2').val("");
			$('#fridayEnd2').val("");
		}

		if (classInfo.wk2saturdayTeach == "Y") {
			$('#saturdayCheck2').prop('checked',true);
			$('#saturdayStart2').prop("disabled", false);
			$('#saturdayEnd2').prop("disabled", false);
			$('#saturdayStart2').val(classInfo.wk2saturdayStartTime);
			$('#saturdayEnd2').val(classInfo.wk2saturdayEndTime);
		} else {
			$('#saturdayCheck2').prop('checked',false);
			$('#saturdayStart2').prop("disabled", true);
			$('#saturdayEnd2').prop("disabled", true);
			$('#saturdayStart2').val("");
			$('#saturdayEnd2').val("");
		}

		if (classInfo.wk2sundayTeach == "Y") {
			$('#sundayCheck2').prop('checked',true);
			$('#sundayStart2').prop("disabled", false);
			$('#sundayEnd2').prop("disabled", false);
			$('#sundayStart2').val(classInfo.wk2sundayStartTime);
			$('#sundayEnd2').val(classInfo.wk2sundayEndTime);
		} else {
			$('#sundayCheck2').prop('checked',false);
			$('#sundayStart2').prop("disabled", true);
			$('#sundayEnd2').prop("disabled", true);
			$('#sundayStart2').val("");
			$('#sundayEnd2').val("");
		}
		
		if (cDays > 0) {
			var dc, ds, de;
			for (var x=0; x<cDays; x++) {
				dc = '#dayCheck' + x;
				ds = '#dayStart' + x;
				de = '#dayEnd' + x;
				if (dayTeach[x] == "Y") {$(dc).prop('checked',true);} else {$(dc).prop('checked',false);}
				$(ds).val(startTime[x]);
				$(de).val(endTime[x]);
			}
			$('#firstDayName').html('Day 1');
		} else {
			$('#firstDayName').html('Monday');
		}
		
		$('#classSettingsName').html(classInfo.className);

		showBox('#editClassBox', 10);
		
		action = "updateClass";
		
		var tempCurrentColor = (classInfo.color<=45?colors1[classInfo.color]:classInfo.color);
		
		$('#classFontFamily').val(classInfo.titleFont);
		$('#classFontSize').val(classInfo.titleSize);
		
		$("#selectedColor").spectrum({
		    showPaletteOnly: true,
		    togglePaletteOnly: true,
		    togglePaletteMoreText: 'more',
		    togglePaletteLessText: 'less',
		    preferredFormat: "hex",
		    color: tempCurrentColor,
		    palette: [colors1]
		});
		
		$("#selectedTitleColor").spectrum({
		    showPaletteOnly: true,
		    togglePaletteOnly: true,
		    togglePaletteMoreText: 'more',
		    togglePaletteLessText: 'less',
		    color: classInfo.titleColor,
		    preferredFormat: "hex",
		    palette: [colors1]
		});

		$('#className').focus();

		checkCollaborate();
		
	}

//	$('#colorOptionsMore').click(function() {
//		$('#colorpicker').css({top:event.pageY-50, left: event.pageX-45});
//		$('#colorpicker').farbtastic('#selectedColor');
//	})

	$('#equalSize').click(function() {
		if ($('#equalSize').prop('checked')) {
			$('#boxSize').prop("disabled", true);
			$('#adjustToFit').prop("disabled", false);
			$('#adjustToFit').prop("checked", true);
		} else {
			$('#boxSize').prop("disabled", true);
			$('#adjustToFit').prop("disabled", true);
			$('#adjustToFit').prop("checked", false);
		}		   
	});

	$('#adjustToFit').click(function() {
		if ($('#adjustToFit').prop('checked')) {
			$('#boxSize').prop("disabled", true);
		} else {
			$('#boxSize').prop("disabled", false);
		}		   
	});
	
	
/** ** TEACH DAY clicked, check if Start/End Times need to be enabled/disabled ** */
	
	$('#mondayCheck').click(function() {
		if ($('#mondayCheck').prop('checked')) {
			$('#mondayStart').prop("disabled", false);
			$('#mondayEnd').prop("disabled", false);
		} else {
			$('#mondayStart').val('');
			$('#mondayEnd').val('');
			$('#mondayStart').prop("disabled", true);
			$('#mondayEnd').prop("disabled", true);
		}		   
	});
	
	$('#tuesdayCheck').click(function() {
		if ($('#tuesdayCheck').prop('checked')) {
			$('#tuesdayStart').prop("disabled", false);
			$('#tuesdayEnd').prop("disabled", false);
		} else {
			$('#tuesdayStart').val('');
			$('#tuesdayEnd').val('');
			$('#tuesdayStart').prop("disabled", true);
			$('#tuesdayEnd').prop("disabled", true);
		}		   
	});

	$('#wednesdayCheck').click(function() {
		if ($('#wednesdayCheck').prop('checked')) {
			$('#wednesdayStart').prop("disabled", false);
			$('#wednesdayEnd').prop("disabled", false);
		} else {
			$('#wednesdayStart').val('');
			$('#wednesdayEnd').val('');
			$('#wednesdayStart').prop("disabled", true);
			$('#wednesdayEnd').prop("disabled", true);
		}		   
	});
	
	$('#thursdayCheck').click(function() {
		if ($('#thursdayCheck').prop('checked')) {
			$('#thursdayStart').prop("disabled", false);
			$('#thursdayEnd').prop("disabled", false);
		} else {
			$('#thursdayStart').val('');
			$('#thursdayEnd').val('');
			$('#thursdayStart').prop("disabled", true);
			$('#thursdayEnd').prop("disabled", true);
		}		   
	});
	
	$('#fridayCheck').click(function() {
		if ($('#fridayCheck').prop('checked')) {
			$('#fridayStart').prop("disabled", false);
			$('#fridayEnd').prop("disabled", false);
		} else {
			$('#fridayStart').val('');
			$('#fridayEnd').val('');
			$('#fridayStart').prop("disabled", true);
			$('#fridayEnd').prop("disabled", true);
		}		   
	});
	
	$('#saturdayCheck').click(function() {
		if ($('#saturdayCheck').prop('checked')) {
			$('#saturdayStart').prop("disabled", false);
			$('#saturdayEnd').prop("disabled", false);
		} else {
			$('#saturdayStart').val('');
			$('#saturdayEnd').val('');
			$('#saturdayStart').prop("disabled", true);
			$('#saturdayEnd').prop("disabled", true);
		}		   
	});
	
	$('#sundayCheck').click(function() {
		if ($('#sundayCheck').prop('checked')) {
			$('#sundayStart').prop("disabled", false);
			$('#sundayEnd').prop("disabled", false);
		} else {
			$('#sundayStart').val('');
			$('#sundayEnd').val('');
			$('#sundayStart').prop("disabled", true);
			$('#sundayEnd').prop("disabled", true);
		}		   
	});

	$('#mondayCheck2').click(function() {
		if ($('#mondayCheck2').prop('checked')) {
			$('#mondayStart2').prop("disabled", false);
			$('#mondayEnd2').prop("disabled", false);
		} else {
			$('#mondayStart2').val('');
			$('#mondayEnd2').val('');
			$('#mondayStart2').prop("disabled", true);
			$('#mondayEnd2').prop("disabled", true);
		}		   
	});
	
	$('#tuesdayCheck2').click(function() {
		if ($('#tuesdayCheck2').prop('checked')) {
			$('#tuesdayStart2').prop("disabled", false);
			$('#tuesdayEnd2').prop("disabled", false);
		} else {
			$('#tuesdayStart2').val('');
			$('#tuesdayEnd2').val('');
			$('#tuesdayStart2').prop("disabled", true);
			$('#tuesdayEnd2').prop("disabled", true);
		}		   
	});

	$('#wednesdayCheck2').click(function() {
		if ($('#wednesdayCheck2').prop('checked')) {
			$('#wednesdayStart2').prop("disabled", false);
			$('#wednesdayEnd2').prop("disabled", false);
		} else {
			$('#wednesdayStart2').val('');
			$('#wednesdayEnd2').val('');
			$('#wednesdayStart2').prop("disabled", true);
			$('#wednesdayEnd2').prop("disabled", true);
		}		   
	});
	
	$('#thursdayCheck2').click(function() {
		if ($('#thursdayCheck2').prop('checked')) {
			$('#thursdayStart2').prop("disabled", false);
			$('#thursdayEnd2').prop("disabled", false);
		} else {
			$('#thursdayStart2').val('');
			$('#thursdayEnd2').val('');
			$('#thursdayStart2').prop("disabled", true);
			$('#thursdayEnd2').prop("disabled", true);
		}		   
	});
	
	$('#fridayCheck2').click(function() {
		if ($('#fridayCheck2').prop('checked')) {
			$('#fridayStart2').prop("disabled", false);
			$('#fridayEnd2').prop("disabled", false);
		} else {
			$('#fridayStart2').val('');
			$('#fridayEnd2').val('');
			$('#fridayStart2').prop("disabled", true);
			$('#fridayEnd2').prop("disabled", true);
		}		   
	});
	
	$('#saturdayCheck2').click(function() {
		if ($('#saturdayCheck2').prop('checked')) {
			$('#saturdayStart2').prop("disabled", false);
			$('#saturdayEnd2').prop("disabled", false);
		} else {
			$('#saturdayStart2').val('');
			$('#saturdayEnd2').val('');
			$('#saturdayStart2').prop("disabled", true);
			$('#saturdayEnd2').prop("disabled", true);
		}		   
	});
	
	$('#sundayCheck2').click(function() {
		if ($('#sundayCheck2').prop('checked')) {
			$('#sundayStart2').prop("disabled", false);
			$('#sundayEnd2').prop("disabled", false);
		} else {
			$('#sundayStart2').val('');
			$('#sundayEnd2').val('');
			$('#sundayStart2').prop("disabled", true);
			$('#sundayEnd2').prop("disabled", true);
		}		   
	});

	
/** ** APPLY CLASS selected, submit data and redisplay CLASS view ** */
 
	$('#applyClass').click(function() {

		var dc, ds, de;
		
		var cName = $('#className').val();
		var cStartDate = formatDateToSave($('#classStartDate').val());
		var cEndDate = formatDateToSave($('#classEndDate').val());

		times = new Array(28);
		
		times[0] = $('#mondayStart').val();
		times[1] = $('#mondayEnd').val();
		times[2] = $('#tuesdayStart').val();
		times[3] = $('#tuesdayEnd').val();
		times[4] = $('#wednesdayStart').val();
		times[5] = $('#wednesdayEnd').val();
		times[6] = $('#thursdayStart').val();
		times[7] = $('#thursdayEnd').val();
		times[8] = $('#fridayStart').val();
		times[9] = $('#fridayEnd').val();
		times[10] = $('#mondayStart2').val();
		times[11] = $('#mondayEnd2').val();
		times[12] = $('#tuesdayStart2').val();
		times[13] = $('#tuesdayEnd2').val();
		times[14] = $('#wednesdayStart2').val();
		times[15] = $('#wednesdayEnd2').val();
		times[16] = $('#thursdayStart2').val();
		times[17] = $('#thursdayEnd2').val();
		times[18] = $('#fridayStart2').val();
		times[19] = $('#fridayEnd2').val();
		times[20] = $('#saturdayStart').val();
		times[21] = $('#saturdayEnd').val();
		times[22] = $('#sundayStart').val();
		times[23] = $('#sundayEnd').val();
		times[24] = $('#saturdayStart2').val();
		times[25] = $('#saturdayEnd2').val();
		times[26] = $('#sundayStart2').val();
		times[27] = $('#sundayEnd2').val();
		
		var valError = false;
		clearNotification('#classErrorMsg');
	
		for (var x=0; x<28; x++) {
			if (times[x] != "") {
				if (valTime(times[x]) == false) {
					valError = true;
					switch (x) {
						case 0:  showNotification('#classErrorMsg', 'Please enter a valid Monday Start Time in HH:MM AM/PM format'); break;
						case 1:  showNotification('#classErrorMsg', 'Please enter a valid Monday End Time in HH:MM AM/PM format'); break;
						case 2:  showNotification('#classErrorMsg', 'Please enter a valid Tuesday Start Time in HH:MM AM/PM format'); break;
						case 3:  showNotification('#classErrorMsg', 'Please enter a valid Tuesday End Time in HH:MM AM/PM format'); break;
						case 4:  showNotification('#classErrorMsg', 'Please enter a valid Wednesday Start Time in HH:MM AM/PM format'); break;
						case 5:  showNotification('#classErrorMsg', 'Please enter a valid Wednesday End Time in HH:MM AM/PM format'); break;
						case 6:  showNotification('#classErrorMsg', 'Please enter a valid Thursday Start Time in HH:MM AM/PM format'); break;
						case 7:  showNotification('#classErrorMsg', 'Please enter a valid Thursday End Time in HH:MM AM/PM format'); break;
						case 8:  showNotification('#classErrorMsg', 'Please enter a valid Friday Start Time in HH:MM AM/PM format'); break;
						case 9:  showNotification('#classErrorMsg', 'Please enter a valid Friday End Time in HH:MM AM/PM format'); break;
						case 10: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Monday Start Time in HH:MM AM/PM format'); break;
						case 11: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Monday End Time in HH:MM AM/PM format'); break;
						case 12: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Tuesday Start Time in HH:MM AM/PM format'); break;
						case 13: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Tuesday End Time in HH:MM AM/PM format'); break;
						case 14: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Wednesday Start Time in HH:MM AM/PM format'); break;
						case 15: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Wednesday End Time in HH:MM AM/PM format'); break;
						case 16: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Thursday Start Time in HH:MM AM/PM format'); break;
						case 17: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Thursday End Time in HH:MM AM/PM format'); break;
						case 18: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Friday Start Time in HH:MM AM/PM format'); break;
						case 19: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Friday End Time in HH:MM AM/PM format'); break;
						case 20: showNotification('#classErrorMsg', 'Please enter a valid Saturday Start Time in HH:MM AM/PM format'); break;
						case 21: showNotification('#classErrorMsg', 'Please enter a valid Saturday End Time in HH:MM AM/PM format'); break;
						case 22: showNotification('#classErrorMsg', 'Please enter a valid Sunday Start Time in HH:MM AM/PM format'); break;
						case 23: showNotification('#classErrorMsg', 'Please enter a valid Sunday End Time in HH:MM AM/PM format'); break;
						case 24: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Saturday Start Time in HH:MM AM/PM format'); break;
						case 25: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Saturday End Time in HH:MM AM/PM format'); break;
						case 26: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Sunday Start Time in HH:MM AM/PM format'); break;
						default: showNotification('#classErrorMsg', 'Please enter a valid Week 2 Sunday End Time in HH:MM AM/PM format');
					}
				}
			}
		}
		
		if (cDays > 0) {
			for (x=0; x<cDays; x++) {

				ds = '#dayStart' + x;
				if ($.trim($(ds).val()) != '') {
					if (valTime($(ds).val()) == false) {
						valError = true;
						showNotification('#classErrorMsg', 'Please enter a valid Start Time in HH:MM AM/PM format for Day ' + x);
					}
				}
				
				de = '#dayEnd' + x;
				if ($.trim($(de).val()) != '') {
					if (valTime($(de).val()) == false) {
						valError = true;
						showNotification('#classErrorMsg', 'Please enter a valid End Time in HH:MM AM/PM format for Day ' + x);
					}
				}
				
			}
		}
		
		if (cEndDate == "") {
			valError = true;
			showNotification('#classErrorMsg', 'Please enter an End Date');
		} else {
 	 		if (valDate(cEndDate) == false) {
 	 			valError = true;
 	 			showNotification('#classErrorMsg', 'Please enter a valid End Date');
 	 		}
 		}
		
		if (cStartDate == "") {
			valError = true;
			showNotification('#classErrorMsg', 'Please enter a Start Date');
		} else {
 	 		if (valDate(cStartDate) == false) {
 	 			valError = true;
 	 			showNotification('#classErrorMsg', 'Please enter a valid Start Date');
 	 		}
 		}

		if (valError == false && userInfo.classCycle != 'oneWeek') {
			var result = compareDates(userInfo.firstDay, cStartDate);
			if (result != 0) {
				valError = true;
 	 			if (result == 1) {
	 				showNotification('#classErrorMsg', 'Class Start Date cannot be before School Start Date');
	 			} else {
	 				showNotification('#classErrorMsg', 'Class Start Date to School Start Date range cannot exceed one year');
	 			}
			}		
		}	

		if (valError == false) {
			var result = compareDates(cStartDate, cEndDate);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#classErrorMsg', 'Start Date must come before End Date');
	 			} else {
	 				showNotification('#classErrorMsg', 'Date range cannot exceed one year');
	 			}
			}		
		}
		
		if (cName == "") {
			valError = true;
			showNotification('#classErrorMsg', 'Please enter a Class Name');
		}
		
		if ($('#useSchoolStart').prop('checked')) {
			if (userInfo.firstDay == "") {
				valError = true;
				showNotification('#classErrorMsg', 'First Day of School has not been entered in Settings -> School');
			}
		}
		
		if ($('#useSchoolEnd').prop('checked')) {
			if (userInfo.lastDay == "") {
				valError = true;
				showNotification('#classErrorMsg', 'Last Day of School has not been entered in Settings -> School');
			}
		}

		if (valError == false) {
			classInfo.collaborateType = $("input[name='collaborate']:checked").val();
			if (classInfo.collaborateType < 3) {
				classInfo.collaborateSubjectId = 0;
				classInfo.collaborateKey = "";
			} else {
				if ($('#collaborateClass').val() == null) {
					valError = true;
					showNotification('#classErrorMsg', 'Please select a collaborate "Replica" class');
				} else if ($('#collaborateClass').val() == currentClassId) {
					valError = true;
					showNotification('#classErrorMsg', 'Collaborate "Replica" class cannot by current class');
				} else {
					classInfo.collaborateSubjectId = $('#collaborateClass').val();
					classInfo.collaborateKey = $.trim($('#collaborateKey').val());
				}
			}
		}
		
		if (noClass != null) {
			for (var x=0; x<noClass.length; x++) {
	 
				var tDay = formatDateToSave($('#noClassDay'+x).val());
				
				if (tDay == "") {
					valError = true;
					showNotification('#classErrorMsg', 'Enter a date for each No Class Day');
				} else {
					if (valDate(tDay) == false) {
						valError = true;
						showNotification('#classErrorMsg', 'Enter a valid date for each No Class Day');
					}
				}
			
				if (valError == false) {
					var result = compareDates(cStartDate, tDay);
					if (result == 1) {
						valError = true;
						showNotification('#classErrorMsg', 'No Class Day cannot be before Class start date');
					}
				}	
	
				if (valError == false) {
					var result = compareDates(tDay, cEndDate);
					if (result == 1) {
						valError = true;
						showNotification('#classErrorMsg', 'No Class Day cannot be after Class end date');
					}
				}
	
				if (valError == false) {
					noClass[x] = tDay;
				}
			}
		}

		if (valError == false)	{
			if (action == "updateClass") {
				checkSchedule()  // if updating a class, see if schedule is
									// changed
			} else {
				scheduleChange = false;
				applyClass();
			}
		}			

		return false;

	});

	function checkSchedule() {
		
		var teachClass = "";

		scheduleChange = false;
		
		if (cDays > 0) {

			var dc, ds, de;
			for (var x=0; x<cDays; x++) {
				dc = '#dayCheck' + x;
				ds = '#dayStart' + x;
				de = '#dayEnd' + x;
				if ($(dc).prop('checked')) {teachClass = "Y";} else {teachClass = "N";}
				if (dayTeach[x] != teachClass) {scheduleChange = true;}
				if (startTime[x] != $(ds).val()) {scheduleChange = true;}
				if (endTime[x] != $(de).val()) {scheduleChange = true;}
			}

		} else {

			if ($('#mondayCheck').prop('checked'))     {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.mondayTeach != teachClass) {scheduleChange = true;}
			if ($('#tuesdayCheck').prop('checked'))    {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.tuesdayTeach != teachClass) {scheduleChange = true;}
			if ($('#wednesdayCheck').prop('checked'))  {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.wednesdayTeach != teachClass) {scheduleChange = true;}
			if ($('#thursdayCheck').prop('checked'))   {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.thursdayTeach != teachClass) {scheduleChange = true;}
			if ($('#fridayCheck').prop('checked'))     {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.fridayTeach != teachClass) {scheduleChange = true;}
			if ($('#saturdayCheck').prop('checked'))   {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.saturdayTeach != teachClass) {scheduleChange = true;}
			if ($('#sundayCheck').prop('checked'))     {teachClass = "Y";} else {teachClass = "N";}
			if (classInfo.sundayTeach != teachClass) {scheduleChange = true;}

			if ($('#mondayCheck').prop('checked') && (classInfo.mondayStartTime != $('#mondayStart').val())) {scheduleChange = true;}
			if ($('#mondayCheck').prop('checked') && (classInfo.mondayEndTime != $('#mondayEnd').val())) {scheduleChange = true;}
			if ($('#tuesdayCheck').prop('checked') && (classInfo.tuesdayStartTime != $('#tuesdayStart').val())) {scheduleChange = true;}
			if ($('#tuesdayCheck').prop('checked') && (classInfo.tuesdayEndTime != $('#tuesdayEnd').val())) {scheduleChange = true;}
			if ($('#wednesdayCheck').prop('checked') && (classInfo.wednesdayStartTime != $('#wednesdayStart').val())) {scheduleChange = true;}
			if ($('#wednesdayCheck').prop('checked') && (classInfo.wednesdayEndTime != $('#wednesdayEnd').val())) {scheduleChange = true;}
			if ($('#thursdayCheck').prop('checked') && (classInfo.thursdayStartTime != $('#thursdayStart').val())) {scheduleChange = true;}
			if ($('#thursdayCheck').prop('checked') && (classInfo.thursdayEndTime != $('#thursdayEnd').val())) {scheduleChange = true;}
			if ($('#fridayCheck').prop('checked') && (classInfo.fridayStartTime != $('#fridayStart').val())) {scheduleChange = true;}
			if ($('#fridayCheck').prop('checked') && (classInfo.fridayEndTime != $('#fridayEnd').val())) {scheduleChange = true;}
			if ($('#saturdayCheck').prop('checked') && (classInfo.saturdayStartTime != $('#saturdayStart').val())) {scheduleChange = true;}
			if ($('#saturdayCheck').prop('checked') && (classInfo.saturdayEndTime != $('#saturdayEnd').val())) {scheduleChange = true;}
			if ($('#sundayCheck').prop('checked') && (classInfo.sundayStartTime != $('#sundayStart').val())) {scheduleChange = true;}
			if ($('#sundayCheck').prop('checked') && (classInfo.sundayEndTime != $('#sundayEnd').val())) {scheduleChange = true;}

			if (userInfo.classCycle == 'twoWeeks') {
				if ($('#mondayCheck2').prop('checked'))    {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2mondayTeach != teachClass) {scheduleChange = true;}
				if ($('#tuesdayCheck2').prop('checked'))   {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2tuesdayTeach != teachClass) {scheduleChange = true;}
				if ($('#wednesdayCheck2').prop('checked')) {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2wednesdayTeach != teachClass) {scheduleChange = true;}
				if ($('#thursdayCheck2').prop('checked'))  {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2thursdayTeach != teachClass) {scheduleChange = true;}
				if ($('#fridayCheck2').prop('checked'))    {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2fridayTeach != teachClass) {scheduleChange = true;}
				if ($('#saturdayCheck2').prop('checked'))  {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2saturdayTeach != teachClass) {scheduleChange = true;}
				if ($('#sundayCheck2').prop('checked'))    {teachClass = "Y";} else {teachClass = "N";}
				if (classInfo.wk2sundayTeach != teachClass) {scheduleChange = true;}
				
				if (classInfo.wk2mondayStartTime != $('#mondayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2mondayEndTime != $('#mondayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2tuesdayStartTime != $('#tuesdayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2tuesdayEndTime != $('#tuesdayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2wednesdayStartTime != $('#wednesdayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2wednesdayEndTime != $('#wednesdayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2thursdayStartTime != $('#thursdayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2thursdayEndTime != $('#thursdayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2fridayStartTime != $('#fridayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2fridayEndTime != $('#fridayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2saturdayStartTime != $('#saturdayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2saturdayEndTime != $('#saturdayEnd2').val()) {scheduleChange = true;}
				if (classInfo.wk2sundayStartTime != $('#sundayStart2').val()) {scheduleChange = true;}
				if (classInfo.wk2sundayEndTime != $('#sundayEnd2').val()) {scheduleChange = true;}
			}
		
		}

		if (scheduleChange == false) {
			applyClass()
		} else {
			clearNotification('#scheduleChangeError');
			showBox('#scheduleChangeBox', 30);
			var tempDate = $.datepicker.formatDate('mm/dd/yy', new Date());
			$('#useClassStart2').prop('checked', false);
			$('#scheduleStart').prop("disabled", false);
			$('#scheduleStart').val(formatDateToShow(tempDate));
		}
		
	}

	$('#useClassStart2').change(function(){ 
		if ($('#useClassStart2').prop('checked')) {
			$('#scheduleStart').prop("disabled", true);
			$('#scheduleStart').val($('#classStartDate').val());
		} else {
			$('#scheduleStart').prop("disabled", false);
		}
	}); 

	$('#closeScheduleChange').click(function() {
		hideBox('#scheduleChangeBox', 30);
	});

	$('#cancelScheduleChange').click(function() {
		hideBox('#scheduleChangeBox', 30);
	});
	
	$('#applyScheduleChange').click(function() {

		var valError = false;
		clearNotification('#scheduleChangeError');

		var cDay = formatDateToSave($('#scheduleStart').val());
		
		if (cDay == "") {
			valError = true;
			showNotification('#scheduleChangeError', 'Enter a start date for the schedule change');
		} else {
			if (valDate(cDay) == false) {
				valError = true;
				showNotification('#scheduleChangeError', 'Enter a valid start date for the schedule change');
			} else {
				var checkStart = $.datepicker.parseDate('mm/dd/yy',  formatDateToSave($('#classStartDate').val()));
				var checkEnd = $.datepicker.parseDate('mm/dd/yy',  formatDateToSave($('#classEndDate').val()));
				var checkTemp = $.datepicker.parseDate('mm/dd/yy',  formatDateToSave($('#scheduleStart').val()));
				if (checkTemp < checkStart || checkTemp > checkEnd) {
					valError = true;
					showNotification('#scheduleChangeError', 'Start date must be between class start and end date');
				}
			}
		}
		
		if (valError == false)	{
			applyClass();
		}			

	});
	
	function applyClass() {
	
		hideBox('#scheduleChangeBox', 30);
		$('.sp-container').hide();
		$('#cHidden').hide();

		classInfo.updateNoClass = "Y";
		classInfo.noClass = new Array();
       	if (noClass != null) {
       		for (var z=0; z<noClass.length; z++) {
       			classInfo.noClass[z] = noClass[z];
       		}
	  	}
		
		classInfo.className = $('#className').val();
		classInfo.classStartDate = formatDateToSave($('#classStartDate').val());
		classInfo.classEndDate = formatDateToSave($('#classEndDate').val());
		classInfo.color = $('#selectedColor').spectrum('get');
		classInfo.titleColor = $('#selectedTitleColor').spectrum('get');
		classInfo.titleSize = $('#classFontSize').val();
		classInfo.titleFont = $('#classFontFamily').val();
		classInfo.classLabelBold = ($('#cBL1').hasClass('bttnPressed')?"Y":"N");
		classInfo.classLabelItalic = ($('#cIL1').hasClass('bttnPressed')?"Y":"N");
		classInfo.classLabelUnderline = ($('#cUL1').hasClass('bttnPressed')?"Y":"N");
		
		classInfo.mondayStartTime = $('#mondayStart').val();
		classInfo.mondayEndTime = $('#mondayEnd').val();
		classInfo.tuesdayStartTime = $('#tuesdayStart').val();
		classInfo.tuesdayEndTime = $('#tuesdayEnd').val();
		classInfo.wednesdayStartTime = $('#wednesdayStart').val();
		classInfo.wednesdayEndTime = $('#wednesdayEnd').val();
		classInfo.thursdayStartTime = $('#thursdayStart').val();
		classInfo.thursdayEndTime = $('#thursdayEnd').val();
		classInfo.fridayStartTime = $('#fridayStart').val();
		classInfo.fridayEndTime = $('#fridayEnd').val();
		classInfo.saturdayStartTime = $('#saturdayStart').val();
		classInfo.saturdayEndTime = $('#saturdayEnd').val();
		classInfo.sundayStartTime = $('#sundayStart').val();
		classInfo.sundayEndTime = $('#sundayEnd').val();
		classInfo.wk2mondayStartTime = $('#mondayStart2').val();
		classInfo.wk2mondayEndTime = $('#mondayEnd2').val();
		classInfo.wk2tuesdayStartTime = $('#tuesdayStart2').val();
		classInfo.wk2tuesdayEndTime = $('#tuesdayEnd2').val();
		classInfo.wk2wednesdayStartTime = $('#wednesdayStart2').val();
		classInfo.wk2wednesdayEndTime = $('#wednesdayEnd2').val();
		classInfo.wk2thursdayStartTime = $('#thursdayStart2').val();
		classInfo.wk2thursdayEndTime = $('#thursdayEnd2').val();
		classInfo.wk2fridayStartTime = $('#fridayStart2').val();
		classInfo.wk2fridayEndTime = $('#fridayEnd2').val();
		classInfo.wk2saturdayStartTime = $('#saturdayStart2').val();
		classInfo.wk2saturdayEndTime = $('#saturdayEnd2').val();
		classInfo.wk2sundayStartTime = $('#sundayStart2').val();
		classInfo.wk2sundayEndTime = $('#sundayEnd2').val();

		if ($('#useSchoolStart').prop('checked')) {classInfo.useSchoolStart = "Y";} else {classInfo.useSchoolStart = "N";}
		if ($('#useSchoolEnd').prop('checked')) {classInfo.useSchoolEnd = "Y";} else {classInfo.useSchoolEnd = "N";}
		
		if ($('#mondayCheck').prop('checked')) {classInfo.mondayTeach = "Y";} else {classInfo.mondayTeach = "N";}
		if ($('#tuesdayCheck').prop('checked')) {classInfo.tuesdayTeach = "Y";} else {classInfo.tuesdayTeach = "N";}
		if ($('#wednesdayCheck').prop('checked')) {classInfo.wednesdayTeach = "Y";} else {classInfo.wednesdayTeach = "N";}
		if ($('#thursdayCheck').prop('checked')) {classInfo.thursdayTeach = "Y";} else {classInfo.thursdayTeach = "N";}
		if ($('#fridayCheck').prop('checked')) {classInfo.fridayTeach = "Y";} else {classInfo.fridayTeach = "N";}
		if ($('#saturdayCheck').prop('checked')) {classInfo.saturdayTeach = "Y";} else {classInfo.saturdayTeach = "N";}
		if ($('#sundayCheck').prop('checked')) {classInfo.sundayTeach = "Y";} else {classInfo.sundayTeach = "N";}
		if ($('#mondayCheck2').prop('checked')) {classInfo.wk2mondayTeach = "Y";} else {classInfo.wk2mondayTeach = "N";}
		if ($('#tuesdayCheck2').prop('checked')) {classInfo.wk2tuesdayTeach = "Y";} else {classInfo.wk2tuesdayTeach = "N";}
		if ($('#wednesdayCheck2').prop('checked')) {classInfo.wk2wednesdayTeach = "Y";} else {classInfo.wk2wednesdayTeach = "N";}
		if ($('#thursdayCheck2').prop('checked')) {classInfo.wk2thursdayTeach = "Y";} else {classInfo.wk2thursdayTeach = "N";}
		if ($('#fridayCheck2').prop('checked')) {classInfo.wk2fridayTeach = "Y";} else {classInfo.wk2fridayTeach = "N";}
		if ($('#saturdayCheck2').prop('checked')) {classInfo.wk2saturdayTeach = "Y";} else {classInfo.wk2saturdayTeach = "N";}
		if ($('#sundayCheck2').prop('checked')) {classInfo.wk2sundayTeach = "Y";} else {classInfo.wk2sundayTeach = "N";}

		classInfo.collaborateType = $("input[name='collaborate']:checked").val();
		
		if (classInfo.collaborateType != 3) {
			classInfo.collaborateSubjectId = 0;
			classInfo.collaborateKey = "";
		}
		
		classInfo.dayTeach = new Array();
		classInfo.startTime = new Array();
		classInfo.endTime = new Array();

		if (cDays > 0) {
			var dc, ds, de;
			for (x=0; x<cDays; x++) {
				dc = '#dayCheck' + x;
				ds = '#dayStart' + x;
				de = '#dayEnd' + x;
				if ($(dc).prop('checked')) {dayTeach[x] = "Y";} else {dayTeach[x] = "N";}
				startTime[x] = $(ds).val();
				endTime[x] = $(de).val();
				classInfo.dayTeach[x] = dayTeach[x];
				classInfo.startTime[x] = startTime[x];
				classInfo.endTime[x] = endTime[x];
			}
		}
		
		if (paymentNeeded == false) {

			if (action == "updateClass") {
				
				classInfo.scheduleChange = scheduleChange;
				classInfo.scheduleStart = formatDateToSave($('#scheduleStart').val());
				
				if (currentClassName != $('#className').val()) {
					currentClassName = $('#className').val();
					var str = '#' + currentClassId;
					$(str).html(currentClassName);
				}
				
				if (classStartDay == classInfo.classStartDate) {
					showLoading();
					classInfo.classId = currentClassId;
					$.post('updateClass', classInfo, loadClassList, "json");
				} else {
					showBox('#shiftClassWarning', 30);
				}
				

			} else {
				showLoading();
				classInfo.classId = null;
				$.post('addClass', classInfo, loadClassList, "json");
			}
		
		} else {
			showExpiredMsg();
		}

	}
	
/** ** DELETE CLASS selected, submit event ID to server ** */

	$('#deleteClassButton').click(function() {

		if (paymentNeeded == false) {
			var str = '#' + currentClassId + 'N';
			if (confirm('This will delete ' + $(str).html() + ' and ALL lessons created for the class. Are you sure you want to delete?')) {
				action = 'deleteClass';
				showLoading();
				$.getJSON('deleteClass', 'classId='+currentClassId, loadClassList);
			}
		} else {
			showExpiredMsg();
		}
		
	});
	
	$('#cancelClass').click(function() {
		hideBox('#editClassBox', 10);
		$('#cHidden').hide();

	});

	function showToLessons() {
		requestClass = new Object();
		requestClass.lessonView = "list";
		requestClass.userMode = "T";
		requestClass.teacherId = userInfo.userId;
		requestClass.classId = classId[toClassPos];
		showLoading();
		$.getJSON('getClassLessons', requestClass, loadToList);
	}
	
	$('#showFromLessons').click(function() {
		showFromLessons();
	});
	
	function showFromLessons() {
		
		requestClass = new Object();
		requestClass.lessonView = "from";
		requestClass.userMode = "F";
		requestClass.classId = shareYears[copyYearPos].classes[copyClassPos].classId;
		requestClass.yearId = shareYears[copyYearPos].yearId;

		if (importTab == "M") {
			requestClass.email = userInfo.emailAddress;
			requestClass.key = userInfo.sharedUserKey;
		} else {
			requestClass.email = savedTeachers[copyTeacherPos].sharedEmail;
			requestClass.key = savedTeachers[copyTeacherPos].sharedKey;
		}

		requestClass.startDate = formatDateToSave($('#importStart').val());
		requestClass.endDate = formatDateToSave($('#importEnd').val());
		
		if (requestClass.startDate != "" || requestClass.endDate != "") {
			requestClass.allLessons = "N";
		} else {
			requestClass.allLessons = "Y";
		}
			
		var valError = false;
		clearNotification('#importErrorMsg');
		
		if (requestClass.endDate != "") {
 	 		if (valDate(requestClass.endDate) == false) {
 	 			valError = true;
 	 			showNotification('#importErrorMsg', 'Please enter a valid end date');
 	 		}
 		}
		
		if (requestClass.startDate != "") {
 	 		if (valDate(requestClass.startDate) == false) {
 	 			valError = true;
 	 			showNotification('#importErrorMsg', 'Please enter a valid start date');
 	 		}
 		}

		if (valError == false) {
			var result = compareDates(requestClass.startDate, requestClass.endDate);
			if (result != 0) {
				valError = true;
				if (result == 1) {
					showNotification('#importErrorMsg', 'Start date must come before end date');
				} else {
					showNotification('#importErrorMsg', 'Date range cannot exceed one year');
				}
			}		
		}	
		
		if (valError == false) {
			showLoading();
			$.getJSON('getClassLessons', requestClass, loadFromList);
		}
		
	}
	
	$('#copyButton, #copyButton2').click(function() {
		browserButton = false;
		window.location.hash = "copy";
		showCopyLessons();
	});

	function showCopyLessons() {
		clearNotification('#importErrorMsg');
		hideMessage();
		hideAll();
		$('#importView').show();
	}

	$('#importTeacherTabEvent').click(function() {
		
		$('#importTeacherTabEvent').addClass('current');
		$('#importCSVFileTabEvent').removeClass('current');

		displayImportEvents();

	});
	
	$('#importCSVFileTabEvent').click(function() {
		
		$('#importTeacherTabEvent').removeClass('current');
		$('#importCSVFileTabEvent').addClass('current');

		$('#importTeacherBoxEvent').hide();
		$('#userMode').val(userMode);
		$('#importEventsFileBox').show();
	
	});

	$('#exportLessonsButton').click(function() {
	
		action = 'exportLessons';
		
		showBox('#exportBox', 30);
		
		$('#exportLessonsTitle').show();
		$('#exportEventsTitle').hide();
				
	});

	$('#exportEventsButton').click(function() {
		
		action = 'exportEvents';

		showBox('#exportBox', 30);

		$('#exportLessonsTitle').hide();
		$('#exportEventsTitle').show();
		
	});
	
	$('#yesHTML').click(function() {
		
		hideBox('#exportBox', 30);
		if (action == 'exportLessons') {
			$('#exportForm').html('<input type="hidden" name="classId" value="' + currentClassId + '" />');	
			$('#exportForm').append('<input type="hidden" name="removeHTML" value="N" />');	
			$('#exportForm').submit();
		} else {
			$('#exportEventsForm').html('<input type="hidden" name="removeHTML" value="N" />');	
			$('#exportEventsForm').submit();
		}

	});
	
	$('#noHTML').click(function() {
		
		hideBox('#exportBox', 30);
		if (action == 'exportLessons') {
			$('#exportForm').html('<input type="hidden" name="classId" value="' + currentClassId + '" />');	
			$('#exportForm').append('<input type="hidden" name="removeHTML" value="Y" />');	
			$('#exportForm').submit();
		} else {
			$('#exportEventsForm').html('<input type="hidden" name="removeHTML" value="Y" />');	
			$('#exportEventsForm').submit();
		}

	});

	$('#closeExport').click(function() {
		hideBox('#exportBox', 30);
	});

	$('#cancelExport').click(function() {
		hideBox('#exportBox', 30);
	});

	$('#importCSVFileButton').click(function() {
		$('#CSVclassId').val(classId[toClassPos]);	
	});
	
	$('#importEventsButton').click(function() {
		
		action = 'importEvents';
		
		displayImportEvents();

		showBox('#importBoxEvent', 30);

	});
	
	function displayImportEvents() {

		$('#importTeacherTabEvent').addClass('current');
		$('#importCSVFileTabEvent').removeClass('current');

		clearNotification('#importEventErrorMsg');
		$('#shareEmailEvent').val('');
		$('#shareKeyEvent').val('');

		$('#importEventsFileBox').hide();
		$('#importTeacherBoxEvent').show();

		$('#eventTitle').show();
		$('#eventPrompt1').show();

		$('#shareYearLabelEvent').hide();
		$('#shareYearEvent').hide();
		$('#eventPrompt2').hide();

		$('#applyShareEvent').hide();
		$('#cancelShareEvent').hide();
		$('#applyImportEvent').show();
		$('#cancelImportEvent').show();
	
	}

	$('#applyImportEvent').click(function() {
		
		data = new Object();
		data.sharedUserEmail = $('#shareEmailEvent').val();
		data.sharedUserKey = $('#shareKeyEvent').val();

		clearNotification('#importEventErrorMsg');
		
		if (data.sharedUserEmail == '') {
			showNotification('#importEventErrorMsg', 'Please enter a Teacher Email');
		} else {
			if (data.sharedUserKey == '') { 
				showNotification('#importEventErrorMsg', 'Please enter a Teacher Key');
			} else {		
				showLoading();
				$.getJSON('getSharedTerms', data, chooseShareYearEvent);
			}
		}
		
	});	

	function chooseShareYearEvent(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
	
			if (data.years.length == 0) {
				showNotification('#importEventErrorMsg', 'Teacher Email or Teacher Key is incorrect');
			} else {
				
				$('#shareYearEvent').html('');
				for (var x=0; x<data.years.length; x++) {
					ls = '<option value="' + data.years[x].yearId + '">' + data.years[x].yearName + '</option>';
					$('#shareYearEvent').append(ls);
				}			
		
				shareYears = data.years;
		
				$('#eventPrompt2').show();
				sharedUser = data.sharedUserId;
		
				clearNotification('#importEventErrorMsg');
				
				$('#shareYearLabelEvent').show();
				$('#shareYearEvent').show();
		
				$('#applyShareEvent').show();
				$('#cancelShareEvent').show();
				$('#applyImportEvent').hide();
				$('#cancelImportEvent').hide();
				
			}
		}	
	}
	
	
	function chooseShareClass(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
	
			if (data.years.length == 0) {
				showNotification('#importErrorMsg', 'Teacher Email or Key is incorrect');
			} else {
				
				$('#pickCopyYear').html('');
				for (var x=0; x<data.years.length; x++) {
					$('#pickCopyYear').append('<div id="copyYear' + x + '" class="copyYearPicker"><p style="width:150px; overflow:hidden">' + data.years[x].yearName + '</p></div>');
				}			
		
				shareYears = data.years;
		
				clearNotification('#importErrorMsg');
				$('#importStart').val("");
				$('#importEnd').val("");
				
			}
		}	

	}

	$("input[name='importOptions']").click(function() {
		
		if ($('input[name="importOptions"]')[0].checked == true) {
			$('#insertDate').val("");
			$('#insertDate').prop("disabled", true);
		} else {
			$('#insertDate').prop("disabled", false);
		}
		clearNotification('#importErrorMsg2');

     });

	$('#applyShare').click(function() {

		if (paymentNeeded == false) {

			data = new Object();
			
			var importType = $('input[name=importOptions]:checked').val();
			
			data.startDate = formatDateToSave($('#importStart').val());
			data.endDate = formatDateToSave($('#importEnd').val());
			data.insertDate = "";
			
			if (data.startDate != "" || data.endDate != "") {
				data.allTab1 = "N";
			} else {
				data.allTab1 = "Y";
			}
				
			var valError = false;
			clearNotification('#importErrorMsg2');
			
			if (copyClassPos == "") {
 	 			valError = true;
 	 			showNotification('#importErrorMsg2', 'Please select a class to copy FROM');
			}

			if (toClassPos == "") {
 	 			valError = true;
 	 			showNotification('#importErrorMsg2', 'Please select a class to copy TO');
			}
			
			if (data.endDate != "") {
	 	 		if (valDate(data.endDate) == false) {
	 	 			valError = true;
	 	 			showNotification('#importErrorMsg2', 'Please enter a valid end date');
	 	 		}
	 		}
			
			if (data.startDate != "") {
	 	 		if (valDate(data.startDate) == false) {
	 	 			valError = true;
	 	 			showNotification('#importErrorMsg2', 'Please enter a valid start date');
	 	 		}
	 		}

			if (valError == false) {
				var result = compareDates(data.startDate, data.endDate);
				if (result != 0) {
					valError = true;
					if (result == 1) {
						showNotification('#importErrorMsg2', 'Start date must come before end date');
					} else {
						showNotification('#importErrorMsg2', 'Date range cannot exceed one year');
					}
				}		
			}	
			
			if (importType == "I") {

				var insertDate = formatDateToSave($.trim($('#insertDate').val()));

				if (insertDate == "") {
	 	 			valError = true;
	 	 			showNotification('#importErrorMsg2', 'Please enter an insert date');
				} else if (valDate(insertDate) == false) {
	 	 			valError = true;
	 	 			showNotification('#importErrorMsg2', 'Please enter a valid insert date');
	 	 		}

				var classStartDate = classStart[toClassPos];
				var classEndDate = classEnd[toClassPos];
				
				if (valError == false) {
					var result = compareDates(classStartDate, insertDate);
					if (result != 0) {
						valError = true;
						showNotification('#importErrorMsg2', 'Insert date must be in class date range');
					}		
				}	

				if (valError == false) {
					var result = compareDates(insertDate, classEndDate);
					if (result != 0) {
						valError = true;
						showNotification('#importErrorMsg2', 'Insert date must be in class date range');
					}		
				}
				
				data.insertDate = insertDate;
			} 
			
			if (valError == false) {
				action = 'importLessons';
				data.sharedClassId = shareYears[copyYearPos].classes[copyClassPos].classId;
				data.classId = classId[toClassPos];
				data.monday = gMonday;
				hideMessage();
				showLoading();
				$.getJSON('importLessons', data, lessonsImported);
			}
		
		} else {
			showExpiredMsg();
		}

	});	
	
	function lessonsImported(data) {
		
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			haveWeeks = false;
			haveMonth = false;
			haveList = false;
			haveSearch = false;
			
			showAction();
			
			if (loadToLessons == true) {
				requestClass = new Object();
				requestClass.lessonView = "list";
				requestClass.userMode   = "T";
				requestClass.teacherId  = userInfo.userId;
				requestClass.classId    = classId[toClassPos];
				showLoading();
				$.getJSON('getClassLessons', requestClass, loadToList);
			}
		}
	}
	
	$('#applyShareEvent').click(function() {

		if (paymentNeeded == false) {

			data = new Object();
			data.sharedTeacherId = sharedUser;
			data.sharedYearId = $('#shareYearEvent').val();
			data.userMode = userMode;

			haveWeeks = false;
			haveMonth = false;
			haveList = false;
			haveSearch = false;
			
			showLoading();
			$.getJSON('importEvents', data, loadEvents);
	
		} else {
			showExpiredMsg();
		}

	});	

	$('#cancelShareEvent').click(function() {
		hideBox('#importBoxEvent', 30);
	});

	$('#cancelImportEvent').click(function() {
		hideBox('#importBoxEvent', 30);
	});

	$('#closeImportEvent').click(function() {
		hideBox('#importBoxEvent', 30);
	});
	
	$('#cancelEventFileImport').click(function() {
		hideBox('#importBoxEvent', 30);
	});
	
	$('#addEventButton').click(function() {
		noSchoolCheck = false;
		addEvent();
	});
		
	$('#eventButton').click(function() {
		noSchoolCheck = false;
		addEvent();
	});
		
	$('#noSchoolButton').click(function() {
		noSchoolCheck = true;
		addEvent();
	});
		
	function addEvent() {
			
		action = "newEvent";
		attachType = 'attachEvent';
		currentEventDatastoreId = '';
		currentEventData = '';
		currentNoSchool = '';
		$('#eventAction').hide();

		$('#eventDateError').html('');
		clearNotification('#eventErrorMsg');
		
		$('#eventDate').val('');	
		$('#eventText').val('');
		$('#eventHead').val('');
		
		if (noSchoolCheck == false) {
			$('#noSchool').prop('checked',false);
		} else {
			$('#noSchool').prop('checked',true);
		}
		
		$('#noCycle').prop('checked',false);
		$('#eventPrivate').prop('checked',false);
		$('#eventEndDate').val('');	
		$('#repeats').val('daily');	
		$('#eventStartTime').val('');	
		$('#eventEndTime').val('');	

		if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
			$('#noCycleCell').hide();
		} else {
			$('#noCycleCell').show();
		}
		
		attachments = [];
		$('#attachEventBody').html('');
		$('#noEventTableBody').html('');
		$('#extraDayTableBody').html('');
		$('#eventCurrentDateDisplay').html('');
		initEventFormat(action);
		updateRecurringEvent = null;
		updateCurrentEvent = null;
			
		showBox('#editEventBox', 10);
		
		$('#eventHead').focus();	

	}
	
	function initEventFormat(action) {
		var eventFormat = {};
		if (action == "newEvent") {
			eventFormat = getEventFormat({});
		} else {
			eventFormat = $(currentEventData).data().format;
		}
		
		$('#newEventFormat').css({
			'font-family' : eventFormat.titleFontFamily,
			'font-size:' :  eventFormat.titleFontSize + 'pt',
			'color' : eventFormat.titleFontColor,
			'background-color' : eventFormat.titleFillColor,
			'font-weight' : eventFormat.titleBold,
			'font-style' : eventFormat.titleItalic,
			'text-decoration' : eventFormat.titleUnderline
		});
		
		$('#newEventFormatText').css({
			'display' : 'none',
			'font-family' : eventFormat.bodyFontFamily,
			'font-size:' :  eventFormat.bodyFontSize + 'pt',
			'color' : eventFormat.bodyFontColor,
			'background-color' : eventFormat.bodyFillColor,
			'font-weight' : eventFormat.bodyBold,
			'font-style' : eventFormat.bodyItalic,
			'text-decoration' : eventFormat.bodyUnderline
		});
		
		$('#newEventHide').html('N');
		$('#newEventSize').html(eventFormat.titleFontSize);
		$('#newEventTextSize').html(eventFormat.bodyFontSize);
		$('#newEventFont').html(eventFormat.titleFont);
		$('#newEventTextFont').html(eventFormat.bodyFont);
	}
	
	/** ** EDIT EVENT selected, display EVENT box *** */
	
	$('.event').live('click', function() {
		
		currentEventDatastoreId = this.id;

		if (currentEventDatastoreId == 0) {
			showErrorBox('Google events cannot be updated.');
			return false;
		}
		
		editEvent();
		
	});

	$('.eventHeadDoIt').live('mousedown', function(event) {

		if (userMode == "T") {
		
			if (event.which == 3) {
				
				if (this.id.substring(4) == 0) {
					showErrorBox('Google events cannot be updated.');
					return false;
				}

				$('#eventActions').css({top:event.pageY+'px', left:event.pageX+'px'}).show();
				$('.eventActionHS').show();
				
				currentEventDatastoreId = this.id.substring(4);
				
				if (lessonView == "month") {
					currentNoSchool  = '#' + currentEventDatastoreId + 'SM';
					currentNoCycle   = '#' + currentEventDatastoreId + 'CM';
					currentEventData = '#' + currentEventDatastoreId + 'EDSM';
				} else if (userInfo.equalSize == "Y") {
					currentNoSchool = '#' + currentEventDatastoreId + 'SE';
					currentNoCycle  = '#' + currentEventDatastoreId + 'CE';
					currentEventData = '#' + currentEventDatastoreId + 'EDSE';
				} else {
					currentNoSchool = '#' + currentEventDatastoreId + 'SW';
					currentNoCycle  = '#' + currentEventDatastoreId + 'CW';
					currentEventData = '#' + currentEventDatastoreId + 'EDSW';					
				}
				
				return false;
				
			 } else {
				 
				currentEventDatastoreId = this.id.substring(4);
				
				if (currentEventDatastoreId == 0) {
					showErrorBox('Google events cannot be updated.');
					return false;
				}
				
				editEvent();

			 }
		}
		
		
	});	

	function editEvent() {
		
		if (lessonView == "month") {
			currentEventText      = '#' + currentEventDatastoreId + 'EM';
			currentNoSchool       = '#' + currentEventDatastoreId + 'SM';
			currentNoCycle        = '#' + currentEventDatastoreId + 'CM';
			currentEventDate      = '#' + currentEventDatastoreId + 'AM';
			currentEventEndDate   = '#' + currentEventDatastoreId + 'TM';
			currentRepeats        = '#' + currentEventDatastoreId + 'RM';
			currentEventStartTime = '#' + currentEventDatastoreId + 'ESTM';
			currentEventEndTime   = '#' + currentEventDatastoreId + 'EETM';
			currentEventTitle     = '#' + currentEventDatastoreId + 'ETM';
			currentEventPrivate   = '#' + currentEventDatastoreId + 'EPFM';
			currentEventData      = '#' + currentEventDatastoreId + 'EDSM';
		} else {
			if (userInfo.equalSize == "Y") {
				currentEventText      = '#' + currentEventDatastoreId + 'EE';
				currentNoSchool       = '#' + currentEventDatastoreId + 'SE';
				currentNoCycle        = '#' + currentEventDatastoreId + 'CE';
				currentEventDate      = '#' + currentEventDatastoreId + 'AE';
				currentEventEndDate   = '#' + currentEventDatastoreId + 'TE';
				currentRepeats        = '#' + currentEventDatastoreId + 'RE';
				currentEventStartTime = '#' + currentEventDatastoreId + 'ESTE';
				currentEventEndTime   = '#' + currentEventDatastoreId + 'EETE';
				currentEventTitle     = '#' + currentEventDatastoreId + 'ETE';
				currentEventPrivate   = '#' + currentEventDatastoreId + 'EPFE';
				currentEventData      = '#' + currentEventDatastoreId + 'EDSE';
			} else {
				currentEventText      = '#' + currentEventDatastoreId + 'EW';
				currentNoSchool       = '#' + currentEventDatastoreId + 'SW';
				currentNoCycle        = '#' + currentEventDatastoreId + 'CW';
				currentEventDate      = '#' + currentEventDatastoreId + 'AW';
				currentEventEndDate   = '#' + currentEventDatastoreId + 'TW';
				currentRepeats        = '#' + currentEventDatastoreId + 'RW';
				currentEventStartTime = '#' + currentEventDatastoreId + 'ESTW';
				currentEventEndTime   = '#' + currentEventDatastoreId + 'EETW';
				currentEventTitle     = '#' + currentEventDatastoreId + 'ETW';
				currentEventPrivate   = '#' + currentEventDatastoreId + 'EPFW';
				currentEventData      = '#' + currentEventDatastoreId + 'EDSW';
			}
		}
		
		attachType = 'attachEvent';
		
		var eSchoolId = $('#' + currentEventDatastoreId + 'ES').html();
		if (eSchoolId != "" && eSchoolId != 0) {
			if (userMode == "A") {
				openEvent();
			} else {
				showErrorBox('You must be an administrator to update school events');
			}
		} else if (userMode == "T") {
			openEvent();
		}
		
	}

	$('.eventList').live('click', function() {
		
		currentEventDatastoreId = this.id;
		
		if (currentEventDatastoreId == 0) {
			showErrorBox('Google events cannot be updated.');
			return;
		}

		currentEventText      = '#' + currentEventDatastoreId + 'E';
		currentNoSchool       = '#' + currentEventDatastoreId + 'S';
		currentNoCycle        = '#' + currentEventDatastoreId + 'C';
		currentEventDate      = '#' + currentEventDatastoreId + 'A';
		currentEventEndDate   = '#' + currentEventDatastoreId + 'T';
		currentRepeats        = '#' + currentEventDatastoreId + 'R';
		currentEventStartTime = '#' + currentEventDatastoreId + 'EST';
		currentEventEndTime   = '#' + currentEventDatastoreId + 'EET';
		currentEventTitle     = '#' + currentEventDatastoreId + 'ET';
		currentEventPrivate   = '#' + currentEventDatastoreId + 'EPF';
		currentEventData      = '#' + currentEventDatastoreId + 'EDS';
		
		var eSchoolId = $('#' + currentEventDatastoreId + 'ES').html();
		if (eSchoolId != "" && eSchoolId != 0) {
			if (userMode == "A") {
				openEvent();
			} else {
				showErrorBox('You must be an administrator to update school events');
			}
		} else if (userMode == "T") {
			openEvent();
		}
		
	});

	function openEvent() {
		
		action = "updateEvent";
		attachType = 'attachEvent';
		$('#eventAction').show();
		
		$('#eventDateError').html('');
		clearNotification('#eventErrorMsg');

		var start = $(currentEventDate).html();
		$('#eventDate').val(start);
		$('#eventText').val($(currentEventText).html());	
		$('#eventStartTime').val($(currentEventStartTime).html());	
		$('#eventEndTime').val($(currentEventEndTime).html());	
		$('#eventHead').val($(currentEventTitle).html());	

		var end = $(currentEventEndDate).html();
		if (end == null || end == "" || end == "undefined") {
			end = start;
			$('#eventEndDate').val(start);	
		} else {
			$('#eventEndDate').val(end);	
		}
		
		if (start == end) {
			$('#removedDays').hide();
			$('#noEventTableBody').html('');
		} else {
			$('#removedDays').show();
		}

		if ($(currentRepeats).html() == null || $(currentRepeats).html() == "" || $(currentRepeats).html() == "undefined") {
			$('#repeats').val("daily");	
		} else {
			$('#repeats').val($(currentRepeats).html());	
		}
		
		if ($(currentNoSchool).text() == '(No School)') {
			$('#noSchool').prop('checked',true);
		} else {
			$('#noSchool').prop('checked',false);
		}

		if ($(currentNoCycle).html() == "Y") {
			$('#noCycle').prop('checked',true);
		} else {
			$('#noCycle').prop('checked',false);
		}

		if ($(currentEventPrivate).html() == "Y") {
			$('#eventPrivate').prop('checked',true);
		} else {
			$('#eventPrivate').prop('checked',false);
		}

		if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
			$('#noCycleCell').hide();
		} else {
			$('#noCycleCell').show();
		}
		
		var eventData = $(currentEventData).data();
		$('#noEventTableBody').html('');
		var noEventDays = eventData.noEventDays;
		if(noEventDays) {
			$.each(noEventDays, function() {
				addNoEvent(null, this);
			});
		}
		
		$('#extraDayTableBody').html('');
		var extraDays = eventData.extraDays;
		if (extraDays) {
			$.each(extraDays, function() {
				addExtraDay(null, this);
			});
		}
		
		attachments = [];
		$('#attachEventBody').html('');
		var eventAttachments = eventData.attachments;
		if (eventAttachments) {
			$.each(eventAttachments, function() {
				attachments.push({
					id : this.id,
					filename : this.name,
					url : this.url,
					privateFlag : this.privateFlag ? 'Y' : 'N',
					fileType : 'drive',
					type : 'attachEvent'
				});
			});
			$('#attachEventTable').show();
			loadAttachmentsTable();
		}
	
		
		$('#customEventId').val(eventData.customEventId);
		$('#eventCurrentDate').val(eventData.currentDate);
		$('#eventCurrentDateDisplay').html(' - ' + formatDateToShow(eventData.currentDate));
		initEventFormat(action);
		updateRecurringEvent = null;
		updateCurrentEvent = null;
		
		showBox('#editEventBox', 10);

		$('#eventHead').focus();
		
	}	
	
	$('#addNoEvent').on('click', addNoEvent);
	
	function  addNoEvent(e,d) {
		var $input = $('<input/>').attr({
			type : 'text',
			size : '10',
			name : 'noEventDays'
		});
		
		if (d) {
			$input.val(formatDateToShow(d));
		}
		
		$input.datepicker({
			dateFormat : getDateFormat()
		});
		
		var $div = $('<div/>').addClass('deleteRow').on('click', function() {
			$(this).closest('tr').remove();
		});
		
		var $td1 = $('<td/>').append($input);
		var $td2 = $('<td/>').append($div);
		
		$('#noEventTableBody').append($('<tr/>').append($td1).append($td2));
	}
	
	$('#addExtraDay').on('click', addExtraDay);
	
	function addExtraDay(e,d) {
		var $input = $('<input/>').attr({
			type : 'text',
			size : '10',
			name : 'extraDays'
		});
		
		if (d) {
			$input.val(formatDateToShow(d));
		}
		
		$input.datepicker({
			dateFormat : getDateFormat()
		});
		
		var $div = $('<div/>').addClass('deleteRow').on('click', function() {
			$(this).closest('tr').remove();
		});
		
		var $td1 = $('<td/>').append($input);
		var $td2 = $('<td/>').append($div);
		
		$('#extraDayTableBody').append($('<tr/>').append($td1).append($td2));
	}
	
	function getDateFormat() {
		if (userInfo.dateFormat == 2) {
			return "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy";
		}
		return "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy";
	}
		
	
	$('#applyEvent').click(function() {
		$('#formatBox').hide();
		if (action == "updateEvent") {
			if (didRecurringEventChanged() && !updateRecurringEvent) {
				showBox('#updateRecurringEventBox', 30);
			} else {
				showUpdateEventBox();
				if (updateCurrentEvent) {
					proceedSaveEvent();
				} else {
					showBox('#updateEventBox', 30);
				}
			}
		} else {
			proceedSaveEvent();
		}
	});
	
	function showUpdateEventBox() {
		var sDate = formatDateToSave($('#eventDate').val());
		var eDate = formatDateToSave($('#eventEndDate').val());
		var hasAddedDays = false;
		$('input[name="extraDays"]').each(function(){
			if ($(this).val() != '') {
				hasAddedDays = true;
				return false;
			}
		});
		if (sDate == eDate && !hasAddedDays) {
			updateCurrentEvent = 'N';
		}
	}
	
	function didRecurringEventChanged() {
		var sDate = formatDateToSave($('#eventDate').val());
		var eDate = formatDateToSave($('#eventEndDate').val());
		var repeats = $('#repeats').val();
		var oldSDate = formatDateToSave($(currentEventDate).html());
		var oldEDate = formatDateToSave($(currentEventEndDate).html());
		var oldRepeats = $(currentRepeats).html();
		return sDate != oldSDate || eDate != oldEDate || repeats != oldRepeats;
	}
	
	$('#updateRecurringEvent').click(function() {
		updateRecurringEvent = 'Y';
		updateCurrentEvent = 'N';
		hideBox('#updateRecurringEventBox', 30);
		$('#applyEvent').click();
	});
	
	$('#updateOnlyThisEvent').click(function() {
		updateCurrentEvent = 'Y';
		hideBox('#updateEventBox', 30);
		$('#applyEvent').click();
	});
	
	$('#updateAllEvents').click(function() {
		updateCurrentEvent = 'N';
		hideBox('#updateEventBox', 30);
		$('#applyEvent').click();
	});
	
	function proceedSaveEvent() {
		var valError = false;
		$('#eventDateError').html('');
		$('#eventEndDateError').html('');
		clearNotification('#eventErrorMsg');

		var sDate = formatDateToSave($('#eventDate').val());
		var eDate = formatDateToSave($('#eventEndDate').val());

		if (eDate == "") {
			valError = true;
			showNotification('#eventErrorMsg', 'Please enter an End Date');
		} else {
 	 		if (valDate(eDate) == false) {
 	 			valError = true;
 	 			showNotification('#eventErrorMsg', 'Please enter a valid End Date');
 	 		}
 		}
		
		if (sDate == "") {
			valError = true;
			showNotification('#eventErrorMsg', 'Please enter a Start Date');
		} else {
 	 		if (valDate(sDate) == false) {
 	 			valError = true;
	 			showNotification('#eventErrorMsg', 'Please enter a valid Start Date');
 	 		}
 		}

		if (valError == false) {
			var result = compareDates(sDate, eDate);
			if (result != 0) {
				valError = true;
				if (result == 1) {
					showNotification('#eventErrorMsg', 'Start Date must come before End Date');
				} else {
					showNotification('#eventErrorMsg', 'Start Date to End Date cannot exceed one year');
				}
			}		
		}
		
		if (valError == false) {
			$('input[name="noEventDays"]').each(function() {
				var value = $(this).val();
				if (value && value != '') {
					var repeats = $('#repeats').val();
					var removedDay = formatDateToSave(value);
					if ('weekly' == repeats && !isDateInWeeklySchedule(removedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Deleted days cannot be outside of the event series.');
						valError = true;
						return false;
					} else if ('biweekly' == repeats && !isDateInBiweeklySchedule(removedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Deleted days cannot be outside of the event series.');
						valError = true;
						return false;
					} else if ('daily' == repeats && !dates.inRange(removedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Deleted days cannot be outside of the event series.');
						valError = true;
						return false;
					}
				}
			});
		}
		
		if (valError == false) {
			$('input[name="extraDays"]').each(function() {
				var value = $(this).val();
				if (value && value != '') {
					var repeats = $('#repeats').val();
					var addedDay = formatDateToSave(value);
					if ('weekly' == repeats && isDateInWeeklySchedule(addedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Added days cannot be within the event series.');
						valError = true;
						return false;
					} else if ('biweekly' == repeats && isDateInBiweeklySchedule(addedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Added days cannot be within the event series.');
						valError = true;
						return false;
					} else if ('daily' == repeats && dates.inRange(addedDay, sDate, eDate)) {
						showNotification('#eventErrorMsg', 'Added days cannot be within the event series.');
						valError = true;
						return false;
					}
				}
			});
		}

		if ($.trim($('#eventStartTime').val()) != '') {
			if (valTime($.trim($('#eventStartTime').val())) == false) {
				valError = true;
				showNotification('#eventErrorMsg', 'Please enter a valid Start Time');
			}
		}
		
		if ($.trim($('#eventEndTime').val()) != '') {
			if (valTime($.trim($('#eventEndTime').val())) == false) {
				valError = true;
				showNotification('#eventErrorMsg', 'Please enter a valid End Time');
			}
		}
		
		if ($('#noSchool').prop('checked') == true && dayDifference(sDate, eDate) > 14) {
			showBox('#addEventWarning', 30);
		} else {
			proceedAddEvent();
		}
		
		$('#closeAddEventWarning').click(function() {
			hideBox('#addEventWarning', 30);
		});
		
		$('#applyAddEventWarning').click(function() {
			proceedAddEvent();
			hideBox('#addEventWarning', 30);
		});
		
		function proceedAddEvent() {
			
			if (valError == false) {
				clearNotification('#eventErrorMsg');
				if (userMode == "T") {
					$('.noSchoolAction').hide();
					if ($('#noSchool').prop('checked') && customDaysChanged()) {
						if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
							$('#noSchoolChange2').show();
							showBox('#noSchoolEventBox', 30);
						} else {
							applyEvent("Y"); 
						}
					} else if ((action == "newEvent" && $('#noSchool').prop('checked') == true) || ($('#noSchool').prop('checked') == true && $(currentNoSchool).text() != '(No School)')) {
						// add a no school event
						if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
							$('#noSchoolAdd').show();
							showBox('#noSchoolEventBox', 30);
						} else {
							applyEvent("Y");  // if a cycle schedule, always
												// shift when No School event
						}
					} else if ($('#noSchool').prop('checked') == true && ($(currentEventDate).text() != $('#eventDate').val() || $(currentEventEndDate).text() != $('#eventEndDate').val())) {
						// change a no school event date
						if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
							$('#noSchoolChange').show();
							showBox('#noSchoolEventBox', 30);
						} else {
							applyEvent("Y");  // if a cycle schedule, always
												// shift when No School event
						}
					} else if ($('#noSchool').prop('checked') == false && $(currentNoSchool).text() == '(No School)') {
						// remove a no school event
						if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
							$('#noSchoolDelete').show();
							showBox('#noSchoolEventBox', 30);
						} else {
							applyEvent("Y"); // if a cycle schedule, always
												// shift when No School event
						}
					} else if ((action == "newEvent" && $('#noCycle').prop('checked') == true) || ($('#noCycle').prop('checked') == true && $(currentNoCycle).html() != "Y") ||
								($('#noCycle').prop('checked') == true && ($(currentEventDate).text() != $('#eventDate').val() || $(currentEventEndDate).text() != $('#eventEndDate').val())) ||
								($('#noCycle').prop('checked') == false && $(currentNoCycle).html() == "Y")) {
						// a no cycle change, so need to shift lessons
						applyEvent("Y");
					} else {
						applyEvent("N");
					}
				} else {
					applyEvent("N");
				}
			}
		}		
	}
	
	function isDateInWeeklySchedule(d, sDate, eDate) {
		var aDay = dates.convert(d).getDay();
		var sDay = dates.convert(sDate).getDay();
		return dates.inRange(d, sDate, eDate) && aDay === sDay;
	}
		
	function isDateInBiweeklySchedule(d, sDate, eDate) {
		var aDay = dates.convert(d).getDay();
		var sDay = dates.convert(sDate).getDay();
		var diff = diffDatesInWeeks(sDate, d);
		return dates.inRange(d, sDate, eDate) && isEven(diff) && aDay === sDay;
	} 
	
	function diffDatesInWeeks(s, e) {
		var start = dates.convert(s);
		var end = dates.convert(e);
		var dif = Math.round(end-start);
		return Math.round(dif/1000/60/60/24/7);
	}
	
	function customDaysChanged() {
		var eventData = $(currentEventData).data();
		
		if (!eventData) {
			return false;
		}
		
		var oldAddedDays =  (eventData.extraDays) ? eventData.extraDays : [];
		var oldRemovedDays = (eventData.noEventDays) ? eventData.noEventDays : [];
		
		var addedDays = [];
		$('input[name="extraDays"]').each(function() {
			var value = $(this).val();
			if (value && value != '') {
				addedDays.push(formatDateToSave(value));
			}
		});
		
		if (arraysNotEqual(addedDays, oldAddedDays)) {
			return true;
		}
		
		var removedDays = [];
		$('input[name="noEventDays"]').each(function() {
			var value = $(this).val();
			if (value && value != '') {
				removedDays.push(formatDateToSave(value));
			}
		});
		
		if (arraysNotEqual(removedDays, oldRemovedDays)) {
			return true;
		}
		
		return false;
	}
	
	function arraysNotEqual(a, b) {
		return !arraysEqual(a, b);
	}
	
	function arraysEqual(a, b) {
		  if (a === b) return true;
		  if (a == null || b == null) return false;
		  if (a.length != b.length) return false;

		  a.sort();
		  b.sort();

		  for (var i = 0; i < a.length; ++i) {
		    if (a[i] !== b[i]) return false;
		  }
		  return true;
	}
	
	function showNotification(selector, message) {
		$(selector).closest('.alertContainer').find('.alertMessage').html('').hide();
		$(selector).html(message).show();
		$(selector).closest('.alertContainer').fadeIn(500);
	}
	
	function clearNotification(selector) {
		$(selector).closest('.alertContainer').find('.alertMessage').html('').hide();
		$(selector).closest('.alertContainer').hide();
	}
	
	function dayDifference(sDate, eDate) {
		var start = new Date(sDate);
		var end   = new Date(eDate);
		
		var one_day=1000*60*60*24;
		var date1_ms = start.getTime();
		var date2_ms = end.getTime();
		
		var difference = date2_ms - date1_ms;
		
		return Math.round(difference/one_day);
	}

	$('#cancelUpdateRecurringEvent').on('click',function(){
		hideBox('#updateRecurringEventBox', 30);
	});
	
	$('#cancelUpdateEvent').on('click',function(){
		hideBox('#updateEventBox', 30);
	});
	
	$('#closeEventChange').click(function() {
		hideBox('#noSchoolEventBox', 30);
	});

	$('#cancelEventChange').click(function() {
		hideBox('#noSchoolEventBox', 30);
	});
	
	$('#eventShift').click(function() {
		hideBox('#noSchoolEventBox', 30);
		if (action == "deleteEvent") {
			deleteEvent("Y");
		} else {
			applyEvent("Y");
		}
	});

	$('#eventNoShift').click(function() {
		hideBox('#noSchoolEventBox', 30);
		if (action == "deleteEvent") {
			deleteEvent("N");
		} else {
			applyEvent("N");
		}
	});
	
	function areEqual(a, b) {
		return (a == b) ? 'Y' : 'N';
	}
	
	function setEventFormat(eventInfo) {
		var eventFormat = getEventFormat({});
		eventInfo.titleFont = $('#newEventFont').html();
		eventInfo.titleFontSize = $('#newEventSize').html();
		eventInfo.titleColor = rgbToHex($('#newEventFormat').css('color'));
		eventInfo.titleFillColor = rgbToHex($('#newEventFormat').css('background-color'));
		eventInfo.titleBold = $('#newEventFormat').css('font-weight') == "700" || $('#newEventFormat').css('font-weight') == "bold" ? "Y" : "N";
		eventInfo.titleItalic = $('#newEventFormat').css('font-style') == "italic" ? "Y" : "N";
		eventInfo.titleUnderline = $('#newEventFormat').css('text-decoration') == "underline" ? "Y" : "N";

		eventInfo.bodyFont = $('#newEventTextFont').html();
		eventInfo.bodyFontSize = $('#newEventTextSize').html();
		eventInfo.bodyColor = rgbToHex($('#newEventFormatText').css('color'));
		eventInfo.bodyFillColor = rgbToHex($('#newEventFormatText').css('background-color'));
		eventInfo.bodyBold = $('#newEventFormatText').css('font-weight') == "700" || $('#newEventFormatText').css('font-weight') == "bold" ? "Y" : "N";
		eventInfo.bodyItalic = $('#newEventFormatText').css('font-style') == "italic" ? "Y" : "N";
		eventInfo.bodyUnderline = $('#newEventFormatText').css('text-decoration') == "underline" ? "Y" : "N";
		
		if (eventInfo.titleFont == eventFormat.titleFont
			&& eventInfo.titleFontSize == eventFormat.titleFontSize
			&& eventInfo.titleColor == eventFormat.titleFontColor
			&& eventInfo.titleFillColor == eventFormat.titleFillColor
			&& eventInfo.titleBold == areEqual(eventFormat.titleBold, 'bold')
			&& eventInfo.titleItalic == areEqual(eventFormat.titleItalic, 'italic')
			&& eventInfo.titleUnderline == areEqual(eventFormat.titleUnderline, 'underline')
			&& eventInfo.bodyFont == eventFormat.bodyFont
			&& eventInfo.bodyFontSize == eventFormat.bodyFontSize
			&& eventInfo.bodyColor == eventFormat.bodyFontColor
			&& eventInfo.bodyFillColor == eventFormat.bodyFillColor
			&& eventInfo.bodyBold == areEqual(eventFormat.bodyBold, 'bold')
			&& eventInfo.bodyItalic == areEqual(eventFormat.bodyItalic, 'italic')
			&& eventInfo.bodyUnderline == areEqual(eventFormat.bodyUnderline, 'underline')) {
			delete eventInfo.titleFont;
			delete eventInfo.titleFontSize;
			delete eventInfo.titleColor;
			delete eventInfo.titleFillColor;
			delete eventInfo.titleBold;
			delete eventInfo.titleItalic;
			delete eventInfo.titleUnderline;
			delete eventInfo.bodyFont;
			delete eventInfo.bodyFontSize;
			delete eventInfo.bodyColor;
			delete eventInfo.bodyFillColor;
			delete eventInfo.bodyBold;
			delete eventInfo.bodyItalic;
			delete eventInfo.bodyUnderline;
		}
	}

	function applyEvent(shiftLessons) {
			
		var eventInfo = new Object ();
		
		eventInfo.shiftLessons = shiftLessons;
		eventInfo.eventDate = formatDateToSave($('#eventDate').val());
		eventInfo.endDate = formatDateToSave($('#eventEndDate').val());
		eventInfo.repeats = $('#repeats').val();
		eventInfo.eventText = $('#eventText').val();
		eventInfo.eventStartTime = $.trim($('#eventStartTime').val());
		eventInfo.eventEndTime = $.trim($('#eventEndTime').val());
		eventInfo.eventTitle = $('#eventHead').val();
		eventInfo.userMode = userMode;
		setEventFormat(eventInfo);
		eventInfo.customEventId = $('#customEventId').val();
		eventInfo.eventCurrentDate = $('#eventCurrentDate').val();
		eventInfo.updateCurrentEvent = updateCurrentEvent;
		updateCurrentEvent = null;
		updateRecurringEvent = null;
		eventInfo.extraDays = [];
		eventInfo.noEventDays = [];

		$('input[name="extraDays"]').each(function() {
			var value = $(this).val();
			if (value && value != '') {
				eventInfo.extraDays.push(formatDateToSave(value));
			}
		});
		
		$('input[name="noEventDays"]').each(function() {
			var value = $(this).val();
			if (value && value != '') {
				eventInfo.noEventDays.push(formatDateToSave(value));
			}
		});
		
		if (userMode == "A") {
			eventInfo.schoolId = userInfo.schoolId;
		} else {
			eventInfo.schoolId = 0;
		}

		if ($('#noSchool').prop('checked') == true) {
			eventInfo.noSchool = 'Y';
		} else {
			eventInfo.noSchool = 'N';
		}

		if ($('#noCycle').prop('checked') == true) {
			eventInfo.noCycle = 'Y';
		} else {
			eventInfo.noCycle = 'N';
		}

		if ($('#eventPrivate').prop('checked') == true) {
			eventInfo.privateFlag = 'Y';
		} else {
			eventInfo.privateFlag = 'N';
		}
		
		$('#attachEventBody tr').each(function(i) {
			var $anchor = $(this).find('a');
			var $check = $(this).find('input[name^="attachPrivate"]');
			eventInfo['attachments['+ i +'].name'] = $anchor.text();
			eventInfo['attachments['+ i +'].url'] = $anchor.attr('href');
			eventInfo['attachments['+ i +'].privateFlag'] = $check.prop('checked');
		});
		
		if (paymentNeeded == false) {
			showLoading();
			var eventId = getCurrentEventId();
			if (eventId && eventId > 0) {
				eventInfo.eventId = eventId;
				$.post('updateEvent/v5', eventInfo, loadEvents, "json");
			} else {
				$.post('addEvent', eventInfo, loadEvents, "json");
			}
		} else {
			showExpiredMsg();
		}

	}
	
	$('#deleteEvent').click(function() {
		var eventData = $(currentEventData).data();
		var start = $(currentEventDate).html();;
		var end = $(currentEventEndDate).html();
		
		if (eventData) {
			start = eventData.eventDate;
			end = eventData.endDate;
		} 
		
		if (!end || end == "" || end == "undefined") {
			end = start;
		}
		
		if (updateCurrentEvent || (start && end && start == end)) {
			proceedDeleteEvent();
		} else {
			showBox('#deleteEventBox', 30);
		}
	});
	
	$('#deleteOnlyThisEvent').click(function() {
		updateCurrentEvent = 'Y';
		hideBox('#deleteEventBox', 30);
		$('#deleteEvent').click();
	});
	
	$('#deleteAllEvents').click(function() {
		updateCurrentEvent = 'N';
		hideBox('#deleteEventBox', 30);
		$('#deleteEvent').click();
	});
	
	function proceedDeleteEvent() {

		action = 'deleteEvent';
		
		if (userMode == "T") {
			var eSchoolId = $('#' + currentEventDatastoreId + 'ES').html();
			if (eSchoolId != "" && eSchoolId != 0) {
				showErrorBox('You must be an administrator to delete school events');
			} else if (userMode == "T") {
				if ($(currentNoSchool).text() == '(No School)') {
					// remove a no school event
					if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
						$('.noSchoolAction').hide();
						$('#noSchoolDelete').show();
						showBox('#noSchoolEventBox', 30);
					} else {
						deleteEvent("Y"); // if a cycle schedule, always shift
											// when No School event
					}
				} else if ($(currentNoCycle).html() == "Y") {
					// a no cycle change, so need to shift lessons
					deleteEvent("Y")
				} else {
					deleteEvent("N");
				}
			}
		} else {
			deleteEvent("N");
		}
				
	}
	
	$('#cancelDeleteEvent').on('click', function() {
		hideBox('#deleteEventBox', 30);
	});
	
	function deleteEvent(shiftLessons) {

		deleteData = new Object();
		deleteData.shiftLessons = shiftLessons;
		deleteData.eventId = getCurrentEventId();
		deleteData.userMode = userMode;

		eventData = $(currentEventData).data();
		deleteData.deleteCurrentEvent = updateCurrentEvent; 
		deleteData.customEventId = eventData.customEventId;
		deleteData.eventCurrentDate = eventData.currentDate;
		updateCurrentEvent = null;
		
		if (paymentNeeded == false) {
			action = 'deleteEvent';
			showLoading();
			$.getJSON('deleteEvent', deleteData, loadEvents);
		} else {
			showExpiredMsg();
		}
		
	}
	
	function getCurrentEventId() {
		return currentEventDatastoreId.substring(0, currentEventDatastoreId.indexOf('-'));
	}
	
/** ** CANCEL EVENT selected, close Event box *** */

	$('#cancelEvent').click(function() {
		hideBox('#editEventBox', 10);
		$('#formatBox').hide();
	});

	$('#closeEvent').click(function() {
		hideBox('#editEventBox', 10);
	});
	
	$('#closeInfo').click(function() {
		var $position = $(this).offset();
		$('#bannerMenu').css({ position : 'absolute', top : $position.top, left : $position.left - $('#bannerMenu').width() + 20}).show();
		bannerMenuOpen = true;
	});
	
	$('.bannerItem').click(function(){
		var item = $(this).data('selected');
		if (item == '1') {
			$('#infoBar').hide();
		} else {
			$.post('services/planbook/teacher/updateBannerInfo', { closeMode : item }, function(data) {
				if (data.notLoggedIn == "true") {
					showLogin();
				} else if (data.error == "true") {
					showErrorMsg();
				} else {
					if (item == '3') {
						$('#showBanner').prop('checked', false);
						userInfo.showBanner = 'N';
					}
					$('#infoBar').hide();
				}
			});
		}
	});
	
	$('#closeAlertBar').click(function() {
		$('#alertBar').hide();
	});

	$('#accountButton').click(function() {
		browserButton = false;
		window.location.hash = "account";
		showAccount();
	});
			
	function showAccount() {

		currentView = "Account";
		hideMessage();
		hideAll();
		
		clearNotification('#accountErrorMsg');
		
		$('#editAccountBox').show();
		$('#firstName').focus();
		
		$('#oldPassword').val('');
		$('#newPassword').val('');
		$('#confirmPassword').val('');

		$('#changePasswordRow').show();
		$('#changeEmailRow').show();
		$('.passwordChange').hide();
		$('#emailChange').hide();

		if (userMode == "A") {
			$('#purchaseButton').hide();
			$('#schoolMsg').show();
		} else {
			$('#purchaseButton').show();
			$('#schoolMsg').hide();
		}
		
		$('#emailAddress').val(userInfo.emailAddress);
		$('#firstName').val(userInfo.firstName);
		$('#lastName').val(userInfo.lastName);
		$('#schoolId').val(userInfo.schoolId);
		$('#displayName2').val(userInfo.displayName);
		$('#schoolName').val(userInfo.schoolName);
		$('#schoolDistrict').val(userInfo.schoolDistrict);
		$('#sendEmail').prop('checked', userInfo.sendEmail == 'Y');
		$('#showBanner').prop('checked', userInfo.showBanner == 'Y');
		$('#autosaveInterval').val(userInfo.autosaveInterval);
		$('#registeredDate').html(formatDateToShow(userInfo.registeredDate)); 
		$('#paidThroughDate').html(formatDateToShow(userInfo.paidThroughDate));

		// if user is signed in load calendars in the database, hide sign in,
		// display disconnect btn
		if ($('#googleSignedIn').html() == "Y" && $('#googleSignInBtn').is(':visible')) {
			$('#googleSignInBtn').trigger('click');
		}
	}
	
	$('#lessonSectionsButton').click(function() {
		browserButton = false;
		window.location.hash = "sections";
		showSections();
	});

	function showSections() {
		hideMessage();
		hideAll();
		showAdminLayouts();
	}
	
	$('#schoolYearButton').click(function() {
		browserButton = false;
		window.location.hash = "schoolyear";
		showSchoolYear();
	});
	
	function showSchoolYear() {
		
		hideMessage();
		hideAll();

		$('#editSchoolYearBox').show();
		$('#schoolName').focus();
		
		$('#editNamesBox').hide();
		clearNotification('#schoolYearErrorMsg');

		if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek') {
			$('input[name="classSchedule"]')[0].checked = true;
			$('#cycleDays').val('2');
			$('#cycleDays').prop("disabled", true);
			$('#pickNames').prop("disabled", true);
			$('#schoolTermsBox').hide();
		} else {
			if (userInfo.classCycle == 'twoWeeks') {
				$('input[name="classSchedule"]')[1].checked = true;
				$('#cycleDays').val('2');
				$('#cycleDays').prop("disabled", true);
				$('#pickNames').prop("disabled", true);
				$('#schoolTermsBox').show();
			} else {
				$('input[name="classSchedule"]')[2].checked = true;
				$('#cycleDays').val(userInfo.classCycle);
				$('#cycleDays').prop("disabled", false);
				$('#pickNames').prop("disabled", false);
				$('#schoolTermsBox').show();
			}
		}
		
		if (userInfo.sunCycle == "Y") {
			$('#sunCycle').prop('checked',true);
		} else {
			$('#sunCycle').prop('checked',false);
		}

		if (userInfo.monCycle == "Y") {
			$('#monCycle').prop('checked',true);
		} else {
			$('#monCycle').prop('checked',false);
		}

		if (userInfo.tueCycle == "Y") {
			$('#tueCycle').prop('checked',true);
		} else {
			$('#tueCycle').prop('checked',false);
		}

		if (userInfo.wedCycle == "Y") {
			$('#wedCycle').prop('checked',true);
		} else {
			$('#wedCycle').prop('checked',false);
		}

		if (userInfo.thuCycle == "Y") {
			$('#thuCycle').prop('checked',true);
		} else {
			$('#thuCycle').prop('checked',false);
		}

		if (userInfo.friCycle == "Y") {
			$('#friCycle').prop('checked',true);
		} else {
			$('#friCycle').prop('checked',false);
		}
		if (userInfo.satCycle == "Y") {
			$('#satCycle').prop('checked',true);
		} else {
			$('#satCycle').prop('checked',false);
		}

		$('#firstDay').val(formatDateToShow(userInfo.firstDay));
		$('#lastDay').val(formatDateToShow(userInfo.lastDay));
		$('#yearName').val(userInfo.yearName);

		startDay = $('#firstDay').val();
		
		cycleChange.sunCycle = userInfo.sunCycle;
		cycleChange.monCycle = userInfo.monCycle;
		cycleChange.tueCycle = userInfo.tueCycle;
		cycleChange.wedCycle = userInfo.wedCycle;
		cycleChange.thuCycle = userInfo.thuCycle;
		cycleChange.friCycle = userInfo.friCycle;
		cycleChange.satCycle = userInfo.satCycle;

	}
		
	$('#displayButton').click(function() {
		browserButton = false;
		window.location.hash = "display";
		showDisplay();
	});
		
	function showDisplay() {

		hideMessage();
		hideAll();
		
		$('#selectSchoolLayout').val(userInfo.currentLessonLayoutId);

		loadDisplayLessonSections();
		
		ls = '<tr><td><div id="tab13Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.lessonTitleFont] + 
		'; font-size:' + userInfo.lessonTitleSize + 
		'pt; color:' + userInfo.lessonTitleColor + 
		'; background-color:' + userInfo.lessonTitleLabelFillColor + 
		'; font-weight:' + (userInfo.lessonTitleLabelBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.lessonTitleLabelItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.lessonTitleLabelUnderline == "Y" ? "underline" : "none") + 
		';">Lesson Title';
		ls = ls + '<p id="tab13FormatText" style="display:none; font-family:' + fontTypes[userInfo.lessonTitleTextFont] + 
		'; font-size:' + userInfo.lessonTitleTextSize + 
		'pt; color:' + userInfo.lessonTitleTextColor + 
		'; background-color:' + userInfo.lessonTitleTextFillColor + 
		'; font-weight:' + (userInfo.lessonTitleTextBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.lessonTitleTextItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.lessonTitleTextUnderline == "Y" ? "underline" : "none") + 
		';"></p>';
		ls = ls + '<p id="tab13Hide" style="display:none;">' + userInfo.lessonTitleHide + '</p>';
		ls = ls + '<p id="tab13Size" style="display:none;">' + userInfo.lessonTitleSize + '</p>';
		ls = ls + '<p id="tab13TextSize" style="display:none;">' + userInfo.lessonTitleTextSize + '</p>';
		ls = ls + '<p id="tab13Font" style="display:none;">' + userInfo.lessonTitleFont + '</p>';
		ls = ls + '<p id="tab13TextFont" style="display:none;">' + userInfo.lessonTitleTextFont + '</p>';
		ls = ls + '</div></td><td><input type="button" value="Format" id="tab13FormatButton" class="formatButton buttonsmall"></td></tr>';

		ls = ls + '<tr><td><div id="tab10Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.attachmentsFont] + 
		'; font-size:' + userInfo.attachmentsSize + 
		'pt; color:' + userInfo.attachmentsColor + 
		'; background-color:' + userInfo.attachmentsLabelFillColor + 
		'; font-weight:' + (userInfo.attachmentsLabelBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.attachmentsLabelItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.attachmentsLabelUnderline == "Y" ? "underline" : "none") + 
		';">Attachments';
		ls = ls + '<p id="tab10FormatText" style="display:none; font-family:' + fontTypes[userInfo.attachmentsTextFont] + 
		'; font-size:' + userInfo.attachmentsTextSize + 
		'pt; color:' + userInfo.attachmentsTextColor + 
		'; background-color:' + userInfo.attachmentsTextFillColor + 
		'; font-weight:' + (userInfo.attachmentsTextBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.attachmentsTextItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.attachmentsTextUnderline == "Y" ? "underline" : "none") + 
		';"></p>';
		ls = ls + '<p id="tab10Hide" style="display:none;">' + userInfo.attachmentsHide + '</p>';
		ls = ls + '<p id="tab10Size" style="display:none;">' + userInfo.attachmentsSize + '</p>';
		ls = ls + '<p id="tab10TextSize" style="display:none;">' + userInfo.attachmentsTextSize + '</p>';
		ls = ls + '<p id="tab10Font" style="display:none;">' + userInfo.attachmentsFont + '</p>';
		ls = ls + '<p id="tab10TextFont" style="display:none;">' + userInfo.attachmentsTextFont + '</p>';
		ls = ls + '</div></td><td><input type="button" value="Format" id="tab10FormatButton" class="formatButton buttonsmall"></td></tr>';

		ls = ls + '<tr><td><div id="tab11Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.assignmentsFont] + 
		'; font-size:' + userInfo.assignmentsSize + 
		'pt; color:' + userInfo.assignmentsColor + 
		'; background-color:' + userInfo.assignmentsLabelFillColor + 
		'; font-weight:' + (userInfo.assignmentsLabelBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.assignmentsLabelItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.assignmentsLabelUnderline == "Y" ? "underline" : "none") + 
		';">Assignments';
		ls = ls + '<p id="tab11FormatText" style="display:none; font-family:' + fontTypes[userInfo.assignmentsTextFont] + 
		'; font-size:' + userInfo.assignmentsTextSize + 
		'pt; color:' + userInfo.assignmentsTextColor + 
		'; background-color:' + userInfo.assignmentsTextFillColor + 
		'; font-weight:' + (userInfo.assignmentsTextBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.assignmentsTextItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.assignmentsTextUnderline == "Y" ? "underline" : "none") + 
		';"></p>';
		ls = ls + '<p id="tab11Hide" style="display:none;">' + userInfo.assignmentsHide + '</p>';
		ls = ls + '<p id="tab11Size" style="display:none;">' + userInfo.assignmentsSize + '</p>';
		ls = ls + '<p id="tab11TextSize" style="display:none;">' + userInfo.assignmentsTextSize + '</p>';
		ls = ls + '<p id="tab11Font" style="display:none;">' + userInfo.assignmentsFont + '</p>';
		ls = ls + '<p id="tab11TextFont" style="display:none;">' + userInfo.assignmentsTextFont + '</p>';
		ls = ls + '</div></td><td><input type="button" value="Format" id="tab11FormatButton" class="formatButton buttonsmall"></td></tr>';

		ls = ls + '<tr><td><div id="tab12Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.assessmentsFont] + 
		'; font-size:' + userInfo.assessmentsSize + 
		'pt; color:' + userInfo.assessmentsColor + 
		'; background-color:' + userInfo.assessmentsLabelFillColor + 
		'; font-weight:' + (userInfo.assessmentsLabelBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.assessmentsLabelItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.assessmentsLabelUnderline == "Y" ? "underline" : "none") + 
		';">Assessments';
		ls = ls + '<p id="tab12FormatText" style="display:none; font-family:' + fontTypes[userInfo.assessmentsTextFont] + 
		'; font-size:' + userInfo.assessmentsTextSize + 
		'pt; color:' + userInfo.assessmentsTextColor + 
		'; background-color:' + userInfo.assessmentsTextFillColor + 
		'; font-weight:' + (userInfo.assessmentsTextBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.assessmentsTextItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.assessmentsTextUnderline == "Y" ? "underline" : "none") + 
		';"></p>';
		ls = ls + '<p id="tab12Hide" style="display:none;">' + userInfo.assessmentsHide + '</p>';
		ls = ls + '<p id="tab12Size" style="display:none;">' + userInfo.assessmentsSize + '</p>';
		ls = ls + '<p id="tab12TextSize" style="display:none;">' + userInfo.assessmentsTextSize + '</p>';
		ls = ls + '<p id="tab12Font" style="display:none;">' + userInfo.assessmentsFont + '</p>';
		ls = ls + '<p id="tab12TextFont" style="display:none;">' + userInfo.assessmentsTextFont + '</p>';
		ls = ls + '</div></td><td><input type="button" value="Format" id="tab12FormatButton" class="formatButton buttonsmall"></td></tr>';

		$('#formatTableBody').html(ls);
		
		ls = '<tr><td><div id="eventFormat" class="tabFormat" style="font-family:' + fontTypes[userInfo.eventLabelFont] + 
		'; font-size:' + userInfo.eventLabelSize + 
		'pt; color:' + userInfo.eventLabelColor + 
		'; background-color:' + userInfo.eventLabelFillColor + 
		'; font-weight:' + (userInfo.eventLabelBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.eventLabelItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.eventLabelUnderline == "Y" ? "underline" : "none") + 
		';">';
		ls = ls + userInfo.eventLabel;
		ls = ls + '<p id="eventFormatText" style="display:none; font-family:' + fontTypes[userInfo.eventTextFont] + 
		'; font-size:' + userInfo.eventTextSize + 
		'pt; color:' + userInfo.eventTextColor + 
		'; background-color:' + userInfo.eventTextFillColor + 
		'; font-weight:' + (userInfo.eventTextBold == "Y" ? "700" : "normal") + 
		'; font-style:' + (userInfo.eventTextItalic == "Y" ? "italic" : "normal") + 
		'; text-decoration:' + (userInfo.eventTextUnderline == "Y" ? "underline" : "none") + 
		';"></p>';
		ls = ls + '<p id="eventHide" style="display:none;">' + userInfo.eventHide + '</p>';
		ls = ls + '<p id="eventSize" style="display:none;">' + userInfo.eventLabelSize + '</p>';
		ls = ls + '<p id="eventTextSize" style="display:none;">' + userInfo.eventTextSize + '</p>';
		ls = ls + '<p id="eventFont" style="display:none;">' + userInfo.eventLabelFont + '</p>';
		ls = ls + '<p id="eventTextFont" style="display:none;">' + userInfo.eventTextFont + '</p>';
		ls = ls + '</div></td><td><input type="button" value="Format" id="eventFormatButton" class="formatButton buttonsmall"></td></tr>';

		$('#formatEventBody').html(ls);
		
		if (userInfo.classHeadOrder == "1") {
			$('input[name="classHeadOrder"]')[0].checked = true; 
		} else {
			$('input[name="classHeadOrder"]')[1].checked = true; 
		}

		if (userInfo.classHeadCentered == "Y") {
			$('input[name="classHeadCentered"]')[0].checked = true; 
		} else {
			$('input[name="classHeadCentered"]')[1].checked = true; 
		}
		
		if (userInfo.dateFormat == 1) {
			$('input[name="dateFormat"]')[0].checked = true; 
		} else {
			$('input[name="dateFormat"]')[1].checked = true; 
		}
		
		$('#dateDelimiter').val(userInfo.dateDelimiter);
		
		if (userInfo.showCount == "Y") {
			$('#showCount').prop('checked',true);
		} else {
			$('#showCount').prop('checked',false);
		}

		if (userInfo.equalSize == "Y") {
			$('#equalSize').prop('checked',true);
			$('#boxSize').prop("disabled", false);
			$('#adjustToFit').prop("disabled", false);
		} else {
			$('#equalSize').prop('checked',false);
			$('#boxSize').prop("disabled", true);
			$('#adjustToFit').prop("disabled", true);
			$('#adjustToFit').prop("checked", false);
		}

		if (userInfo.adjustToFit == "Y") {
			$('#boxSize').prop("disabled", true);
		}
		
		if (userInfo.boxSize == 0) {userInfo.boxSize = 100;}
		$('#boxSize').val(userInfo.boxSize);

		if (userInfo.sunShow == "Y") {
			$('#sunShow').prop('checked',true);
		} else {
			$('#sunShow').prop('checked',false);
		}

		if (userInfo.monShow == "Y") {
			$('#monShow').prop('checked',true);
		} else {
			$('#monShow').prop('checked',false);
		}

		if (userInfo.tueShow == "Y") {
			$('#tueShow').prop('checked',true);
		} else {
			$('#tueShow').prop('checked',false);
		}

		if (userInfo.wedShow == "Y") {
			$('#wedShow').prop('checked',true);
		} else {
			$('#wedShow').prop('checked',false);
		}

		if (userInfo.thuShow == "Y") {
			$('#thuShow').prop('checked',true);
		} else {
			$('#thuShow').prop('checked',false);
		}

		if (userInfo.friShow == "Y") {
			$('#friShow').prop('checked',true);
		} else {
			$('#friShow').prop('checked',false);
		}

		if (userInfo.satShow == "Y") {
			$('#satShow').prop('checked',true);
		} else {
			$('#satShow').prop('checked',false);
		}
		
		if (userInfo.adjustToFit == "Y") {
			$('#adjustToFit').prop('checked',true);
		} else {
			$('#adjustToFit').prop('checked',false);
		}
		
		$('#editDisplayBox').show();

	}
	
	$('#selectSchoolLayout').change(function() {	

		var tempLayoutId = $('#selectSchoolLayout').val();
		
		if (tempLayoutId != 0) {
			
			var lPos = 0;
			for (var x=0; x<lessonLayouts.length; x++) {
				if (lessonLayouts[x].lessonLayoutId == tempLayoutId) {
					lPos = x;
					break;
				}
			}
 
			$('#schoolLayout').show();
			$('#teacherLayout').hide();
			$('#sampleLayouts').hide();
			
			var lsO = 0;
			var ls = "";
			
			while (lsO<=9) {
				switch(lsO) {
					case lessonLayouts[lPos].tab1DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab1Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab1Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.lessonFont] + 
						'; font-size:' + userInfo.lessonSize + 
						'pt; color:' + userInfo.lessonColor + 
						'; background-color:' + userInfo.lessonLabelFillColor + 
						'; font-weight:' + (userInfo.lessonLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.lessonLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.lessonLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab1Label;
						ls = ls + '<p id="tab1FormatText" style="display:none; font-family:' + fontTypes[userInfo.lessonTextFont] + 
						'; font-size:' + userInfo.lessonTextSize + 
						'pt; color:' + userInfo.lessonTextColor + 
						'; background-color:' + userInfo.lessonTextFillColor + 
						'; font-weight:' + (userInfo.lessonTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.lessonTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.lessonTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab1Hide" style="display:none;">' + userInfo.lessonHide + '</p>';
						ls = ls + '<p id="tab1Size" style="display:none;">' + userInfo.lessonSize + '</p>';
						ls = ls + '<p id="tab1TextSize" style="display:none;">' + userInfo.lessonTextSize + '</p>';
						ls = ls + '<p id="tab1Font" style="display:none;">' + userInfo.lessonFont + '</p>';
						ls = ls + '<p id="tab1TextFont" style="display:none;">' + userInfo.lessonTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab1FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab2DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab2Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab2Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab2Font] + 
						'; font-size:' + userInfo.tab2Size + 
						'pt; color:' + userInfo.tab2Color + 
						'; background-color:' + userInfo.tab2LabelFillColor + 
						'; font-weight:' + (userInfo.tab2LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab2LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab2LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab2Label;
						ls = ls + '<p id="tab2FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab2TextFont] + 
						'; font-size:' + userInfo.tab2TextSize + 
						'pt; color:' + userInfo.tab2TextColor + 
						'; background-color:' + userInfo.tab2TextFillColor + 
						'; font-weight:' + (userInfo.tab2TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab2TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab2TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab2Hide" style="display:none;">' + userInfo.tab2Hide + '</p>';
						ls = ls + '<p id="tab2Size" style="display:none;">' + userInfo.tab2Size + '</p>';
						ls = ls + '<p id="tab2TextSize" style="display:none;">' + userInfo.tab2TextSize + '</p>';
						ls = ls + '<p id="tab2Font" style="display:none;">' + userInfo.tab2Font + '</p>';
						ls = ls + '<p id="tab2TextFont" style="display:none;">' + userInfo.tab2TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab2FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab3DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab3Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab3Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab3Font] + 
						'; font-size:' + userInfo.tab3Size + 
						'pt; color:' + userInfo.tab3Color + 
						'; background-color:' + userInfo.tab3LabelFillColor + 
						'; font-weight:' + (userInfo.tab3LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab3LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab3LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab3Label;
						ls = ls + '<p id="tab3FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab3TextFont] + 
						'; font-size:' + userInfo.tab3TextSize + 
						'pt; color:' + userInfo.tab3TextColor + 
						'; background-color:' + userInfo.tab3TextFillColor + 
						'; font-weight:' + (userInfo.tab3TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab3TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab3TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab3Hide" style="display:none;">' + userInfo.tab3Hide + '</p>';
						ls = ls + '<p id="tab3Size" style="display:none;">' + userInfo.tab3Size + '</p>';
						ls = ls + '<p id="tab3TextSize" style="display:none;">' + userInfo.tab3TextSize + '</p>';
						ls = ls + '<p id="tab3Font" style="display:none;">' + userInfo.tab3Font + '</p>';
						ls = ls + '<p id="tab3TextFont" style="display:none;">' + userInfo.tab3TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab3FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab4DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab4Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab4Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab4Font] + 
						'; font-size:' + userInfo.tab4Size + 
						'pt; color:' + userInfo.tab4Color + 
						'; background-color:' + userInfo.tab4LabelFillColor + 
						'; font-weight:' + (userInfo.tab4LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab4LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab4LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab4Label;
						ls = ls + '<p id="tab4FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab4TextFont] + 
						'; font-size:' + userInfo.tab4TextSize + 
						'pt; color:' + userInfo.tab4TextColor + 
						'; background-color:' + userInfo.tab4TextFillColor + 
						'; font-weight:' + (userInfo.tab4TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab4TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab4TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab4Hide" style="display:none;">' + userInfo.tab4Hide + '</p>';
						ls = ls + '<p id="tab4Size" style="display:none;">' + userInfo.tab4Size + '</p>';
						ls = ls + '<p id="tab4TextSize" style="display:none;">' + userInfo.tab4TextSize + '</p>';
						ls = ls + '<p id="tab4Font" style="display:none;">' + userInfo.tab4Font + '</p>';
						ls = ls + '<p id="tab4TextFont" style="display:none;">' + userInfo.tab4TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab4FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab5DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab5Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab5Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab5Font] + 
						'; font-size:' + userInfo.tab5Size + 
						'pt; color:' + userInfo.tab5Color + 
						'; background-color:' + userInfo.tab5LabelFillColor + 
						'; font-weight:' + (userInfo.tab5LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab5LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab5LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab5Label;
						ls = ls + '<p id="tab5FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab5TextFont] + 
						'; font-size:' + userInfo.tab5TextSize + 
						'pt; color:' + userInfo.tab5TextColor + 
						'; background-color:' + userInfo.tab5TextFillColor + 
						'; font-weight:' + (userInfo.tab5TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab5TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab5TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab5Hide" style="display:none;">' + userInfo.tab5Hide + '</p>';
						ls = ls + '<p id="tab5Size" style="display:none;">' + userInfo.tab5Size + '</p>';
						ls = ls + '<p id="tab5TextSize" style="display:none;">' + userInfo.tab5TextSize + '</p>';
						ls = ls + '<p id="tab5Font" style="display:none;">' + userInfo.tab5Font + '</p>';
						ls = ls + '<p id="tab5TextFont" style="display:none;">' + userInfo.tab5TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab5FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab6DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab6Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab6Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab6Font] + 
						'; font-size:' + userInfo.tab6Size + 
						'pt; color:' + userInfo.tab6Color + 
						'; background-color:' + userInfo.tab6LabelFillColor + 
						'; font-weight:' + (userInfo.tab6LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab6LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab6LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab6Label;
						ls = ls + '<p id="tab6FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab6TextFont] + 
						'; font-size:' + userInfo.tab6TextSize + 
						'pt; color:' + userInfo.tab6TextColor + 
						'; background-color:' + userInfo.tab6TextFillColor + 
						'; font-weight:' + (userInfo.tab6TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab6TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab6TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab6Hide" style="display:none;">' + userInfo.tab6Hide + '</p>';
						ls = ls + '<p id="tab6Size" style="display:none;">' + userInfo.tab6Size + '</p>';
						ls = ls + '<p id="tab6TextSize" style="display:none;">' + userInfo.tab6TextSize + '</p>';
						ls = ls + '<p id="tab6Font" style="display:none;">' + userInfo.tab6Font + '</p>';
						ls = ls + '<p id="tab6TextFont" style="display:none;">' + userInfo.tab6TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab6FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab7DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab7Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab7Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.myStandardsFont] + 
						'; font-size:' + userInfo.myStandardsSize + 
						'pt; color:' + userInfo.myStandardsColor + 
						'; background-color:' + userInfo.myStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.myStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.myStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.myStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab7Label;
						ls = ls + '<p id="tab7FormatText" style="display:none; font-family:' + fontTypes[userInfo.myStandardsTextFont] + 
						'; font-size:' + userInfo.myStandardsTextSize + 
						'pt; color:' + userInfo.myStandardsTextColor + 
						'; background-color:' + userInfo.myStandardsTextFillColor + 
						'; font-weight:' + (userInfo.myStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.myStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.myStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab7Hide" style="display:none;">' + userInfo.myStandardsHide + '</p>';
						ls = ls + '<p id="tab7Size" style="display:none;">' + userInfo.myStandardsSize + '</p>';
						ls = ls + '<p id="tab7TextSize" style="display:none;">' + userInfo.myStandardsTextSize + '</p>';
						ls = ls + '<p id="tab7Font" style="display:none;">' + userInfo.myStandardsFont + '</p>';
						ls = ls + '<p id="tab7TextFont" style="display:none;">' + userInfo.myStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab7FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab8DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab8Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab9Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.schoolStandardsFont] + 
						'; font-size:' + userInfo.schoolStandardsSize + 
						'pt; color:' + userInfo.schoolStandardsColor + 
						'; background-color:' + userInfo.schoolStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.schoolStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.schoolStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.schoolStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab8Label;
						ls = ls + '<p id="tab9FormatText" style="display:none; font-family:' + fontTypes[userInfo.schoolStandardsTextFont] + 
						'; font-size:' + userInfo.schoolStandardsTextSize + 
						'pt; color:' + userInfo.schoolStandardsTextColor + 
						'; background-color:' + userInfo.schoolStandardsTextFillColor + 
						'; font-weight:' + (userInfo.schoolStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.schoolStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.schoolStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab9Hide" style="display:none;">' + userInfo.schoolStandardsHide + '</p>';
						ls = ls + '<p id="tab9Size" style="display:none;">' + userInfo.schoolStandardsSize + '</p>';
						ls = ls + '<p id="tab9TextSize" style="display:none;">' + userInfo.schoolStandardsTextSize + '</p>';
						ls = ls + '<p id="tab9Font" style="display:none;">' + userInfo.schoolStandardsFont + '</p>';
						ls = ls + '<p id="tab9TextFont" style="display:none;">' + userInfo.schoolStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab9FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].tab9DisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].tab9Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab8Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.sharedStandardsFont] + 
						'; font-size:' + userInfo.sharedStandardsSize + 
						'pt; color:' + userInfo.sharedStandardsColor + 
						'; background-color:' + userInfo.sharedStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.sharedStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.sharedStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.sharedStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].tab9Label;
						ls = ls + '<p id="tab8FormatText" style="display:none; font-family:' + fontTypes[userInfo.sharedStandardsTextFont] + 
						'; font-size:' + userInfo.sharedStandardsTextSize + 
						'pt; color:' + userInfo.sharedStandardsTextColor + 
						'; background-color:' + userInfo.sharedStandardsTextFillColor + 
						'; font-weight:' + (userInfo.sharedStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.sharedStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.sharedStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab8Hide" style="display:none;">' + userInfo.sharedStandardsHide + '</p>';
						ls = ls + '<p id="tab8Size" style="display:none;">' + userInfo.sharedStandardsSize + '</p>';
						ls = ls + '<p id="tab8TextSize" style="display:none;">' + userInfo.sharedStandardsTextSize + '</p>';
						ls = ls + '<p id="tab8Font" style="display:none;">' + userInfo.sharedStandardsFont + '</p>';
						ls = ls + '<p id="tab8TextFont" style="display:none;">' + userInfo.sharedStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab8FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case lessonLayouts[lPos].strategiesDisplayOrder: 
						ls = ls + '<tr style="display:' + (lessonLayouts[lPos].strategiesEnabled == "Y" ? "normal" : "none") + ';"><td><div id="strategiesFormat" class="tabFormat" style="font-family:' + fontTypes[userInfo.strategiesFont] + 
						'; font-size:' + userInfo.strategiesSize + 
						'pt; color:' + userInfo.strategiesColor + 
						'; background-color:' + userInfo.strategiesLabelFillColor + 
						'; font-weight:' + (userInfo.strategiesLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.strategiesLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.strategiesLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + lessonLayouts[lPos].strategiesLabel;
						ls = ls + '<p id="strategiesFormatText" style="display:none; font-family:' + fontTypes[userInfo.strategiesTextFont] + 
						'; font-size:' + userInfo.strategiesTextSize + 
						'pt; color:' + userInfo.strategiesTextColor + 
						'; background-color:' + userInfo.strategiesTextFillColor + 
						'; font-weight:' + (userInfo.strategiesTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.strategiesTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.strategiesTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="strategiesHide" style="display:none;">' + userInfo.strategiesHide + '</p>';
						ls = ls + '<p id="strategiesSize" style="display:none;">' + userInfo.strategiesSize + '</p>';
						ls = ls + '<p id="strategiesTextSize" style="display:none;">' + userInfo.strategiesTextSize + '</p>';
						ls = ls + '<p id="strategiesFont" style="display:none;">' + userInfo.strategiesFont + '</p>';
						ls = ls + '<p id="strategiesTextFont" style="display:none;">' + userInfo.strategiesTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="strategiesFormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
				}
				lsO++;
			}

			$('#tab1Settings').html("");
			$('#tab2Settings').html("");
			$('#tab3Settings').html("");
			$('#tab4Settings').html("");
			$('#tab5Settings').html("");
			$('#tab6Settings').html("");
			$('#tab7Settings').html("");
			$('#tab8Settings').html("");
			$('#tab9Settings').html("");
			$('#strategiesSettings').html("");
			
			$('#tab1Formatter').html("");
			$('#tab2Formatter').html("");
			$('#tab3Formatter').html("");
			$('#tab4Formatter').html("");
			$('#tab5Formatter').html("");
			$('#tab6Formatter').html("");
			$('#tab7Formatter').html("");
			$('#tab8Formatter').html("");
			$('#tab9Formatter').html("");
			$('#strategiesFormatter').html("");
			
			$('#schoolLayoutBody').html(ls);
      		
		} else {
			loadDisplayLessonSections();
		}

		
	});

	function loadDisplayLessonSections() {
		
		var ls = '';
		
		if ($('#selectSchoolLayout').val() != 0) {
			
			$('#schoolLayout').show();
			$('#teacherLayout').hide();
			$('#sampleLayouts').hide();
			
			var lsO = 0;
			
			while (lsO<=9) {
				switch(lsO) {
					case userInfo.tab1Order: 
						ls = ls + '<tr style="display:' + (userInfo.lessonEnabled == "Y" ? "normal" : "none") + ';"><td><div id="tab1Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.lessonFont] + 
						'; font-size:' + userInfo.lessonSize + 
						'pt; color:' + userInfo.lessonColor + 
						'; background-color:' + userInfo.lessonLabelFillColor + 
						'; font-weight:' + (userInfo.lessonLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.lessonLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.lessonLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.lessonLabel;
						ls = ls + '<p id="tab1FormatText" style="display:none; font-family:' + fontTypes[userInfo.lessonTextFont] + 
						'; font-size:' + userInfo.lessonTextSize + 
						'pt; color:' + userInfo.lessonTextColor + 
						'; background-color:' + userInfo.lessonTextFillColor + 
						'; font-weight:' + (userInfo.lessonTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.lessonTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.lessonTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab1Hide" style="display:none;">' + userInfo.lessonHide + '</p>';
						ls = ls + '<p id="tab1Size" style="display:none;">' + userInfo.lessonSize + '</p>';
						ls = ls + '<p id="tab1TextSize" style="display:none;">' + userInfo.lessonTextSize + '</p>';
						ls = ls + '<p id="tab1Font" style="display:none;">' + userInfo.lessonFont + '</p>';
						ls = ls + '<p id="tab1TextFont" style="display:none;">' + userInfo.lessonTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab1FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.tab2Order: 
						ls = ls + '<tr style="display:' + (userInfo.tab2Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab2Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab2Font] + 
						'; font-size:' + userInfo.tab2Size + 
						'pt; color:' + userInfo.tab2Color + 
						'; background-color:' + userInfo.tab2LabelFillColor + 
						'; font-weight:' + (userInfo.tab2LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab2LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab2LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.tab2Label;
						ls = ls + '<p id="tab2FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab2TextFont] + 
						'; font-size:' + userInfo.tab2TextSize + 
						'pt; color:' + userInfo.tab2TextColor + 
						'; background-color:' + userInfo.tab2TextFillColor + 
						'; font-weight:' + (userInfo.tab2TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab2TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab2TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab2Hide" style="display:none;">' + userInfo.tab2Hide + '</p>';
						ls = ls + '<p id="tab2Size" style="display:none;">' + userInfo.tab2Size + '</p>';
						ls = ls + '<p id="tab2TextSize" style="display:none;">' + userInfo.tab2TextSize + '</p>';
						ls = ls + '<p id="tab2Font" style="display:none;">' + userInfo.tab2Font + '</p>';
						ls = ls + '<p id="tab2TextFont" style="display:none;">' + userInfo.tab2TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab2FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.tab3Order: 
						ls = ls + '<tr style="display:' + (userInfo.tab3Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab3Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab3Font] + 
						'; font-size:' + userInfo.tab3Size + 
						'pt; color:' + userInfo.tab3Color + 
						'; background-color:' + userInfo.tab3LabelFillColor + 
						'; font-weight:' + (userInfo.tab3LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab3LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab3LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.tab3Label;
						ls = ls + '<p id="tab3FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab3TextFont] + 
						'; font-size:' + userInfo.tab3TextSize + 
						'pt; color:' + userInfo.tab3TextColor + 
						'; background-color:' + userInfo.tab3TextFillColor + 
						'; font-weight:' + (userInfo.tab3TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab3TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab3TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab3Hide" style="display:none;">' + userInfo.tab3Hide + '</p>';
						ls = ls + '<p id="tab3Size" style="display:none;">' + userInfo.tab3Size + '</p>';
						ls = ls + '<p id="tab3TextSize" style="display:none;">' + userInfo.tab3TextSize + '</p>';
						ls = ls + '<p id="tab3Font" style="display:none;">' + userInfo.tab3Font + '</p>';
						ls = ls + '<p id="tab3TextFont" style="display:none;">' + userInfo.tab3TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab3FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.tab4Order: 
						ls = ls + '<tr style="display:' + (userInfo.tab4Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab4Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab4Font] + 
						'; font-size:' + userInfo.tab4Size + 
						'pt; color:' + userInfo.tab4Color + 
						'; background-color:' + userInfo.tab4LabelFillColor + 
						'; font-weight:' + (userInfo.tab4LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab4LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab4LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.tab4Label;
						ls = ls + '<p id="tab4FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab4TextFont] + 
						'; font-size:' + userInfo.tab4TextSize + 
						'pt; color:' + userInfo.tab4TextColor + 
						'; background-color:' + userInfo.tab4TextFillColor + 
						'; font-weight:' + (userInfo.tab4TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab4TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab4TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab4Hide" style="display:none;">' + userInfo.tab4Hide + '</p>';
						ls = ls + '<p id="tab4Size" style="display:none;">' + userInfo.tab4Size + '</p>';
						ls = ls + '<p id="tab4TextSize" style="display:none;">' + userInfo.tab4TextSize + '</p>';
						ls = ls + '<p id="tab4Font" style="display:none;">' + userInfo.tab4Font + '</p>';
						ls = ls + '<p id="tab4TextFont" style="display:none;">' + userInfo.tab4TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab4FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.tab5Order: 
						ls = ls + '<tr style="display:' + (userInfo.tab5Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab5Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab5Font] + 
						'; font-size:' + userInfo.tab5Size + 
						'pt; color:' + userInfo.tab5Color + 
						'; background-color:' + userInfo.tab5LabelFillColor + 
						'; font-weight:' + (userInfo.tab5LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab5LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab5LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.tab5Label;
						ls = ls + '<p id="tab5FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab5TextFont] + 
						'; font-size:' + userInfo.tab5TextSize + 
						'pt; color:' + userInfo.tab5TextColor + 
						'; background-color:' + userInfo.tab5TextFillColor + 
						'; font-weight:' + (userInfo.tab5TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab5TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab5TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab5Hide" style="display:none;">' + userInfo.tab5Hide + '</p>';
						ls = ls + '<p id="tab5Size" style="display:none;">' + userInfo.tab5Size + '</p>';
						ls = ls + '<p id="tab5TextSize" style="display:none;">' + userInfo.tab5TextSize + '</p>';
						ls = ls + '<p id="tab5Font" style="display:none;">' + userInfo.tab5Font + '</p>';
						ls = ls + '<p id="tab5TextFont" style="display:none;">' + userInfo.tab5TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab5FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.tab6Order: 
						ls = ls + '<tr style="display:' + (userInfo.tab6Enabled == "Y" ? "normal" : "none") + ';"><td><div id="tab6Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab6Font] + 
						'; font-size:' + userInfo.tab6Size + 
						'pt; color:' + userInfo.tab6Color + 
						'; background-color:' + userInfo.tab6LabelFillColor + 
						'; font-weight:' + (userInfo.tab6LabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab6LabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab6LabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.tab6Label;
						ls = ls + '<p id="tab6FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab6TextFont] + 
						'; font-size:' + userInfo.tab6TextSize + 
						'pt; color:' + userInfo.tab6TextColor + 
						'; background-color:' + userInfo.tab6TextFillColor + 
						'; font-weight:' + (userInfo.tab6TextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.tab6TextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.tab6TextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab6Hide" style="display:none;">' + userInfo.tab6Hide + '</p>';
						ls = ls + '<p id="tab6Size" style="display:none;">' + userInfo.tab6Size + '</p>';
						ls = ls + '<p id="tab6TextSize" style="display:none;">' + userInfo.tab6TextSize + '</p>';
						ls = ls + '<p id="tab6Font" style="display:none;">' + userInfo.tab6Font + '</p>';
						ls = ls + '<p id="tab6TextFont" style="display:none;">' + userInfo.tab6TextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab6FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.myStandardsOrder: 
						ls = ls + '<tr style="display:' + (userInfo.myStandardsEnabled == "Y" ? "normal" : "none") + ';"><td><div id="tab7Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.myStandardsFont] + 
						'; font-size:' + userInfo.myStandardsSize + 
						'pt; color:' + userInfo.myStandardsColor + 
						'; background-color:' + userInfo.myStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.myStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.myStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.myStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.myStandardsLabel;
						ls = ls + '<p id="tab7FormatText" style="display:none; font-family:' + fontTypes[userInfo.myStandardsTextFont] + 
						'; font-size:' + userInfo.myStandardsTextSize + 
						'pt; color:' + userInfo.myStandardsTextColor + 
						'; background-color:' + userInfo.myStandardsTextFillColor + 
						'; font-weight:' + (userInfo.myStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.myStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.myStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab7Hide" style="display:none;">' + userInfo.myStandardsHide + '</p>';
						ls = ls + '<p id="tab7Size" style="display:none;">' + userInfo.myStandardsSize + '</p>';
						ls = ls + '<p id="tab7TextSize" style="display:none;">' + userInfo.myStandardsTextSize + '</p>';
						ls = ls + '<p id="tab7Font" style="display:none;">' + userInfo.myStandardsFont + '</p>';
						ls = ls + '<p id="tab7TextFont" style="display:none;">' + userInfo.myStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab7FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.schoolStandardsOrder: 
						ls = ls + '<tr style="display:' + (userInfo.schoolStandardsEnabled == "Y" ? "normal" : "none") + ';"><td><div id="tab9Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.schoolStandardsFont] + 
						'; font-size:' + userInfo.schoolStandardsSize + 
						'pt; color:' + userInfo.schoolStandardsColor + 
						'; background-color:' + userInfo.schoolStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.schoolStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.schoolStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.schoolStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.schoolStandardsLabel;
						ls = ls + '<p id="tab9FormatText" style="display:none; font-family:' + fontTypes[userInfo.schoolStandardsTextFont] + 
						'; font-size:' + userInfo.schoolStandardsTextSize + 
						'pt; color:' + userInfo.schoolStandardsTextColor + 
						'; background-color:' + userInfo.schoolStandardsTextFillColor + 
						'; font-weight:' + (userInfo.schoolStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.schoolStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.schoolStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab9Hide" style="display:none;">' + userInfo.schoolStandardsHide + '</p>';
						ls = ls + '<p id="tab9Size" style="display:none;">' + userInfo.schoolStandardsSize + '</p>';
						ls = ls + '<p id="tab9TextSize" style="display:none;">' + userInfo.schoolStandardsTextSize + '</p>';
						ls = ls + '<p id="tab9Font" style="display:none;">' + userInfo.schoolStandardsFont + '</p>';
						ls = ls + '<p id="tab9TextFont" style="display:none;">' + userInfo.schoolStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab9FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.sharedStandardsOrder: 
						ls = ls + '<tr style="display:' + (userInfo.sharedStandardsEnabled == "Y" ? "normal" : "none") + ';"><td><div id="tab8Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.sharedStandardsFont] + 
						'; font-size:' + userInfo.sharedStandardsSize + 
						'pt; color:' + userInfo.sharedStandardsColor + 
						'; background-color:' + userInfo.sharedStandardsLabelFillColor + 
						'; font-weight:' + (userInfo.sharedStandardsLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.sharedStandardsLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.sharedStandardsLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.sharedStandardsLabel;
						ls = ls + '<p id="tab8FormatText" style="display:none; font-family:' + fontTypes[userInfo.sharedStandardsTextFont] + 
						'; font-size:' + userInfo.sharedStandardsTextSize + 
						'pt; color:' + userInfo.sharedStandardsTextColor + 
						'; background-color:' + userInfo.sharedStandardsTextFillColor + 
						'; font-weight:' + (userInfo.sharedStandardsTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.sharedStandardsTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.sharedStandardsTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="tab8Hide" style="display:none;">' + userInfo.sharedStandardsHide + '</p>';
						ls = ls + '<p id="tab8Size" style="display:none;">' + userInfo.sharedStandardsSize + '</p>';
						ls = ls + '<p id="tab8TextSize" style="display:none;">' + userInfo.sharedStandardsTextSize + '</p>';
						ls = ls + '<p id="tab8Font" style="display:none;">' + userInfo.sharedStandardsFont + '</p>';
						ls = ls + '<p id="tab8TextFont" style="display:none;">' + userInfo.sharedStandardsTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="tab8FormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
					case userInfo.strategiesOrder: 
						ls = ls + '<tr style="display:' + (userInfo.strategiesEnabled == "Y" ? "normal" : "none") + ';"><td><div id="strategiesFormat" class="tabFormat" style="font-family:' + fontTypes[userInfo.strategiesFont] + 
						'; font-size:' + userInfo.strategiesSize + 
						'pt; color:' + userInfo.strategiesColor + 
						'; background-color:' + userInfo.strategiesLabelFillColor + 
						'; font-weight:' + (userInfo.strategiesLabelBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.strategiesLabelItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.strategiesLabelUnderline == "Y" ? "underline" : "none") + 
						';">';
						ls = ls + userInfo.strategiesLabel;
						ls = ls + '<p id="strategiesFormatText" style="display:none; font-family:' + fontTypes[userInfo.strategiesTextFont] + 
						'; font-size:' + userInfo.strategiesTextSize + 
						'pt; color:' + userInfo.strategiesTextColor + 
						'; background-color:' + userInfo.strategiesTextFillColor + 
						'; font-weight:' + (userInfo.strategiesTextBold == "Y" ? "700" : "normal") + 
						'; font-style:' + (userInfo.strategiesTextItalic == "Y" ? "italic" : "normal") + 
						'; text-decoration:' + (userInfo.strategiesTextUnderline == "Y" ? "underline" : "none") + 
						';"></p>';
						ls = ls + '<p id="strategiesHide" style="display:none;">' + userInfo.strategiesHide + '</p>';
						ls = ls + '<p id="strategiesSize" style="display:none;">' + userInfo.strategiesSize + '</p>';
						ls = ls + '<p id="strategiesTextSize" style="display:none;">' + userInfo.strategiesTextSize + '</p>';
						ls = ls + '<p id="strategiesFont" style="display:none;">' + userInfo.strategiesFont + '</p>';
						ls = ls + '<p id="strategiesTextFont" style="display:none;">' + userInfo.strategiesTextFont + '</p>';
						ls = ls + '</div></td><td><input type="button" value="Format" id="strategiesFormatButton" class="formatButton buttonsmall"></td></tr>';
						break;
				}
				lsO++;
			}

			$('#tab1Settings').html("");
			$('#tab2Settings').html("");
			$('#tab3Settings').html("");
			$('#tab4Settings').html("");
			$('#tab5Settings').html("");
			$('#tab6Settings').html("");
			$('#tab7Settings').html("");
			$('#tab8Settings').html("");
			$('#tab9Settings').html("");
			$('#strategiesSettings').html("");
			
			$('#tab1Formatter').html("");
			$('#tab2Formatter').html("");
			$('#tab3Formatter').html("");
			$('#tab4Formatter').html("");
			$('#tab5Formatter').html("");
			$('#tab6Formatter').html("");
			$('#tab7Formatter').html("");
			$('#tab8Formatter').html("");
			$('#tab9Formatter').html("");
			$('#strategiesFormatter').html("");
			
			$('#schoolLayoutBody').html(ls);
			
		} else {
		
			$('#schoolLayout').hide();
			$('#teacherLayout').show();
			$('#schoolLayoutBody').html("");
			$('#sampleLayouts').show();

			ls = '<div id="tab1Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.lessonFont] + 
			'; font-size:' + userInfo.lessonSize + 
			'pt; color:' + userInfo.lessonColor + 
			'; background-color:' + userInfo.lessonLabelFillColor + 
			'; font-weight:' + (userInfo.lessonLabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.lessonLabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.lessonLabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.lessonLabel;
			ls = ls + '<p id="tab1FormatText" style="display:none; font-family:' + fontTypes[userInfo.lessonTextFont] + 
			'; font-size:' + userInfo.lessonTextSize + 
			'pt; color:' + userInfo.lessonTextColor + 
			'; background-color:' + userInfo.lessonTextFillColor + 
			'; font-weight:' + (userInfo.lessonTextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.lessonTextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.lessonTextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab1Hide" style="display:none;">' + userInfo.lessonHide + '</p>';
			ls = ls + '<p id="tab1Size" style="display:none;">' + userInfo.lessonSize + '</p>';
			ls = ls + '<p id="tab1TextSize" style="display:none;">' + userInfo.lessonTextSize + '</p>';
			ls = ls + '<p id="tab1Font" style="display:none;">' + userInfo.lessonFont + '</p>';
			ls = ls + '<p id="tab1TextFont" style="display:none;">' + userInfo.lessonTextFont + '</p>';
			ls = ls + '</div>';

			$('#tab1Settings').html(ls);
			$('#tab1Formatter').html('<input type="button" value="Format" id="tab1FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab2Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab2Font] + 
			'; font-size:' + userInfo.tab2Size + 
			'pt; color:' + userInfo.tab2Color + 
			'; background-color:' + userInfo.tab2LabelFillColor + 
			'; font-weight:' + (userInfo.tab2LabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab2LabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab2LabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.tab2Label;
			ls = ls + '<p id="tab2FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab2TextFont] + 
			'; font-size:' + userInfo.tab2TextSize + 
			'pt; color:' + userInfo.tab2TextColor + 
			'; background-color:' + userInfo.tab2TextFillColor + 
			'; font-weight:' + (userInfo.tab2TextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab2TextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab2TextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab2Hide" style="display:none;">' + userInfo.tab2Hide + '</p>';
			ls = ls + '<p id="tab2Size" style="display:none;">' + userInfo.tab2Size + '</p>';
			ls = ls + '<p id="tab2TextSize" style="display:none;">' + userInfo.tab2TextSize + '</p>';
			ls = ls + '<p id="tab2Font" style="display:none;">' + userInfo.tab2Font + '</p>';
			ls = ls + '<p id="tab2TextFont" style="display:none;">' + userInfo.tab2TextFont + '</p>';
			ls = ls + '</div>';

			$('#tab2Settings').html(ls);
			$('#tab2Formatter').html('<input type="button" value="Format" id="tab2FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab3Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab3Font] + 
			'; font-size:' + userInfo.tab3Size + 
			'pt; color:' + userInfo.tab3Color + 
			'; background-color:' + userInfo.tab3LabelFillColor + 
			'; font-weight:' + (userInfo.tab3LabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab3LabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab3LabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.tab3Label;
			ls = ls + '<p id="tab3FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab3TextFont] + 
			'; font-size:' + userInfo.tab3TextSize + 
			'pt; color:' + userInfo.tab3TextColor + 
			'; background-color:' + userInfo.tab3TextFillColor + 
			'; font-weight:' + (userInfo.tab3TextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab3TextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab3TextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab3Hide" style="display:none;">' + userInfo.tab3Hide + '</p>';
			ls = ls + '<p id="tab3Size" style="display:none;">' + userInfo.tab3Size + '</p>';
			ls = ls + '<p id="tab3TextSize" style="display:none;">' + userInfo.tab3TextSize + '</p>';
			ls = ls + '<p id="tab3Font" style="display:none;">' + userInfo.tab3Font + '</p>';
			ls = ls + '<p id="tab3TextFont" style="display:none;">' + userInfo.tab3TextFont + '</p>';
			ls = ls + '</div>';

			$('#tab3Settings').html(ls);
			$('#tab3Formatter').html('<input type="button" value="Format" id="tab3FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab4Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab4Font] + 
			'; font-size:' + userInfo.tab4Size + 
			'pt; color:' + userInfo.tab4Color + 
			'; background-color:' + userInfo.tab4LabelFillColor + 
			'; font-weight:' + (userInfo.tab4LabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab4LabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab4LabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.tab4Label;
			ls = ls + '<p id="tab4FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab4TextFont] + 
			'; font-size:' + userInfo.tab4TextSize + 
			'pt; color:' + userInfo.tab4TextColor + 
			'; background-color:' + userInfo.tab4TextFillColor + 
			'; font-weight:' + (userInfo.tab4TextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab4TextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab4TextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab4Hide" style="display:none;">' + userInfo.tab4Hide + '</p>';
			ls = ls + '<p id="tab4Size" style="display:none;">' + userInfo.tab4Size + '</p>';
			ls = ls + '<p id="tab4TextSize" style="display:none;">' + userInfo.tab4TextSize + '</p>';
			ls = ls + '<p id="tab4Font" style="display:none;">' + userInfo.tab4Font + '</p>';
			ls = ls + '<p id="tab4TextFont" style="display:none;">' + userInfo.tab4TextFont + '</p>';
			ls = ls + '</div>';

			$('#tab4Settings').html(ls);
			$('#tab4Formatter').html('<input type="button" value="Format" id="tab4FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab5Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab5Font] + 
			'; font-size:' + userInfo.tab5Size + 
			'pt; color:' + userInfo.tab5Color + 
			'; background-color:' + userInfo.tab5LabelFillColor + 
			'; font-weight:' + (userInfo.tab5LabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab5LabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab5LabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.tab5Label;
			ls = ls + '<p id="tab5FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab5TextFont] + 
			'; font-size:' + userInfo.tab5TextSize + 
			'pt; color:' + userInfo.tab5TextColor + 
			'; background-color:' + userInfo.tab5TextFillColor + 
			'; font-weight:' + (userInfo.tab5TextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab5TextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab5TextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab5Hide" style="display:none;">' + userInfo.tab5Hide + '</p>';
			ls = ls + '<p id="tab5Size" style="display:none;">' + userInfo.tab5Size + '</p>';
			ls = ls + '<p id="tab5TextSize" style="display:none;">' + userInfo.tab5TextSize + '</p>';
			ls = ls + '<p id="tab5Font" style="display:none;">' + userInfo.tab5Font + '</p>';
			ls = ls + '<p id="tab5TextFont" style="display:none;">' + userInfo.tab5TextFont + '</p>';
			ls = ls + '</div>';

			$('#tab5Settings').html(ls);
			$('#tab5Formatter').html('<input type="button" value="Format" id="tab5FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab6Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.tab6Font] + 
			'; font-size:' + userInfo.tab6Size + 
			'pt; color:' + userInfo.tab6Color + 
			'; background-color:' + userInfo.tab6LabelFillColor + 
			'; font-weight:' + (userInfo.tab6LabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab6LabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab6LabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.tab6Label;
			ls = ls + '<p id="tab6FormatText" style="display:none; font-family:' + fontTypes[userInfo.tab6TextFont] + 
			'; font-size:' + userInfo.tab6TextSize + 
			'pt; color:' + userInfo.tab6TextColor + 
			'; background-color:' + userInfo.tab6TextFillColor + 
			'; font-weight:' + (userInfo.tab6TextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.tab6TextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.tab6TextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab6Hide" style="display:none;">' + userInfo.tab6Hide + '</p>';
			ls = ls + '<p id="tab6Size" style="display:none;">' + userInfo.tab6Size + '</p>';
			ls = ls + '<p id="tab6TextSize" style="display:none;">' + userInfo.tab6TextSize + '</p>';
			ls = ls + '<p id="tab6Font" style="display:none;">' + userInfo.tab6Font + '</p>';
			ls = ls + '<p id="tab6TextFont" style="display:none;">' + userInfo.tab6TextFont + '</p>';
			ls = ls + '</div>';

			$('#tab6Settings').html(ls);
			$('#tab6Formatter').html('<input type="button" value="Format" id="tab6FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab7Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.myStandardsFont] + 
			'; font-size:' + userInfo.myStandardsSize + 
			'pt; color:' + userInfo.myStandardsColor + 
			'; background-color:' + userInfo.myStandardsLabelFillColor + 
			'; font-weight:' + (userInfo.myStandardsLabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.myStandardsLabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.myStandardsLabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.myStandardsLabel;
			ls = ls + '<p id="tab7FormatText" style="display:none; font-family:' + fontTypes[userInfo.myStandardsTextFont] + 
			'; font-size:' + userInfo.myStandardsTextSize + 
			'pt; color:' + userInfo.myStandardsTextColor + 
			'; background-color:' + userInfo.myStandardsTextFillColor + 
			'; font-weight:' + (userInfo.myStandardsTextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.myStandardsTextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.myStandardsTextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab7Hide" style="display:none;">' + userInfo.myStandardsHide + '</p>';
			ls = ls + '<p id="tab7Size" style="display:none;">' + userInfo.myStandardsSize + '</p>';
			ls = ls + '<p id="tab7TextSize" style="display:none;">' + userInfo.myStandardsTextSize + '</p>';
			ls = ls + '<p id="tab7Font" style="display:none;">' + userInfo.myStandardsFont + '</p>';
			ls = ls + '<p id="tab7TextFont" style="display:none;">' + userInfo.myStandardsTextFont + '</p>';
			ls = ls + '</div>';

			$('#tab7Settings').html(ls);
			$('#tab7Formatter').html('<input type="button" value="Format" id="tab7FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab9Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.schoolStandardsFont] + 
			'; font-size:' + userInfo.schoolStandardsSize + 
			'pt; color:' + userInfo.schoolStandardsColor + 
			'; background-color:' + userInfo.schoolStandardsLabelFillColor + 
			'; font-weight:' + (userInfo.schoolStandardsLabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.schoolStandardsLabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.schoolStandardsLabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.schoolStandardsLabel;
			ls = ls + '<p id="tab9FormatText" style="display:none; font-family:' + fontTypes[userInfo.schoolStandardsTextFont] + 
			'; font-size:' + userInfo.schoolStandardsTextSize + 
			'pt; color:' + userInfo.schoolStandardsTextColor + 
			'; background-color:' + userInfo.schoolStandardsTextFillColor + 
			'; font-weight:' + (userInfo.schoolStandardsTextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.schoolStandardsTextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.schoolStandardsTextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab9Hide" style="display:none;">' + userInfo.schoolStandardsHide + '</p>';
			ls = ls + '<p id="tab9Size" style="display:none;">' + userInfo.schoolStandardsSize + '</p>';
			ls = ls + '<p id="tab9TextSize" style="display:none;">' + userInfo.schoolStandardsTextSize + '</p>';
			ls = ls + '<p id="tab9Font" style="display:none;">' + userInfo.schoolStandardsFont + '</p>';
			ls = ls + '<p id="tab9TextFont" style="display:none;">' + userInfo.schoolStandardsTextFont + '</p>';
			ls = ls + '</div>';

			$('#tab9Settings').html(ls);
			$('#tab9Formatter').html('<input type="button" value="Format" id="tab9FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="tab8Format" class="tabFormat" style="font-family:' + fontTypes[userInfo.sharedStandardsFont] + 
			'; font-size:' + userInfo.sharedStandardsSize + 
			'pt; color:' + userInfo.sharedStandardsColor + 
			'; background-color:' + userInfo.sharedStandardsLabelFillColor + 
			'; font-weight:' + (userInfo.sharedStandardsLabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.sharedStandardsLabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.sharedStandardsLabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.sharedStandardsLabel;
			ls = ls + '<p id="tab8FormatText" style="display:none; font-family:' + fontTypes[userInfo.sharedStandardsTextFont] + 
			'; font-size:' + userInfo.sharedStandardsTextSize + 
			'pt; color:' + userInfo.sharedStandardsTextColor + 
			'; background-color:' + userInfo.sharedStandardsTextFillColor + 
			'; font-weight:' + (userInfo.sharedStandardsTextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.sharedStandardsTextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.sharedStandardsTextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="tab8Hide" style="display:none;">' + userInfo.sharedStandardsHide + '</p>';
			ls = ls + '<p id="tab8Size" style="display:none;">' + userInfo.sharedStandardsSize + '</p>';
			ls = ls + '<p id="tab8TextSize" style="display:none;">' + userInfo.sharedStandardsTextSize + '</p>';
			ls = ls + '<p id="tab8Font" style="display:none;">' + userInfo.sharedStandardsFont + '</p>';
			ls = ls + '<p id="tab8TextFont" style="display:none;">' + userInfo.sharedStandardsTextFont + '</p>';
			ls = ls + '</div>';

			$('#tab8Settings').html(ls);
			$('#tab8Formatter').html('<input type="button" value="Format" id="tab8FormatButton" class="formatButton buttonsmall" style="margin:0;">');
			
			ls = '<div id="strategiesFormat" class="tabFormat" style="font-family:' + fontTypes[userInfo.strategiesFont] + 
			'; font-size:' + userInfo.strategiesSize + 
			'pt; color:' + userInfo.strategiesColor + 
			'; background-color:' + userInfo.strategiesLabelFillColor + 
			'; font-weight:' + (userInfo.strategiesLabelBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.strategiesLabelItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.strategiesLabelUnderline == "Y" ? "underline" : "none") + 
			';">';
			ls = ls + userInfo.strategiesLabel;
			ls = ls + '<p id="strategiesFormatText" style="display:none; font-family:' + fontTypes[userInfo.strategiesTextFont] + 
			'; font-size:' + userInfo.strategiesTextSize + 
			'pt; color:' + userInfo.strategiesTextColor + 
			'; background-color:' + userInfo.strategiesTextFillColor + 
			'; font-weight:' + (userInfo.strategiesTextBold == "Y" ? "700" : "normal") + 
			'; font-style:' + (userInfo.strategiesTextItalic == "Y" ? "italic" : "normal") + 
			'; text-decoration:' + (userInfo.strategiesTextUnderline == "Y" ? "underline" : "none") + 
			';"></p>';
			ls = ls + '<p id="strategiesHide" style="display:none;">' + userInfo.strategiesHide + '</p>';
			ls = ls + '<p id="strategiesSize" style="display:none;">' + userInfo.strategiesSize + '</p>';
			ls = ls + '<p id="strategiesTextSize" style="display:none;">' + userInfo.strategiesTextSize + '</p>';
			ls = ls + '<p id="strategiesFont" style="display:none;">' + userInfo.strategiesFont + '</p>';
			ls = ls + '<p id="strategiesTextFont" style="display:none;">' + userInfo.strategiesTextFont + '</p>';
			ls = ls + '</div>';

			$('#strategiesSettings').html(ls);
			$('#strategiesFormatter').html('<input type="button" value="Format" id="strategiesFormatButton" class="formatButton buttonsmall" style="margin:0;">');

			$('#lessonLabel').val(userInfo.lessonLabel);
			$('#tab2Label').val(userInfo.tab2Label);
			$('#tab3Label').val(userInfo.tab3Label);
			$('#tab4Label').val(userInfo.tab4Label);
			$('#tab5Label').val(userInfo.tab5Label);
			$('#tab6Label').val(userInfo.tab6Label);
			$('#strategiesLabel').val(userInfo.strategiesLabel);
			$('#myStandardsLabel').val(userInfo.myStandardsLabel);
			$('#sharedStandardsLabel').val(userInfo.sharedStandardsLabel);
			$('#schoolStandardsLabel').val(userInfo.schoolStandardsLabel);

			if (userInfo.lessonEnabled == "Y") {$('#lessonEnabled').prop('checked', true);} else {$('#lessonEnabled').prop('checked', false);}
			if (userInfo.tab2Enabled == "Y") {$('#tab2Enabled').prop('checked', true);} else {$('#tab2Enabled').prop('checked', false);}
			if (userInfo.tab3Enabled == "Y") {$('#tab3Enabled').prop('checked', true);} else {$('#tab3Enabled').prop('checked', false);}
			if (userInfo.tab4Enabled == "Y") {$('#tab4Enabled').prop('checked', true);} else {$('#tab4Enabled').prop('checked', false);}
			if (userInfo.tab5Enabled == "Y") {$('#tab5Enabled').prop('checked', true);} else {$('#tab5Enabled').prop('checked', false);}
			if (userInfo.tab6Enabled == "Y") {$('#tab6Enabled').prop('checked', true);} else {$('#tab6Enabled').prop('checked', false);}
			if (userInfo.strategiesEnabled == "Y") {$('#strategiesEnabled').prop('checked', true);} else {$('#strategiesEnabled').prop('checked', false);}
			if (userInfo.myStandardsEnabled == "Y") {$('#myStandardsEnabled').prop('checked', true);} else {$('#myStandardsEnabled').prop('checked', false);}
			if (userInfo.sharedStandardsEnabled == "Y") {$('#sharedStandardsEnabled').prop('checked', true);} else {$('#sharedStandardsEnabled').prop('checked', false);}
			if (userInfo.schoolStandardsEnabled == "Y") {$('#schoolStandardsEnabled').prop('checked', true);} else {$('#schoolStandardsEnabled').prop('checked', false);}
			
			sortDisplayList(userInfo.tab1Order, 'liLesson', 'ul#sortableSection');
			sortDisplayList(userInfo.tab2Order, 'liTab2', 'ul#sortableSection');
			sortDisplayList(userInfo.tab3Order, 'liTab3', 'ul#sortableSection');
			sortDisplayList(userInfo.tab4Order, 'liTab4', 'ul#sortableSection');
			sortDisplayList(userInfo.tab5Order, 'liTab5', 'ul#sortableSection');
			sortDisplayList(userInfo.tab6Order, 'liTab6', 'ul#sortableSection');
			sortDisplayList(userInfo.strategiesOrder, 'liStrategies', 'ul#sortableSection');
			sortDisplayList(userInfo.myStandardsOrder, 'liMy', 'ul#sortableSection');
			sortDisplayList(userInfo.sharedStandardsOrder, 'liShared', 'ul#sortableSection');
			sortDisplayList(userInfo.schoolStandardsOrder, 'liSchool', 'ul#sortableSection');
		
		}
	}
	
	$('#shareButton').click(function() {
		browserButton = false;
		window.location.hash = "sharing";
		showShare();
	});
	
	function showShare() {
		
		hideMessage();
		hideAll();
		
		$('#editShareBox').show();
		$('#teacherKey').focus();
		clearNotification('#sharingErrorMsg');
		
		$('#studentKey').val(userInfo.studentPassword);
		$('#teacherKey').val(userInfo.sharedUserKey);
		$('#viewLength').val(userInfo.viewLength);

		if (userInfo.viewLessons == 'Y') {$('#viewLessons').prop('checked',true);} else {$('#viewLessons').prop('checked',false);}
		if (userInfo.viewHomework == 'Y') {$('#viewHomework').prop('checked',true);} else {$('#viewHomework').prop('checked',false);}
		if (userInfo.viewNotes == 'Y') {$('#viewNotes').prop('checked',true);} else {$('#viewNotes').prop('checked',false);}
		if (userInfo.viewTab4 == 'Y') {$('#viewTab4').prop('checked',true);} else {$('#viewTab4').prop('checked',false);}
		if (userInfo.viewTab5 == 'Y') {$('#viewTab5').prop('checked',true);} else {$('#viewTab5').prop('checked',false);}
		if (userInfo.viewTab6 == 'Y') {$('#viewTab6').prop('checked',true);} else {$('#viewTab6').prop('checked',false);}
		if (userInfo.viewStrategies == 'Y') {$('#viewStrategies').prop('checked',true);} else {$('#viewStrategies').prop('checked',false);}
		if (userInfo.viewStandards == 'Y') {$('#viewStandards').prop('checked',true);} else {$('#viewStandards').prop('checked',false);}
		if (userInfo.viewEvents == 'Y') {$('#viewEvents').prop('checked',true);} else {$('#viewEvents').prop('checked',false);}
		if (userInfo.viewMyList == 'Y') {$('#viewMyList').prop('checked',true);} else {$('#viewMyList').prop('checked',false);}
		if (userInfo.viewAssignments == 'Y') {$('#viewAssignments').prop('checked',true);} else {$('#viewAssignments').prop('checked',false);}
		if (userInfo.viewAssessments == 'Y') {$('#viewAssessments').prop('checked',true);} else {$('#viewAssessments').prop('checked',false);}
		if (userInfo.viewGrades == 'Y') {$('#viewGrades').prop('checked',true);} else {$('#viewGrades').prop('checked',false);}
		
		if ($.trim($('#studentKey').val()) == '') {
			$('#enterKey').show();
			$('.studentLink').hide();
		} else {
			var ls = 'https://planbook.com/planbook.html?t=' + userInfo.userId + '&k=' + $('#studentKey').val();
			$('#studentURL').html(ls);
			$('#studentURL').attr('href',ls);
			$('#enterKey').hide();
			$('.studentLink').show();
		}
				
	}

	$('#changePassword').click(function() {

		$('#oldPassword').val('');
		$('#newPassword').val('');
		$('#confirmPassword').val('');
		$('#newPasswordError').html('');
		$('#passwordErrorMsg').html('');
		$('#confirmPasswordError').html('');

		$('#changePasswordRow').hide();
		$('.passwordChange').show();
		$('#oldPassword').focus();
		
	}); 

	$('#changeEmail').click(function() {

		$('#oldPassword').val('');

		$('#changeEmailRow').hide();
		$('#emailChange').show();
		$('#currentPasswordRow').show();
		$('#emailAddress').focus();
		
	}); 
	
	$('#applyAccount').click(function() {

		var valError = false;
		clearNotification('#accountErrorMsg');

		var eAddress = $('#emailAddress').val();
		var oldPW = $('#oldPassword').val();
		var newPW = $('#newPassword').val();
		var confirmPW = $('#confirmPassword').val();
		
		if (eAddress == "") {
			valError = true;
			showNotification('#accountErrorMsg', 'Please enter an Email Address');
		} else {
			if (valEmail(eAddress) == false) {
				valError = true;
				showNotification('#accountErrorMsg', 'Please enter a valid Email Address');
			}
		}

		if (oldPW == "" && eAddress != userInfo.emailAddress) {
			valError = true;
			showNotification('#accountErrorMsg', 'To change Email Address, please enter Current Password');
		}	
	
		if (oldPW == "" && (newPW != "" || confirmPW != "")) {
			valError = true;
			showNotification('#accountErrorMsg', 'To change your password, please enter Current Password');
		}	
		
		if (newPW != confirmPW) {
			valError = true;
			showNotification('#accountErrorMsg', 'New and Confirm Passwords do not match');
		}

		var schoolId = $.trim($('#schoolId').val());
		if (valError == false && schoolId != "") {
			if (isNaN(schoolId) || (parseFloat(schoolId) != parseInt(schoolId))) {
				valError = true;
				showNotification('#accountErrorMsg', 'School ID must be numeric');
			}
		}
		
		if (valError == false) {

			if (!$('#showBanner').prop('checked')) {
				$('#infoBar').hide();
			} 
			
			userInfo.newPassword = newPW;
			userInfo.userPassword = oldPW;

			userInfo.displayName = $.trim($('#displayName2').val());
			if (userInfo.displayName != "") {
				$('#nameLabel').html(userInfo.displayName);
			} else {
				$('#nameLabel').html(userInfo.emailAddress);
			}

			// clear out list before adding new list
			if (googleEmailCal.length > 0)
				googleEmailCal = [];
			
			googleEmailCal = $(".calCheckbox :checkbox:checked").map(function() {
				return this.value;
			}).get();
			
			holdEmailAddress = userInfo.emailAddress;
			userInfo.emailAddress = $('#emailAddress').val();
			userInfo.firstName = $('#firstName').val();
			userInfo.lastName = $('#lastName').val();
			userInfo.schoolDistrict = $('#schoolDistrict').val();
			userInfo.sendEmail = $('#sendEmail').prop('checked') ? 'Y' : 'N';
			userInfo.showBanner = $('#showBanner').prop('checked') ? 'Y' : 'N'; 
			userInfo.autosaveInterval = $('#autosaveInterval').val();
			userInfo.schoolName = $('#schoolName').val();
			userInfo.schoolId = schoolId;
			userInfo.googleEmail = (googleEmailCal == ""|| googleEmailCal == null?"":googleEmailCal);
			
           	setSchoolTerms();
           	setDayNames();

           	action = "updateAccount";
			showLoading();
			$.post('updateSettings', userInfo, settingsUpdated, "json");
		}

	});	
	
	$('.useLayout').live('click', function() {

		userInfo.currentLessonLayoutId = this.id.substring(9);
		$('#selectSchoolLayout').val(userInfo.currentLessonLayoutId);

		fillLessonLayout();
		
		loadTermsTable();
		loadSectionLabels();
		setSchoolTerms();
       	setDayNames();
       	
		userInfo.newPassword = "";
		userInfo.userPassword = "";
		
		hideBox('#layoutChangeBox', 30);

		showLoading();
		$.post('updateSettings', userInfo, layoutUpdated, "json");

	});
	
	function layoutUpdated(data) {
		if (data.error == "true" || data.error == true) {
			hideLoading();
			showErrorMsg();
		} else {
			requestClassList = new Object();
			requestClassList.userMode  = userMode;
			$.getJSON('getClasses2', requestClassList, loadClassList);
		}
	}

	$('#cancelLayoutChange').click(function() {
		hideBox('#layoutChangeBox', 30);
		requestClassList = new Object();
		requestClassList.userMode  = userMode;
		showLoading();
		$.getJSON('getClasses2', requestClassList, loadClassList);
	});	
	
	$('#applyDisplay').click(function() {
		applyDisplay();
	});
		
	function applyDisplay() {
		
		clearNotification('#displayErrorMsg');
		$('#formatBox').hide();
		var valError = false;
		
		var boxSize = $.trim($('#boxSize').val());
		if ($('#equalSize').prop('checked') == false) {
			boxSize = 100;
		} else if (valError == false) {
			if (isNaN(boxSize) || (parseFloat(boxSize) != parseInt(boxSize))) {
				valError = true;
				showNotification('#displayErrorMsg', 'Lesson box height must be numeric');
			} else if (boxSize < 25 || boxSize > 500) {
				valError = true;
				showNotification('#displayErrorMsg', 'Lesson box height must be between 25 and 500');
			}
		}

		if (valError == false) {
			if ($('#sunShow').prop('checked') == false &&
			    $('#monShow').prop('checked') == false &&
			    $('#tueShow').prop('checked') == false &&
			    $('#wedShow').prop('checked') == false &&
			    $('#thuShow').prop('checked') == false &&
			    $('#friShow').prop('checked') == false &&
			    $('#satShow').prop('checked') == false) {
				valError = true;
				showNotification('#displayErrorMsg', 'At least one day must be displayed in Week View');
			} 
		}
		
		if ($('#selectSchoolLayout').val() == 0) {
		
			if (valError == false) {
				if (($('#lessonEnabled').prop('checked') && $.trim($('#lessonLabel').val()) == "") ||
					($('#tab2Enabled').prop('checked') && $.trim($('#tab2Label').val()) == "") ||
					($('#tab3Enabled').prop('checked') && $.trim($('#tab3Label').val()) == "") ||
					($('#tab4Enabled').prop('checked') && $.trim($('#tab4Label').val()) == "") ||
					($('#tab5Enabled').prop('checked') && $.trim($('#tab5Label').val()) == "") ||
					($('#tab6Enabled').prop('checked') && $.trim($('#tab6Label').val()) == "") ||
					($('#strategiesEnabled').prop('checked') && $.trim($('#strategiesLabel').val()) == "") ||
					($('#myStandardsEnabled').prop('checked') && $.trim($('#myStandardsLabel').val()) == "") ||
					($('#sharedStandardsEnabled').prop('checked') && $.trim($('#sharedStandardsLabel').val()) == "") ||
					($('#schoolStandardsEnabled').prop('checked') && $.trim($('#schoolStandardsLabel').val()) == "")) {
					valError = true;
					showNotification('#displayErrorMsg', 'Please enter a name for each active lesson section');
				}
			}
			
			if (valError == false) {
				if ($('#lessonEnabled').prop('checked') == false &&
				    $('#tab2Enabled').prop('checked') == false &&
				    $('#tab3Enabled').prop('checked') == false &&
				    $('#tab4Enabled').prop('checked') == false &&
				    $('#tab5Enabled').prop('checked') == false &&
				    $('#tab6Enabled').prop('checked') == false &&
				    $('#strategiesEnabled').prop('checked') == false &&
				    $('#myStandardsEnabled').prop('checked') == false &&
				    $('#sharedStandardsEnabled').prop('checked') == false) {
					valError = true;
					showNotification('#displayErrorMsg', 'At least one Lesson Section must be enabled');
				} 
			}

		}
		
		if (valError == false) {

			userInfo.currentLessonLayoutId = $('#selectSchoolLayout').val();
			
			if (userInfo.currentLessonLayoutId == 0) {

				userInfo.lessonLabel = $.trim($('#lessonLabel').val());
				userInfo.tab1Order = $('#sortableSection li').index($('#liLesson'))+1;
				if ($('#lessonEnabled').prop('checked')) {userInfo.lessonEnabled = "Y";} else {userInfo.lessonEnabled = "N";}
				userInfo.tab2Label = $.trim($('#tab2Label').val());
				userInfo.tab2Order = $('#sortableSection li').index($('#liTab2'))+1;
				if ($('#tab2Enabled').prop('checked')) {userInfo.tab2Enabled = "Y";} else {userInfo.tab2Enabled = "N";}
				userInfo.tab3Label = $.trim($('#tab3Label').val());
				userInfo.tab3Order = $('#sortableSection li').index($('#liTab3'))+1;
				if ($('#tab3Enabled').prop('checked')) {userInfo.tab3Enabled = "Y";} else {userInfo.tab3Enabled = "N";}
				userInfo.tab4Label = $.trim($('#tab4Label').val());
				userInfo.tab4Order = $('#sortableSection li').index($('#liTab4'))+1;
				if ($('#tab4Enabled').prop('checked')) {userInfo.tab4Enabled = "Y";} else {userInfo.tab4Enabled = "N";}
				userInfo.tab5Label = $.trim($('#tab5Label').val());
				userInfo.tab5Order = $('#sortableSection li').index($('#liTab5'))+1;
				if ($('#tab5Enabled').prop('checked')) {userInfo.tab5Enabled = "Y";} else {userInfo.tab5Enabled = "N";}
				userInfo.tab6Label = $.trim($('#tab6Label').val());
				userInfo.tab6Order = $('#sortableSection li').index($('#liTab6'))+1;
				if ($('#tab6Enabled').prop('checked')) {userInfo.tab6Enabled = "Y";} else {userInfo.tab6Enabled = "N";}
				userInfo.strategiesLabel = $.trim($('#strategiesLabel').val());
				userInfo.strategiesOrder = $('#sortableSection li').index($('#liStrategies'))+1;
				if ($('#strategiesEnabled').prop('checked')) {userInfo.strategiesEnabled = "Y";} else {userInfo.strategiesEnabled = "N";}
				userInfo.myStandardsLabel = $.trim($('#myStandardsLabel').val());
				userInfo.myStandardsOrder = $('#sortableSection li').index($('#liMy'))+1;
				if ($('#myStandardsEnabled').prop('checked')) {userInfo.myStandardsEnabled = "Y";} else {userInfo.myStandardsEnabled = "N";}
				userInfo.sharedStandardsLabel = $.trim($('#sharedStandardsLabel').val());
				userInfo.sharedStandardsOrder = $('#sortableSection li').index($('#liShared'))+1;
				if ($('#sharedStandardsEnabled').prop('checked')) {userInfo.sharedStandardsEnabled = "Y";} else {userInfo.sharedStandardsEnabled = "N";}
				userInfo.schoolStandardsLabel = $.trim($('#schoolStandardsLabel').val());
				userInfo.schoolStandardsOrder = $('#sortableSection li').index($('#liSchool'))+1;
				if ($('#schoolStandardsEnabled').prop('checked')) {userInfo.schoolStandardsEnabled = "Y";} else {userInfo.schoolStandardsEnabled = "N";}

			} else {

				fillLessonLayout();
				
			}
			
			userInfo.lessonFont = $('#tab1Font').html();
			userInfo.lessonSize = $('#tab1Size').html();
			userInfo.lessonColor = rgbToHex($('#tab1Format').css('color'));
			userInfo.lessonLabelFillColor = rgbToHex($('#tab1Format').css('background-color'));
			userInfo.lessonLabelBold = $('#tab1Format').css('font-weight') == "700" || $('#tab1Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.lessonLabelItalic = $('#tab1Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.lessonLabelUnderline = $('#tab1Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.lessonTextFont = $('#tab1TextFont').html();
			userInfo.lessonTextSize = $('#tab1TextSize').html();
			userInfo.lessonTextColor = rgbToHex($('#tab1FormatText').css('color'));
			userInfo.lessonTextFillColor = rgbToHex($('#tab1FormatText').css('background-color'));
			userInfo.lessonTextBold = $('#tab1FormatText').css('font-weight') == "700" || $('#tab1FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.lessonTextItalic = $('#tab1FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.lessonTextUnderline = $('#tab1FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.lessonHide = $('#tab1Hide').html();

			userInfo.tab2Font = $('#tab2Font').html();
			userInfo.tab2Size = $('#tab2Size').html();
			userInfo.tab2Color = rgbToHex($('#tab2Format').css('color'));
			userInfo.tab2LabelFillColor = rgbToHex($('#tab2Format').css('background-color'));
			userInfo.tab2LabelBold = $('#tab2Format').css('font-weight') == "700" || $('#tab2Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab2LabelItalic = $('#tab2Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab2LabelUnderline = $('#tab2Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab2TextFont = $('#tab2TextFont').html();
			userInfo.tab2TextSize = $('#tab2TextSize').html();
			userInfo.tab2TextColor = rgbToHex($('#tab2FormatText').css('color'));
			userInfo.tab2TextFillColor = rgbToHex($('#tab2FormatText').css('background-color'));
			userInfo.tab2TextBold = $('#tab2FormatText').css('font-weight') == "700" || $('#tab2FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab2TextItalic = $('#tab2FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab2TextUnderline = $('#tab2FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab2Hide = $('#tab2Hide').html();

			userInfo.tab3Font = $('#tab3Font').html();
			userInfo.tab3Size = $('#tab3Size').html();
			userInfo.tab3Color = rgbToHex($('#tab3Format').css('color'));
			userInfo.tab3LabelFillColor = rgbToHex($('#tab3Format').css('background-color'));
			userInfo.tab3LabelBold = $('#tab3Format').css('font-weight') == "700" || $('#tab3Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab3LabelItalic = $('#tab3Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab3LabelUnderline = $('#tab3Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab3TextFont = $('#tab3TextFont').html();
			userInfo.tab3TextSize = $('#tab3TextSize').html();
			userInfo.tab3TextColor = rgbToHex($('#tab3FormatText').css('color'));
			userInfo.tab3TextFillColor = rgbToHex($('#tab3FormatText').css('background-color'));
			userInfo.tab3TextBold = $('#tab3FormatText').css('font-weight') == "700" || $('#tab3FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab3TextItalic = $('#tab3FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab3TextUnderline = $('#tab3FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab3Hide = $('#tab3Hide').html();

			userInfo.tab4Font = $('#tab4Font').html();
			userInfo.tab4Size = $('#tab4Size').html();
			userInfo.tab4Color = rgbToHex($('#tab4Format').css('color'));
			userInfo.tab4LabelFillColor = rgbToHex($('#tab4Format').css('background-color'));
			userInfo.tab4LabelBold = $('#tab4Format').css('font-weight') == "700" || $('#tab4Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab4LabelItalic = $('#tab4Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab4LabelUnderline = $('#tab4Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab4TextFont = $('#tab4TextFont').html();
			userInfo.tab4TextSize = $('#tab4TextSize').html();
			userInfo.tab4TextColor = rgbToHex($('#tab4FormatText').css('color'));
			userInfo.tab4TextFillColor = rgbToHex($('#tab4FormatText').css('background-color'));
			userInfo.tab4TextBold = $('#tab4FormatText').css('font-weight') == "700" || $('#tab4FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab4TextItalic = $('#tab4FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab4TextUnderline = $('#tab4FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab4Hide = $('#tab4Hide').html();

			userInfo.tab5Font = $('#tab5Font').html();
			userInfo.tab5Size = $('#tab5Size').html();
			userInfo.tab5Color = rgbToHex($('#tab5Format').css('color'));
			userInfo.tab5LabelFillColor = rgbToHex($('#tab5Format').css('background-color'));
			userInfo.tab5LabelBold = $('#tab5Format').css('font-weight') == "700" || $('#tab5Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab5LabelItalic = $('#tab5Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab5LabelUnderline = $('#tab5Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab5TextFont = $('#tab5TextFont').html();
			userInfo.tab5TextSize = $('#tab5TextSize').html();
			userInfo.tab5TextColor = rgbToHex($('#tab5FormatText').css('color'));
			userInfo.tab5TextFillColor = rgbToHex($('#tab5FormatText').css('background-color'));
			userInfo.tab5TextBold = $('#tab5FormatText').css('font-weight') == "700" || $('#tab5FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab5TextItalic = $('#tab5FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab5TextUnderline = $('#tab5FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab5Hide = $('#tab5Hide').html();

			userInfo.tab6Font = $('#tab6Font').html();
			userInfo.tab6Size = $('#tab6Size').html();
			userInfo.tab6Color = rgbToHex($('#tab6Format').css('color'));
			userInfo.tab6LabelFillColor = rgbToHex($('#tab6Format').css('background-color'));
			userInfo.tab6LabelBold = $('#tab6Format').css('font-weight') == "700" || $('#tab6Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab6LabelItalic = $('#tab6Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab6LabelUnderline = $('#tab6Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab6TextFont = $('#tab6TextFont').html();
			userInfo.tab6TextSize = $('#tab6TextSize').html();
			userInfo.tab6TextColor = rgbToHex($('#tab6FormatText').css('color'));
			userInfo.tab6TextFillColor = rgbToHex($('#tab6FormatText').css('background-color'));
			userInfo.tab6TextBold = $('#tab6FormatText').css('font-weight') == "700" || $('#tab6FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.tab6TextItalic = $('#tab6FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.tab6TextUnderline = $('#tab6FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.tab6Hide = $('#tab6Hide').html();

			if ($('#strategiesFormat').html() != null) {
				userInfo.strategiesFont = $('#strategiesFont').html();
				userInfo.strategiesSize = $('#strategiesSize').html();
				userInfo.strategiesColor = rgbToHex($('#strategiesFormat').css('color'));
				userInfo.strategiesLabelFillColor = rgbToHex($('#strategiesFormat').css('background-color'));
				userInfo.strategiesLabelBold = $('#strategiesFormat').css('font-weight') == "700" || $('#strategiesFormat').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.strategiesLabelItalic = $('#strategiesFormat').css('font-style') == "italic" ? "Y" : "N";
				userInfo.strategiesLabelUnderline = $('#strategiesFormat').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.strategiesTextFont = $('#strategiesTextFont').html();
				userInfo.strategiesTextSize = $('#strategiesTextSize').html();
				userInfo.strategiesTextColor = rgbToHex($('#strategiesFormatText').css('color'));
				userInfo.strategiesTextFillColor = rgbToHex($('#strategiesFormatText').css('background-color'));
				userInfo.strategiesTextBold = $('#strategiesFormatText').css('font-weight') == "700" || $('#strategiesFormatText').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.strategiesTextItalic = $('#strategiesFormatText').css('font-style') == "italic" ? "Y" : "N";
				userInfo.strategiesTextUnderline = $('#strategiesFormatText').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.strategiesHide = $('#strategiesHide').html();
			}

			if ($('#tab7Format').html() != null) {
				userInfo.myStandardsFont = $('#tab7Font').html();
				userInfo.myStandardsSize = $('#tab7Size').html();
				userInfo.myStandardsColor = rgbToHex($('#tab7Format').css('color'));
				userInfo.myStandardsLabelFillColor = rgbToHex($('#tab7Format').css('background-color'));
				userInfo.myStandardsLabelBold = $('#tab7Format').css('font-weight') == "700" || $('#tab7Format').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.myStandardsLabelItalic = $('#tab7Format').css('font-style') == "italic" ? "Y" : "N";
				userInfo.myStandardsLabelUnderline = $('#tab7Format').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.myStandardsTextFont = $('#tab7TextFont').html();
				userInfo.myStandardsTextSize = $('#tab7TextSize').html();
				userInfo.myStandardsTextColor = rgbToHex($('#tab7FormatText').css('color'));
				userInfo.myStandardsTextFillColor = rgbToHex($('#tab7FormatText').css('background-color'));
				userInfo.myStandardsTextBold = $('#tab7FormatText').css('font-weight') == "700" || $('#tab7FormatText').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.myStandardsTextItalic = $('#tab7FormatText').css('font-style') == "italic" ? "Y" : "N";
				userInfo.myStandardsTextUnderline = $('#tab7FormatText').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.myStandardsHide = $('#tab7Hide').html();
			}
			
			if ($('#tab8Format').html() != null) {
				userInfo.sharedStandardsFont = $('#tab8Font').html();
				userInfo.sharedStandardsSize = $('#tab8Size').html();
				userInfo.sharedStandardsColor = rgbToHex($('#tab8Format').css('color'));
				userInfo.sharedStandardsLabelFillColor = rgbToHex($('#tab8Format').css('background-color'));
				userInfo.sharedStandardsLabelBold = $('#tab8Format').css('font-weight') == "700" || $('#tab8Format').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.sharedStandardsLabelItalic = $('#tab8Format').css('font-style') == "italic" ? "Y" : "N";
				userInfo.sharedStandardsLabelUnderline = $('#tab8Format').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.sharedStandardsTextFont = $('#tab8TextFont').html();
				userInfo.sharedStandardsTextSize = $('#tab8TextSize').html();
				userInfo.sharedStandardsTextColor = rgbToHex($('#tab8FormatText').css('color'));
				userInfo.sharedStandardsTextFillColor = rgbToHex($('#tab8FormatText').css('background-color'));
				userInfo.sharedStandardsTextBold = $('#tab8FormatText').css('font-weight') == "700" || $('#tab8FormatText').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.sharedStandardsTextItalic = $('#tab8FormatText').css('font-style') == "italic" ? "Y" : "N";
				userInfo.sharedStandardsTextUnderline = $('#tab8FormatText').css('text-decoration') == "underline" ? "Y" : "N";
	
				userInfo.sharedStandardsHide = $('#tab8Hide').html();
			}
			
			if ($('#tab9Format').html() != null) {
				userInfo.schoolStandardsFont = $('#tab9Font').html();
				userInfo.schoolStandardsSize = $('#tab9Size').html();
				userInfo.schoolStandardsColor = rgbToHex($('#tab9Format').css('color'));
				userInfo.schoolStandardsLabelFillColor = rgbToHex($('#tab9Format').css('background-color'));
				userInfo.schoolStandardsLabelBold = $('#tab9Format').css('font-weight') == "700" || $('#tab9Format').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.schoolStandardsLabelItalic = $('#tab9Format').css('font-style') == "italic" ? "Y" : "N";
				userInfo.schoolStandardsLabelUnderline = $('#tab9Format').css('text-decoration') == "underline" ? "Y" : "N";

				userInfo.schoolStandardsTextFont = $('#tab9TextFont').html();
				userInfo.schoolStandardsTextSize = $('#tab9TextSize').html();
				userInfo.schoolStandardsTextColor = rgbToHex($('#tab9FormatText').css('color'));
				userInfo.schoolStandardsTextFillColor = rgbToHex($('#tab9FormatText').css('background-color'));
				userInfo.schoolStandardsTextBold = $('#tab9FormatText').css('font-weight') == "700" || $('#tab9FormatText').css('font-weight') == "bold" ? "Y" : "N";
				userInfo.schoolStandardsTextItalic = $('#tab9FormatText').css('font-style') == "italic" ? "Y" : "N";
				userInfo.schoolStandardsTextUnderline = $('#tab9FormatText').css('text-decoration') == "underline" ? "Y" : "N";

				userInfo.schoolStandardsHide = $('#tab9Hide').html();
			}

			userInfo.lessonTitleFont = $('#tab13Font').html();
			userInfo.lessonTitleSize = $('#tab13Size').html();
			
			userInfo.lessonTitleColor = rgbToHex($('#tab13Format').css('color'));
			userInfo.lessonTitleLabelFillColor = rgbToHex($('#tab13Format').css('background-color'));
			userInfo.lessonTitleLabelBold = $('#tab13Format').css('font-weight') == "700" || $('#tab13Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.lessonTitleLabelItalic = $('#tab13Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.lessonTitleLabelUnderline = $('#tab13Format').css('text-decoration') == "underline" ? "Y" : "N";
			
			userInfo.attachmentsFont = $('#tab10Font').html();
			userInfo.attachmentsSize = $('#tab10Size').html();
			userInfo.attachmentsColor = rgbToHex($('#tab10Format').css('color'));
			userInfo.attachmentsLabelFillColor = rgbToHex($('#tab10Format').css('background-color'));
			userInfo.attachmentsLabelBold = $('#tab10Format').css('font-weight') == "700" || $('#tab10Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.attachmentsLabelItalic = $('#tab10Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.attachmentsLabelUnderline = $('#tab10Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.attachmentsTextFont = $('#tab10TextFont').html();
			userInfo.attachmentsTextSize = $('#tab10TextSize').html();
			userInfo.attachmentsTextColor = rgbToHex($('#tab10FormatText').css('color'));
			userInfo.attachmentsTextFillColor = rgbToHex($('#tab10FormatText').css('background-color'));
			userInfo.attachmentsTextBold = $('#tab10FormatText').css('font-weight') == "700" || $('#tab10FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.attachmentsTextItalic = $('#tab10FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.attachmentsTextUnderline = $('#tab10FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.attachmentsHide = $('#tab10Hide').html();

			userInfo.assignmentsFont = $('#tab11Font').html();
			userInfo.assignmentsSize = $('#tab11Size').html();
			userInfo.assignmentsColor = rgbToHex($('#tab11Format').css('color'));
			userInfo.assignmentsLabelFillColor = rgbToHex($('#tab11Format').css('background-color'));
			userInfo.assignmentsLabelBold = $('#tab11Format').css('font-weight') == "700" || $('#tab11Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.assignmentsLabelItalic = $('#tab11Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.assignmentsLabelUnderline = $('#tab11Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.assignmentsTextFont = $('#tab11TextFont').html();
			userInfo.assignmentsTextSize = $('#tab11TextSize').html();
			userInfo.assignmentsTextColor = rgbToHex($('#tab11FormatText').css('color'));
			userInfo.assignmentsTextFillColor = rgbToHex($('#tab11FormatText').css('background-color'));
			userInfo.assignmentsTextBold = $('#tab11FormatText').css('font-weight') == "700" || $('#tab11FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.assignmentsTextItalic = $('#tab11FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.assignmentsTextUnderline = $('#tab11FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.assignmentsHide = $('#tab11Hide').html();

			userInfo.assessmentsFont = $('#tab12Font').html();
			userInfo.assessmentsSize = $('#tab12Size').html();
			userInfo.assessmentsColor = rgbToHex($('#tab12Format').css('color'));
			userInfo.assessmentsLabelFillColor = rgbToHex($('#tab12Format').css('background-color'));
			userInfo.assessmentsLabelBold = $('#tab12Format').css('font-weight') == "700" || $('#tab12Format').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.assessmentsLabelItalic = $('#tab12Format').css('font-style') == "italic" ? "Y" : "N";
			userInfo.assessmentsLabelUnderline = $('#tab12Format').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.assessmentsTextFont = $('#tab12TextFont').html();
			userInfo.assessmentsTextSize = $('#tab12TextSize').html();
			userInfo.assessmentsTextColor = rgbToHex($('#tab12FormatText').css('color'));
			userInfo.assessmentsTextFillColor = rgbToHex($('#tab12FormatText').css('background-color'));
			userInfo.assessmentsTextBold = $('#tab12FormatText').css('font-weight') == "700" || $('#tab12FormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.assessmentsTextItalic = $('#tab12FormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.assessmentsTextUnderline = $('#tab12FormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.assessmentsHide = $('#tab12Hide').html();

			userInfo.eventLabelFont = $('#eventFont').html();
			userInfo.eventLabelSize = $('#eventSize').html();
			userInfo.eventLabelColor = rgbToHex($('#eventFormat').css('color'));
			userInfo.eventLabelFillColor = rgbToHex($('#eventFormat').css('background-color'));
			userInfo.eventLabelBold = $('#eventFormat').css('font-weight') == "700" || $('#eventFormat').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.eventLabelItalic = $('#eventFormat').css('font-style') == "italic" ? "Y" : "N";
			userInfo.eventLabelUnderline = $('#eventFormat').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.eventTextFont = $('#eventTextFont').html();
			userInfo.eventTextSize = $('#eventTextSize').html();
			userInfo.eventTextColor = rgbToHex($('#eventFormatText').css('color'));
			userInfo.eventTextFillColor = rgbToHex($('#eventFormatText').css('background-color'));
			userInfo.eventTextBold = $('#eventFormatText').css('font-weight') == "700" || $('#eventFormatText').css('font-weight') == "bold" ? "Y" : "N";
			userInfo.eventTextItalic = $('#eventFormatText').css('font-style') == "italic" ? "Y" : "N";
			userInfo.eventTextUnderline = $('#eventFormatText').css('text-decoration') == "underline" ? "Y" : "N";

			userInfo.eventHide = $('#eventHide').html();
			
			if ($('input[name="classHeadOrder"]')[0].checked == true) {
				userInfo.classHeadOrder = "1";
			} else {
				userInfo.classHeadOrder = "2";
			}
		
			if ($('input[name="classHeadCentered"]')[0].checked == true) {
				userInfo.classHeadCentered = "Y";
			} else {
				userInfo.classHeadCentered = "N";
			}
			
			if ($('input[name="dateFormat"]')[0].checked == true) {
				userInfo.dateFormat = 1;
			} else {
				userInfo.dateFormat = 2;
			}

			userInfo.dateDelimiter = $('#dateDelimiter').val();
			
			if (userInfo.dateFormat == 2) {
				$('.datePicker').datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
			} else {
				$('.datePicker').datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
			}

			if ($('#showCount').prop('checked')) {userInfo.showCount = "Y";} else {userInfo.showCount = "N";}

			if ($('#equalSize').prop('checked')) {userInfo.equalSize = "Y";} else {userInfo.equalSize = "N";}

			userInfo.boxSize = boxSize;
			
			var dayShows = 0;
			if ($('#sunShow').prop('checked')) {userInfo.sunShow = "Y"; dayShows++;} else {userInfo.sunShow = "N";}
			if ($('#monShow').prop('checked')) {userInfo.monShow = "Y"; dayShows++;} else {userInfo.monShow = "N";}
			if ($('#tueShow').prop('checked')) {userInfo.tueShow = "Y"; dayShows++;} else {userInfo.tueShow = "N";}
			if ($('#wedShow').prop('checked')) {userInfo.wedShow = "Y"; dayShows++;} else {userInfo.wedShow = "N";}
			if ($('#thuShow').prop('checked')) {userInfo.thuShow = "Y"; dayShows++;} else {userInfo.thuShow = "N";}
			if ($('#friShow').prop('checked')) {userInfo.friShow = "Y"; dayShows++;} else {userInfo.friShow = "N";}
			if ($('#satShow').prop('checked')) {userInfo.satShow = "Y"; dayShows++;} else {userInfo.satShow = "N";}

			switch (dayShows) {
				case 1: weekWidth = '100%'; break;
				case 2: weekWidth = '50%';  break;
				case 3: weekWidth = '33%';  break;
				case 4: weekWidth = '25%';  break;
				case 5: weekWidth = '20%';  break;
				case 6: weekWidth = '16%';  break;
				case 7: weekWidth = '14%';  break;
				default: weekWidth = '20%';	
			}

			if ($('#adjustToFit').prop('checked')) {userInfo.adjustToFit = "Y"; dayShows++;} else {userInfo.adjustToFit = "N";}

			
			loadTermsTable();
			loadSectionLabels();
			setSchoolTerms();
	       	setDayNames();
	       	
			userInfo.newPassword = "";
			userInfo.userPassword = "";
	
			haveEvents = false;
			haveTemplates = false;
			haveAssignments = false;
			haveAssessments = false;
			haveUnits = false;
			
			action = "updateDisplay";
			showLoading();
			$.post('updateSettings', userInfo, settingsUpdated, "json");

		}
		
	}

	function getFontPos(data) {
		var fontPos = 0;
		for (var x=0; x<fontTypes.length; x++) {
			if (data == fontTypes[x]) {
				fontPos = x;
				break;
			}
		}
		return fontPos;
	}

	function getFontSize(data) {
		var fontSize = data;
		var n = fontSize.indexOf("pt"); 
		if (n != -1) {
			fontSize = fontSize.substring(0,n);
		}
		return fontSize;
	}

	function componentFromStr(numStr, percent) {
	    var num = Math.max(0, parseInt(numStr, 10));
	    return percent ?
	        Math.floor(255 * Math.min(100, num) / 100) : Math.min(255, num);
	}

	function rgbToHex(rgb) {
		var hex = "";
		if (rgb) {
			if (rgb.substr(0,1) == "#") {
				hex = rgb;
			} else {
				var rgbRegex = /^rgb\(\s*(-?\d+)(%?)\s*,\s*(-?\d+)(%?)\s*,\s*(-?\d+)(%?)\s*\)$/;
			    var result, r, g, b = "";
			    if ( (result = rgbRegex.exec(rgb)) ) {
			        r = componentFromStr(result[1], result[2]);
			        g = componentFromStr(result[3], result[4]);
			        b = componentFromStr(result[5], result[6]);
	
			        hex = "#" + (0x1000000 + (r << 16) + (g << 8) + b).toString(16).slice(1);
			    }
			}
		}
	    return hex;
	}
	
	$('#applySharing').click(function() {
		
		var valError = false;
		clearNotification('#sharingErrorMsg');
		
		var studentPass = $.trim($('#studentKey').val());
		if (studentPass.indexOf("'") != -1 || studentPass.indexOf(" ") != -1) {
			valError = true;
			showNotification('#sharingErrorMsg', 'Student Key cannot include a space or apostrophe');
			$('#studentKey').focus();
		}
		
		if (valError == false) {

			userInfo.sharedUserKey = $('#teacherKey').val();
			userInfo.studentPassword = $.trim($('#studentKey').val());
			userInfo.viewLength = $('#viewLength').val();
			
			if ($('#viewLessons').prop('checked')) {userInfo.viewLessons = "Y";} else {userInfo.viewLessons = "N";}
			if ($('#viewHomework').prop('checked')) {userInfo.viewHomework = "Y";} else {userInfo.viewHomework = "N";}
			if ($('#viewNotes').prop('checked')) {userInfo.viewNotes = "Y";} else {userInfo.viewNotes = "N";}
			if ($('#viewTab4').prop('checked')) {userInfo.viewTab4 = "Y";} else {userInfo.viewTab4 = "N";}
			if ($('#viewTab5').prop('checked')) {userInfo.viewTab5 = "Y";} else {userInfo.viewTab5 = "N";}
			if ($('#viewTab6').prop('checked')) {userInfo.viewTab6 = "Y";} else {userInfo.viewTab6 = "N";}
			if ($('#viewStrategies').prop('checked')) {userInfo.viewStrategies = "Y";} else {userInfo.viewStrategies = "N";}
			if ($('#viewStandards').prop('checked')) {userInfo.viewStandards = "Y";} else {userInfo.viewStandards = "N";}
			if ($('#viewEvents').prop('checked')) {userInfo.viewEvents = "Y";} else {userInfo.viewEvents = "N";}
			if ($('#viewMyList').prop('checked')) {userInfo.viewMyList = "Y";} else {userInfo.viewMyList = "N";}
			if ($('#viewAssignments').prop('checked')) {userInfo.viewAssignments = "Y";} else {userInfo.viewAssignments = "N";}
			if ($('#viewAssessments').prop('checked')) {userInfo.viewAssessments = "Y";} else {userInfo.viewAssessments = "N";}
			if ($('#viewGrades').prop('checked')) {userInfo.viewGrades = "Y";} else {userInfo.viewGrades = "N";}
			
           	setSchoolTerms();
           	setDayNames();
           	
    		userInfo.newPassword = "";
    		userInfo.userPassword = "";

			action = "updateSharing";
           	showLoading();
			$.post('updateSettings', userInfo, settingsUpdated, "json");
		}

	});	

	$('#applySchoolYear').click(function() {
		
		var valError = false;
		clearNotification('#schoolYearErrorMsg');
		
		var strDays = '';
		var tempDays = '';
		if ($('input[name="classSchedule"]')[2].checked == true) {
			strDays= $.trim($('#cycleDays').val());
			if (isNaN(strDays)==true || $.trim(strDays)=='') {
				valError = true;
				showNotification('#schoolYearErrorMsg', 'Class Schedule - Cycle Days must be a number');
			} else {
				tempDays = parseInt(strDays,10);
				if (tempDays < 2 || tempDays > 20) {
					valError = true;
					showNotification('#schoolYearErrorMsg', 'Class Schedule - Cycle Days must be between 2 and 20');
				}
			}
		}

		var fDay = formatDateToSave($('#firstDay').val());
		var lDay = formatDateToSave($('#lastDay').val());
		var yName = $.trim($('#yearName').val());
		
		if (lDay == "") {
			valError = true;
			showNotification('#schoolYearErrorMsg', 'Enter a Last Day');
		} else {
			if (valDate(lDay) == false) {
				valError = true;
				showNotification('#schoolYearErrorMsg', 'Enter a valid Last Day');
			}
		}
	
		if (fDay == "") {
			valError = true;
			showNotification('#schoolYearErrorMsg', 'Enter a First Day');
		} else {
			if (valDate(fDay) == false) {
				valError = true;
				showNotification('#schoolYearErrorMsg', 'Enter a valid First Day');
			}
		}
	
		if (valError == false) {
			var result = compareDates(fDay, lDay);
			if (result != 0) {
				valError = true;
				if (result == 1) {
					showNotification('#schoolYearErrorMsg', 'First Day must come before Last Day');
				} else {
					showNotification('#schoolYearErrorMsg', 'Date range cannot exceed one year');
				}
			}		
		}	
		
		if (($('input[name="classSchedule"]')[1].checked || 
			$('input[name="classSchedule"]')[2].checked) && valError == false) {

			for (var z=0; z<classCount; z++) {
				if (schoolStart2[z] == "N") {
					result = compareDates(fDay, classStart[z]);
					if (result != 0) {
						valError = true;
			 			if (result == 1) {
			 				showNotification('#schoolYearErrorMsg', 'First Day cannot be after a Class Start Date');
			 			} else {
			 				showNotification('#schoolYearErrorMsg', 'First Day to Class Start cannot exceed one year');
			 			}
					}
				}
			}
		}

		if (yName == "") {
			valError = true;
			showNotification('#schoolYearErrorMsg', 'Enter name of School Year');
		}

		if (terms != null) {
			for (var x=0; x<terms.length; x++) {
	 
				var nameTerm = '#nameTerm' + x;
				var firstDayTerm = '#firstDayTerm' + x;
				var startsOnTerm = '#startsOnTerm' + x;
			
				var tDay = formatDateToSave($(firstDayTerm).val());
				var tName = $.trim($(nameTerm).val());
				var tStarts = $(startsOnTerm).val();
				
				if (tDay == "") {
					valError = true;
					showNotification('#schoolYearErrorMsg', 'Enter a Start Date for School Term');
				} else {
					if (valDate(tDay) == false) {
						valError = true;
						showNotification('#schoolYearErrorMsg', 'Enter a valid Start Date for School Term');
					}
				}
			
				if (valError == false) {
					var result = compareDates(fDay, tDay);
					if (result != 0) {
						valError = true;
						if (result == 1) {
							showNotification('#schoolYearErrorMsg', 'Term start cannot be before School start');
						} else {
							showNotification('#schoolYearErrorMsg', 'School start to Term start cannot exceed one year');
						}
					}		
				}	
	
				if (tName == "") {
					valError = true;
					showNotification('#schoolYearErrorMsg', 'Enter a name for School Term');
				}
	
				if (valError == false) {
					terms[x].name = tName;
					terms[x].firstDay = tDay;
					terms[x].startsOn = tStarts;
				}
	
			}
		}
	
		if (valError == false) {
			if ($('#sunCycle').prop('checked') == false &&
			    $('#monCycle').prop('checked') == false &&
			    $('#tueCycle').prop('checked') == false &&
			    $('#wedCycle').prop('checked') == false &&
			    $('#thuCycle').prop('checked') == false &&
			    $('#friCycle').prop('checked') == false &&
			    $('#satCycle').prop('checked') == false) {
				valError = true;
				showNotification('#schoolYearErrorMsg', 'At least one Class Day must be selected');
			} 
		}
		
		if (valError == false) {

  			userInfo.yearName = yName;
   			userInfo.firstDay = fDay;
   			userInfo.lastDay = lDay;

			if ($('input[name="classSchedule"]')[0].checked == true) {
				userInfo.classCycle = 'oneWeek';
			} else {
				if ($('input[name="classSchedule"]')[1].checked == true) {
					userInfo.classCycle = 'twoWeeks';
				} else {
					userInfo.classCycle = strDays;
					userInfo.cycleDays = new Array();
					var ls;
					var dayNum=1;
					for (var x=0; x<tempDays; x++) {
						ls = '#dayName' + x;
						if ($(ls).val() == '' || $(ls).val() == null) {
							if (dayNames[x] == null || dayNames[x] == '') {
								if (tempDays == 2) {
									if (x==0) {userInfo.cycleDays[x] = 'A Day';} else {userInfo.cycleDays[x] = 'B Day';}
								} else {	
									userInfo.cycleDays[x] = 'Day ' + dayNum;
								}
							} else {
								userInfo.cycleDays[x] = dayNames[x];
							}
						} else {
							userInfo.cycleDays[x] = $(ls).val();
						}
						dayNames[x] = userInfo.cycleDays[x];
						dayNum++;
					}
				}
			}

			if ($('#sunCycle').prop('checked')) {userInfo.sunCycle = "Y";} else {userInfo.sunCycle = "N";}
			if ($('#monCycle').prop('checked')) {userInfo.monCycle = "Y";} else {userInfo.monCycle = "N";}
			if ($('#tueCycle').prop('checked')) {userInfo.tueCycle = "Y";} else {userInfo.tueCycle = "N";}
			if ($('#wedCycle').prop('checked')) {userInfo.wedCycle = "Y";} else {userInfo.wedCycle = "N";}
			if ($('#thuCycle').prop('checked')) {userInfo.thuCycle = "Y";} else {userInfo.thuCycle = "N";}
			if ($('#friCycle').prop('checked')) {userInfo.friCycle = "Y";} else {userInfo.friCycle = "N";}
			if ($('#satCycle').prop('checked')) {userInfo.satCycle = "Y";} else {userInfo.satCycle = "N";}
			
			var changed = false;
			if (cycleChange.sunCycle != userInfo.sunCycle) {changed = true;} 
			else if (cycleChange.monCycle != userInfo.monCycle) {changed = true;}
			else if (cycleChange.tueCycle != userInfo.tueCycle) {changed = true;}
			else if (cycleChange.wedCycle != userInfo.wedCycle) {changed = true;}
			else if (cycleChange.thuCycle != userInfo.thuCycle) {changed = true;}
			else if (cycleChange.friCycle != userInfo.friCycle) {changed = true;}
			else if (cycleChange.satCycle != userInfo.satCycle) {changed = true;}
			
           	setSchoolTerms();
    		userInfo.newPassword = "";
    		userInfo.userPassword = "";

           	$('#yearLabel').html(userInfo.yearName);

			action = "updateSchoolYear";
			
			if (formatDateToSave(startDay) != fDay || changed) {
				showBox('#shiftYearWarning', 30);
			} else {
				showLoading();
				$.post('updateSettings', userInfo, settingsUpdated, "json");
			}
		}

	});

   	function setSchoolTerms() {
       	
       	userInfo.termName = new Array();
       	userInfo.termFirstDay = new Array();
       	userInfo.termStartsOn = new Array();
       	
       	if (terms != null) {
       		for (var z=0; z<terms.length; z++) {
       			userInfo.termName[z] = terms[z].name;
           		userInfo.termFirstDay[z] = terms[z].firstDay;
           		userInfo.termStartsOn[z] = terms[z].startsOn;
       		} 
	  	}

   	}

   	function setDayNames() {
   		
		userInfo.cycleDays = new Array();

		if (dayNames != null) {
			for (var x=0; x<dayNames.length; x++) {
				userInfo.cycleDays[x] = dayNames[x];
			}
		}

   	}
   	
	function settingsUpdated(data) {

		clearNotification('#accountErrorMsg');
		clearNotification('#displayErrorMsg');
		clearNotification('#sharingErrorMsg');
		clearNotification('#schoolYearErrorMsg');
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			if (data.invalidPassword == "true") {
				valError = true;
				showNotification('#accountErrorMsg', 'Current Password is incorrect');
				showNotification('#displayErrorMsg', 'Current Password is incorrect');
				showNotification('#sharingErrorMsg', 'Current Password is incorrect');
				showNotification('#schoolYearErrorMsg', 'Current Password is incorrect');
				userInfo.emailAddress = holdEmailAddress; // if email was
															// changed, set back
															// to original due
															// to invalid
															// password
			} else if (data.existingEmail == "true") {
				valError = true;
				showNotification('#accountErrorMsg', 'Email Address is already in use');
				showNotification('#displayErrorMsg', 'Email Address is already in use');
				showNotification('#sharingErrorMsg', 'Email Address is already in use');
				showNotification('#schoolYearErrorMsg', 'Email Address is already in use');
				userInfo.emailAddress = holdEmailAddress; // if email was
															// changed, set back
															// to original if
															// email already in
															// database
			} else if (data.schoolNotFound == "true") {
				valError = true;
				showNotification('#accountErrorMsg', 'School ID is not valid');
				userInfo.emailAddress = holdEmailAddress; // if email was
															// changed, set back
															// to original if
															// email already in
															// database
			} else {
	
				lessonTitleStyle = ' style = "font-weight: ' + (userInfo.lessonTitleTextBold == "Y"?'bold':'normal') + '; ' +
				'font-style: '+(userInfo.lessonTitleTextItalic=="Y"?'italic':'normal') + '; ' +
				'text-decoration: '+(userInfo.lessonTitleTextUnderline=="Y"?'underline':'normal') + '; ' +
				'background-color: '+ userInfo.lessonTitleLabelFillColor + '; ' +
				'font-family:' + fontTypes[userInfo.lessonTitleFont] + '; ' + 
				'font-size:' + userInfo.lessonTitleSize + 'pt; ' + 
				'color:' + userInfo.lessonTitleColor + ';" ';
				
				if (userInfo.equalSize == "Y" && userInfo.adjustToFit == "N") {
					$('.lessonHeight').css({'height':userInfo.boxSize+'px'});
				} else {
					$('.lessonHeight').css({'height':'auto'});
				}
				
				if (userInfo.classCycle == 'oneWeek') {
					$('.week1').show();
					$('.week2').hide();
					$('#scheduleTable').html('');
					cDays = 0;
				} else if (userInfo.classCycle == 'twoWeeks') {
					$('.week1').show();
					$('.week2').show();
					$('#scheduleTable').html('');						
					cDays = 0;
				} else {
					$('.week1').hide();
					$('.week2').hide();

					var ls;
					var x=0;
					cDays = parseInt(userInfo.classCycle,10);

					ls = '<tr class="cycle"><td width="110" style="text-align:right;"><p align="right" style="font-weight:bold">Class Days</p></td>';
					ls = ls + '<td style="text-align:right;" width="25"><input type="checkbox" name="dayCheck' + x + '" id="dayCheck' + x + '" value="Y" title="Check if class taught on this day"></td>';
					ls = ls + '<td style="text-align:left;" width="65">' + dayNames[x] + '</td>';
					ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayStart' + x + '" id="dayStart' + x + '" size="7"></td>';
					ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayEnd' + x + '" id="dayEnd' + x + '" size="7"></td>';
					$('#scheduleTable').html(ls);
					
					for (x=1; x<cDays; x++) {
						ls = '<tr class="cycle"><td width="110"></td>';
						ls = ls + '<td style="text-align:right;" width="25"><input type="checkbox" name="dayCheck' + x + '" id="dayCheck' + x + '" value="Y" title="Check if class taught on this day"></td>';
						ls = ls + '<td style="text-align:left;" width="65">' + dayNames[x] + '</td>';
						ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayStart' + x + '" id="dayStart' + x + '" size="7"></td>';
						ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayEnd' + x + '" id="dayEnd' + x + '" size="7"></td>';
						$('#scheduleTable').append(ls);
					}	
					
					$('.timePick').timepicker({
						'scrollDefault' : '8:00am',
						'forceRoundTime' : false,
						'typeaheadHighlight' : false,
						'step' : 15
					});
				}

				userInfo.promoCode = data.promoCode;
				userInfo.freeCount = data.freeCount;
				updateSchoolInfo();
				
				userInfo.paidThroughDate = data.paidThroughDate;
				$('#paidThroughDate').html(formatDateToShow(userInfo.paidThroughDate));
				
				if (userMode == "A") {
					showPlans();
				} else {
					requestClassList = new Object();
					requestClassList.userMode  = userMode;
					showLoading();
					$.getJSON('getClasses2', requestClassList, loadClassList);
				}

			}
		}		
	}
	
	$('.cancelAlertMessage, .editBoxBtnClose').on('click', function(){
		$('.alertMessage').html('');
		$('.alertContainer').hide();
	});
	
	$('#cancelAccount').click(function() {
		showPlans();
	});	

	$('#cancelSchoolYear').click(function() {
		showPlans();
	});	
	
	$('#cancelSharing').click(function() {
		showPlans();
	});	
	
	$('#cancelDisplay').click(function() {
		showPlans();
	});	
	
	$('#tutorials').click(function() {
		window.open("help/tutorials.html");
	});

	$('#knowledge').click(function() {
		window.open("http://planbook.uservoice.com/knowledgebase");
	});

	$('#feedback').click(function() {
		window.open("http://planbook.uservoice.com/feedback");
	});

	$('#prevButton').click(function() {

		if (lessonView == "week" || lessonView == "day") {

			if ((lessonView == "week" && currentDay < 7) || (lessonView == "day" && currentDay == 0)) {
				getMonday.setDate(getMonday.getDate()-14);
				gDate = getMonday.getDate();
				gMonth = getMonday.getMonth(); gMonth++;
				gYear = getMonday.getFullYear();
				gMonday = gMonth + "/" + gDate + "/" + gYear;
				
				if (lessonView == "week") {action = "showPrevWeek";} else {action = "showPrevDay";}
				
				haveWeeks = false;
				getLessons();
				
			} else {
				if (lessonView == "week") {showPrevWeek();} else {showPrevDay();}
				hideMessage();
			}

		} else { // month view
			
			if (mMonth == 1) {
				mMonth = 12;
				mYear--;
			} else {
				mMonth--;
			}

			action = "showPrevMonth";
			haveMonth = false;
			getLessons();
				
		}
		
	});

	$('#nextButton').click(function() {

		if (lessonView == "week" || lessonView == "day") {
			
			if ((lessonView == "week" && currentDay >= 14) || (lessonView == "day" && currentDay == 20)) {
				getMonday.setDate(getMonday.getDate()+14);
				gDate = getMonday.getDate();
				gMonth = getMonday.getMonth(); gMonth++;
				gYear = getMonday.getFullYear();
				gMonday = gMonth + "/" + gDate + "/" + gYear;
						
				if (lessonView == "week") {action = "showNextWeek";} else {action = "showNextDay";}

				haveWeeks = false;
				getLessons();
				
			} else {
				if (lessonView == "week") {showNextWeek();} else {showNextDay();}
				hideMessage();
			}

		} else { // month view
		
			if (mMonth == 12) {
				mMonth = 1;
				mYear++;
			} else {
				mMonth++;
			}

			action = "showNextMonth";
			haveMonth = false;
			getLessons();
				
		}		
		
	});

	
	$('#todayButton').click(function() {
		showToday();
	});

	function showToday() { 

		if (lessonView == "month") {

			var tMonth = startMonday.getMonth(); tMonth++;
			var tYear = startMonday.getFullYear();

			if (tYear != mYear || tMonth != mMonth) {
				mYear = tYear;
				mMonth = tMonth;

				action = "showToday";
				haveMonth = false;
				getLessons();
			} else {
				hideMessage();
			}
			
		} else {
		
		    dayDiff = Math.round((currentDate.getTime() - getMonday.getTime()) / oneDay);
		
			if (dayDiff >= -8 && dayDiff <= 12) {
				
				if (lessonView == "week") {
					if (userInfo.equalSize == "Y") {
						$(displayWeekE[currentWeek]).hide();
					} else {
						$(displayWeek[currentWeek]).hide();
					}
				} else {
					$(displayDay[currentDay]).hide();
				}
		
				currentDay = dayDiff + 8;
				
				if (currentDay < 7) {
					currentWeek = 0;
				} else if (currentDay < 14) {
					currentWeek = 1;
				} else {
					currentWeek = 2;
				}

				checkCurrentDay();
				
				if (currentDay > 20) {
					getMonday.setTime(startMonday.getTime());
					gDate = getMonday.getDate();
					gMonth = getMonday.getMonth(); gMonth++;
					gYear = getMonday.getFullYear();
					gMonday = gMonth + "/" + gDate + "/" + gYear;
			
					action = 'showToday';
					haveWeeks = false;
					getLessons();
				
				} else {

					if (lessonView == "week") {
						if (userInfo.equalSize == "Y") {
							$(displayWeekE[currentWeek]).show();
						} else {
							$(displayWeek[currentWeek]).show();
						}
						hideDays();
					} else {
						$(displayDay[currentDay]).show();
					}
					
					hideMessage();
					
				}
				
			} else {
			
				getMonday.setTime(startMonday.getTime());
				gDate = getMonday.getDate();
				gMonth = getMonday.getMonth(); gMonth++;
				gYear = getMonday.getFullYear();
				gMonday = gMonth + "/" + gDate + "/" + gYear;
		
				action = 'showToday';
				haveWeeks = false;
				getLessons();
				
			}
		}
	}	

	/** ** Show/Hide pop-up calendar when CALENDAR icon clicked *** */

	$('#calButton').click(function(e) {
		
		if ($('#pickDate').css('display') == 'none') {
			hideLists();
			$('#pickDate').css({'top':$(this).offset().top+30,'left':$(this).offset().left}).show();
		} else {
			$('#pickDate').hide();
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
				
	});
	
	/**
	 * ** Date selected from calendar pop-up, show selected date in WEEK/VIEW
	 * ***
	 */ 	
	
	$('#pickDate').datepicker({
		
		onSelect: function(dateText, inst) {

			$('#pickDate').hide();
			action = 'showDate';
	
			changeDate(dateText);
			
		},
	
		onChangeMonthYear: function(year, month) {
			changeMonthYear = true;
		}
	
	});
	
	function changeDate(newDate) {

		var dtCh= "/";
		var pos1=newDate.indexOf(dtCh);
		var pos2=newDate.indexOf(dtCh,pos1+1);
		
		var month=parseInt(newDate.substring(0,pos1),10);
		var day=parseInt(newDate.substring(pos1+1,pos2),10);
		var year=parseInt(newDate.substring(pos2+1),10);

		if (year < 100) {year = year + 2000;}
		
		showDate = new Date (year, month-1, day);
		
		if (lessonView == "month") {
			
			var tMonth = showDate.getMonth(); tMonth++;
			var tYear = showDate.getFullYear();
		
			if (tYear != mYear || tMonth != mMonth) {
				mYear = tYear;
				mMonth = tMonth;
				haveMonth = false;
				getLessons();
			} else {
				hideMessage();
			}
			
		} else {

			dayDiff = Math.round((showDate.getTime() - getMonday.getTime())/oneDay);
	
			if (dayDiff >= -8 && dayDiff <= 12 && haveWeeks == true) {
					
				if (lessonView == "week") {
					if (userInfo.equalSize == "Y") {
						$(displayWeekE[currentWeek]).hide();
					} else {
						$(displayWeek[currentWeek]).hide();
					}
				} else {
					$(displayDay[currentDay]).hide();
				}
	
				currentDay = dayDiff + 8;
				
				if (currentDay < 7) {
					currentWeek = 0;
				} else if (currentDay < 14) {
					currentWeek = 1;
				} else {
					currentWeek = 2;
				}

				checkCurrentDay();
				
				if (currentDay > 20) {
					getMonday.setTime(startMonday.getTime());
					gDate = getMonday.getDate();
					gMonth = getMonday.getMonth(); gMonth++;
					gYear = getMonday.getFullYear();
					gMonday = gMonth + "/" + gDate + "/" + gYear;
			
					action = 'showToday';
					haveWeeks = false;
					getLessons();
				
				} else {

					if (lessonView == "week") {
						if (userInfo.equalSize == "Y") {
							$(displayWeekE[currentWeek]).show();
						} else {
							$(displayWeek[currentWeek]).show();
						}
						hideDays();
					} else {
						$(displayDay[currentDay]).show();
					}
					
					hideMessage();
					
				}
	
			} else {
				
				getMonday.setTime(showDate.getTime());
				
				var showDay=showDate.getDay();
				switch (showDay) {
					case 0: getMonday.setDate(getMonday.getDate()+1); break;
					case 1: getMonday.setDate(getMonday.getDate()+0); break;
					case 2: getMonday.setDate(getMonday.getDate()-1); break;
					case 3: getMonday.setDate(getMonday.getDate()-2); break;
					case 4: getMonday.setDate(getMonday.getDate()-3); break;
					case 5: getMonday.setDate(getMonday.getDate()-4); break;
					default: getMonday.setDate(getMonday.getDate()+2);
				}
	
				gDate = getMonday.getDate();
				gMonth = getMonday.getMonth(); gMonth++;
				gYear = getMonday.getFullYear();
				
				gMonday = gMonth + "/" + gDate + "/" + gYear;
	
				haveWeeks = false;
				getLessons();
	
			}
		}
	}

	$('#printButton').click(function() {
		if ((window.location.hash == '#grade' || $('#studentGradesView2').is(':visible')) && userMode != 'A') {
			showOverallGradesPrint();
		} else {
			browserButton = false;
			window.location.hash = "print";
			showPrint();
		}
	});
	
	function showOverallGradesPrint() {
		if (userMode == 'S') {
			$('#overallGradeReportTeacher').closest('tr').show();
			$('#overallGradeReportTeacher').val($('#studentList').data('selected'));
			$('#overallGradeReportTeacher').change();
			$('#overallGradeReportPeriod').val($('#gradePeriodList').data('selected'));
		} else {
			$('#overallGradeReportClass').val(gradesClassPicked);
			$('#overallGradeReportPeriod').val(currentGradingPeriodId);
		}
		showBox('#printOverallGradesBox', 10);
	}
	
	$('#applyPrintOverallGrades').click(function(){
		$('#printOverallGradesForm').submit();
		hideBox('#printOverallGradesBox', 10);
	});
	
	$('#cancelPrintOverallGrades').click(function() {
		hideBox('#printOverallGradesBox', 10);
	});
	
	function showPrint() {
		
		hideMessage();
		hideAll();

		if (lessonView == "week") {
			$('input[name="printView"]')[0].checked = true;
		} else if (lessonView == "day") {
			$('input[name="printView"]')[1].checked = true;
		} else if (lessonView == "month" || lessonView == "list") {
			$('input[name="printView"]')[2].checked = true;
		} else {
			$('input[name="printView"]')[4].checked = true;
		}
		
		$('input[name="weekPages"]')[0].checked = true; // One page
		if (lessonView == "week") {
			$('#printWeek').show();
		} else {
			$('#printWeek').hide();
		}

		if (currentClassId != '') {$('#printClass').val(currentClassId);}
		
		if (lessonView == "month" || lessonView == "list") {
			$('#printClassLabel').show();
		} else {
			$('#printClassLabel').hide();
		}
    
		if (lessonView == "day") {
	   		$('#printStartDate').val(formatDateToShow(lessonDate[currentDay]));
	        $('#printEndDate').val(formatDateToShow(lessonDate[currentDay]));
		} else { 
			if (lessonDate[(currentWeek*7)] == null) {
		   		$('#printStartDate').val(formatDateToShow(userInfo.firstDay));
		        $('#printEndDate').val(formatDateToShow(userInfo.lastDay));
			} else {
		   		$('#printStartDate').val(formatDateToShow(lessonDate[(currentWeek*7)]));
		        $('#printEndDate').val(formatDateToShow(lessonDate[currentWeek*7 + 6]));
			}
		}
		
        $('input[name="printLayout"]')[0].checked = true; // Portrait
 
       	$('#printLessons').prop('checked',true);
       	$('#printAttachments').prop('checked',true);
       	$('#printAssignments').prop('checked',true);
       	$('#printAssessments').prop('checked',true);
       	$('#printHomework').prop('checked',true);
       	$('#printNotes').prop('checked',true);
      	$('#printTab4').prop('checked',true);
      	$('#printTab5').prop('checked',true);
      	$('#printTab6').prop('checked',true);
      	$('#printStrategies').prop('checked',true);
       	$('#printEvents').prop('checked',true);
       	$('#printStanId').prop('checked',true);
       	$('#printStanText').prop('checked',true);
       	$('#printTimes').prop('checked',true);
      	$('#printEmbeddedImages').prop('checked',true);
        
		$('#printUnitId').val(0);	
       	
       	$('#printItems').show();
        
		clearNotification('#printErrorMsg');
		$('#printOptions').show();

	}

	$("input[name='printView']").click(function() {

		if ($('input[name="printView"]')[0].checked == true) {
			$('#printWeek').show();
		} else {
			$('#printWeek').hide();
		}
	
		if ($('input[name="printView"]')[2].checked == true || $('input[name="printView"]')[3].checked == true) {
			$('#printClassLabel').show();
		} else {
			$('#printClassLabel').hide();
		}
		
		if ($('input[name="printView"]')[4].checked == true || $('input[name="printView"]')[5].checked == true) {
        	$('#printItems').hide();
		} else {
        	$('#printItems').show();
		}

     });

	$('#applyPrint').click(function() {

		// validate print date range

		var valError = false;
		var cStartDate = formatDateToSave($('#printStartDate').val());
		var cEndDate = formatDateToSave($('#printEndDate').val());
		clearNotification('#printErrorMsg');
		
		if (cEndDate == "") {
			valError = true;
			showNotification('#printErrorMsg', 'Please enter Print Range end date');
		} else {
 	 		if (valDate(cEndDate) == false) {
 	 			valError = true;
 	 			showNotification('#printErrorMsg', 'Please enter a valid Print Range end date');
 	 		}
 		}
		
		if (cStartDate == "") {
			valError = true;
			showNotification('#printErrorMsg', 'Please enter Print Range start date');
		} else {
 	 		if (valDate(cStartDate) == false) {
 	 			valError = true;
 	 			showNotification('#printErrorMsg', 'Please enter a valid Print Range start date');
 	 		}
 		}

		if (valError == false) {
			var result = compareDates(cStartDate, cEndDate);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#printErrorMsg', 'Print Range start date must come before end date');
	 			} else {
	 				showNotification('#printErrorMsg', 'Print Range cannot exceed one year');
	 			}
			}		
		}	

		$('#printTeacherId').val(currentTeacherId);
		$('#printUserMode').val(userMode);
		
		if (userMode == 'A') {
			$('#printYearId').val(currentYearId);
		} else {
			$('#printYearId').val(0);
		}

		var firstOne = true;
		var printSkipClass = "";
		for (var z=0; z<classCount; z++) {
			var CBcId = '#CBcId' + classId[z];
			if ($(CBcId).prop('checked') == false) {
				if (firstOne) {firstOne = false;} else {printSkipClass = printSkipClass + ',';}
				printSkipClass = printSkipClass + classId[z];
			}
		}
		$('#printSkipClass').val(printSkipClass);
		
		if (valError == false) {		
			$('#printStartDate').val(cStartDate);
			$('#printEndDate').val(cEndDate);
			showPlans();
		} else {
			return false;
		}
		
	});
	
	$('#cancelPrint').click(function() {
		showPlans();
	});
	
	function loadWeeks(data) {

		hideLoading();
		
		if (data.invalidTeacherData == "true") {
			window.location="linkerror.html";
		} else if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (userMode == "T" && data.events.length > 0) {
			if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek' || userInfo.classCycle == 'twoWeeks') {
				// an administrator has added no school event...
				if (data.events.length == 1) {
					$('#adminAdd1').show();
					$('#adminAdd2').hide();
				} else {
					$('#adminAdd1').hide();
					$('#adminAdd2').show();
				}
				$('#adminEvents').html("");
				for (var x=0; x<data.events.length; x++) {
					$('#adminEvents').append(formatDateToShow(data.events[x].date) + "&nbsp;&nbsp;" + data.events[x].title + "<br/>");
				}
				showBox('#adminEventBox', 30);
			} else {
				adminEventShift("Y");  // if cycle schedule, always shift on No
										// School events
			}
		} else {

			if (userMode == "S") {
				loadStudentSettings(data);			
			}
			
			if (userMode == "A") {
				loadSectionParms(data);
				loadSectionLabels();
			}
			
			var fromHeight = $(window).height() - 110;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#weekLessonBox').css({'height':fromHeight+'px'});
	
			$('.eC').html('');
			$('.eC').css({'border':'0px solid #B5B5B5'});
			
			removeAllSubjects();
			
			for (var x=0; x<data.days.length; x++) {
				
				var ls = '<div class="colTitle gotoDay" id="gotoDay' + x + '" style="margin:0px; font-size:10pt;">' + data.days[x].dayOfWeek + ' ' + formatDateToShow(data.days[x].date) + '</div>';
				$(displayDay[x]).html(ls);
				
				var x1 = x + 1;
				$('#x'+x1+'y1').html(ls);

				lessonDate[x] = data.days[x].date;
				
				if (data.days[x].cD != null && data.days[x].cD != '' && userInfo.showCount == "Y" && data.days[x].count != null && data.days[x].count > 0) {
					ls = '<div style="background-color:#FFFFFF; padding-right:8px; padding-left:8px; padding-top:1px; padding-bottom:1px; font-size:80%; color:#000000;"><div style="float:left;">Day:' + data.days[x].count + '</div><div style="float:right;">' + data.days[x].cD + '</div><div style="clear:both;"></div></div>';
					$(displayDay[x]).append(ls);
					$('#x'+x1+'y2').html(ls);
				} else if (data.days[x].cD != null && data.days[x].cD != '') {
					ls = '<p class="schedTitle">' + data.days[x].cD + '</p>';
					$(displayDay[x]).append(ls);
					$('#x'+x1+'y2').html(ls);
				} else if (userInfo.showCount == "Y" && data.days[x].count != null) {
					if (data.days[x].count > 0) {
						ls = '<p class="schedTitle gotoDay" id="gotoDa2' + x + '">School Day ' + data.days[x].count + '</p>';
						$(displayDay[x]).append(ls);
						$('#x'+x1+'y2').html(ls);
					} else if (data.days[x].count == -1) {
						ls = '<p class="schedTitle">No School</p>';
						$(displayDay[x]).append(ls);
						$('#x'+x1+'y2').html(ls);
					}
				} else {
					$('#x'+x1+'y2').html('');
				}
				
				var y = 3;
				for (var z=0; z<data.days[x].objects.length; z++) {
					if (data.days[x].objects[z].type == "E") {
						loadDayEvent(data.days[x].objects[z],x,"W");
						loadDayEventEqual(data.days[x].objects[z],x,y);
					} else {
						var hideDate = data.days[x].dayOfWeek + ' ' + formatDateToShow(data.days[x].date);
						loadDayLesson(data.days[x].objects[z],x,hideDate,"W",data.days[x].date);
						loadDayLessonEqual(data.days[x].objects[z],x,hideDate,y,data.days[x].date);
					}
					y = y + 1;
				}
				
			}
			
			$('.draggable').draggable({
				handle: '.dragIt',
				helper: 'clone',
			    start: function(e, ui) {
					currentId = this.id;
					loadLesson(currentId);
					lessonLoaded = "Y";
					ui.helper.html('<div style="padding:3px; width:170px; color:white; background-color:' + $(this).css('border-top-color') + ';"><table style="border-collapse:collapse;"><tr><td><img border="0" src="images/move.png" style="margin-right:5px;"></td><td style="width:100%"><strong>' + $('#lbClass').html() + '</strong><br/>' + $('#lbDate').html() + '</td></tr></table></div>');
			    },
			    cursorAt:{left:0,top:0}
			});

			$('.draggable').droppable({
				accept: ".draggable",
				 hoverClass: "addShadow",
				 drop : function (event, ui) {
					var str = this.id;
					var pos = str.indexOf('X');
					var moveSeq = str.substring(pos+1);
					var posE = str.indexOf('Z');
					moveClassId = str.substring(0,pos);
					var fullMoveDate = $('#' + moveClassId + moveSeq + 'D').html();
					var posSpace= fullMoveDate.indexOf(' ');
					moveExtraLesson = str.substring(posE+1);
					moveLessonDate = formatDateToSave(fullMoveDate.substring(posSpace+1));
					moveShowClass1 = $('#' + moveClassId + moveSeq + 'CN').html();
					moveShowDate1 = fullMoveDate.substring(posSpace+1);
					overwriteMoveLesson = "N";
					copyMoveLesson = "N";
					moveLesson();		
				}
			});
			
			$('.hiddenInfo').hide();

			for (var z=0; z<itemCount; z++) {
				var CBpId = '#CB' + partId[z];
				var hsPartId = '.' + partId[z];
				if ($(CBpId).prop('checked')) {showPart(hsPartId);} else {hidePart(hsPartId);}
			}
			
			if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			for (var z=0; z<classCount; z++) {
				var CBcId = '#CBcId' + classId[z];
				var hsClassId = '.class' + classId[z];
				if ($(CBcId).prop('checked')) {showClassLessons(hsClassId);} else {hideClassLessons(hsClassId);}
			}

			if (userInfo.equalSize == "Y" && userInfo.adjustToFit == "N") {
				$('.lessonHeight').css({'height':userInfo.boxSize+'px'});
			} else {
				$('.lessonHeight').css({'height':'auto'});
			}
			
			if (plansHS == true) {
				$('.eventHS').show();
				$('.plansHS').show();
			} else {
				$('.eventHS').hide();
				$('.plansHS').hide();
			}
			
			if (action=="showPrevWeek" || action=="showPrevDay" || action=="showNextWeek" || action=="showNextDay" || action=="showToday" || action=="showDate") {
				
				currentWeek = 1;
				currentDay = 7;
	
				if (action == 'showToday') {
					dayDiff = Math.round((currentDate.getTime() - getMonday.getTime()) / oneDay);
					currentDay = dayDiff + 8;
				}
			
				if (action == 'showDate') {
					dayDiff = Math.round((showDate.getTime() - getMonday.getTime())/oneDay);
					currentDay = dayDiff + 8;
				}

				if (action == 'showPrevDay') {
					currentDay = 13;
					checkCurrentDayPrev();
				} else {
					if (currentDay == 6) {currentDay = 7;}
					checkCurrentDay();
				}
				
			}
	
			haveWeeks = true;
			if (lessonView == "day") {showDay();} else {showWeek();}
			
			if (newUser == true) {
				newUser = false; 
				startTutorial();
			}

			checkFirstTime();
			
			if (data.gSignedIn == "Y") {
				gSignedIn = true;
			} else {
				gSignedIn = false;
			}
		}		
	}
	
	function checkFirstTime() {
		if (firstTime == true) {	
			if (userMode == "S") {
				$('#saveViewButton').hide();
				if (studentNotes != null && studentNotes != "" && (studentData.studentId == null || studentData.studentId == 0)) {
					$('#studentNotesDisplay').html(studentNotes);
					$('#viewStudentNotesBox').show();
					$('#editStudentNotesBox').hide();
					$('#editStudentNotes').hide();
					$('#deleteStudentNotes').hide();
					$('#printStudentNotes').hide();
					showBox('#studentNotesBox', 0)
				}
			} else {
				UserVoice.push(['identify', {email:userInfo.emailAddress,name:userInfo.firstName+' '+userInfo.lastName}]);

				getStrategies();
				getStandards();   // load Shared Standards
				getMyStandards(); // load My Standards
				if (userInfo.schoolId != null && userInfo.schoolId != 0) {
					getSchoolStandards();
				}
				if (paymentNeeded == true) {
					showExpiredMsg();
				} else if (suspendAccount == true) {
					paymentNeeded = true;
					showBox('#msgSuspendAccount', 30);
				} else if (userMode == "T" && yearNeeded == "Y") {
					showBox('#addSchoolYear', 30);
				}				
			}
			firstTime = false;
		}
	}
	
	function getUserModeFromCache() {
		var cachedMode = { hasValue : false };
		var m = null;
		var t = null;
		var u = null;
		var y = null;
		if (Storage != undefined) {
			try {
				m = localStorage.getItem('userMode');
				t = localStorage.getItem('teacherId');
				u= localStorage.getItem('userId');
				y = localStorage.getItem('yearId');
			} catch (e) {
				m = $.cookie('userMode');
				t = $.cookie('teacherId');
				t = $.cookie('userId');
				y = $.cookie('yearId');
			}
		} else {
			m = $.cookie('userMode');
			t = $.cookie('teacherId');
			t = $.cookie('userId');
			y = $.cookie('yearId');
		}
		
		if (m) {
			cachedMode.hasValue = true;
			cachedMode.userMode = m;
			cachedMode.teacherId = t;
			cachedMode.yearId = y;
			cachedMode.userId = u;
		}
		return cachedMode;
	}
	
	function addUserModeToCache(mode, teacherId, yearId) {
		if (Storage != undefined) {
			try {
				localStorage.setItem('userMode', mode);
				localStorage.setItem('teacherId', teacherId);
				localStorage.setItem('yearId', yearId);
				localStorage.setItem('userId', userInfo.userId);
			} catch (e) {
				$.cookie('userMode', mode, { expires: 30 });
				$.cookie('teacherId', teacherId, { expires: 30 });
				$.cookie('yearId', yearId, { expires: 30 });
				$.cookie('userId', userInfo.userId, { expires: 30 });
			}
		} else {
			$.cookie('userMode', mode, { expires: 30 });
			$.cookie('teacherId', teacherId, { expires: 30 });
			$.cookie('yearId', yearId, { expires: 30 });
			$.cookie('userId', userInfo.userId, { expires: 30 });
		}
	}
	
	function loadTeacherList(data) {

		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			teacherList = new Array();

			var fName = "";
			var lName = "";
			
			haveTeachers = true;
			$('#teacherBody').html('');
			$('#adminList').html('');
			$('#commentSendTo').html('');
			
			if (data.teachers != null) {

				for (var z=0; z<data.teachers.length; z++) {

					fName = data.teachers[z].firstName;
					lName = data.teachers[z].lastName;
					if (fName == "" && lName == "") {fName = "First"; lName="Last";}

					var ls = '<div class="adminItem" id="tID' + z + '">';
					if (data.teachers[z].newCommentT == "Y") {
						ls = ls + '<img id="newC' + data.teachers[z].teacherId + '" src="images/newcomment.png">';
					}
					ls = ls + '<span id="tIDN' + z + '">' + fName + ' ' + lName + '</span></div>';
					
					if (data.teachers[z].userType != 'A') {
						$('#adminList').append(ls);
						$('#commentSendTo').append('<option value="' + data.teachers[z].teacherId + '">' + fName + ' ' + lName + '</option>');
					}

					teacherList[z] = new Object();
					teacherList[z].teacherId = data.teachers[z].teacherId;
					teacherList[z].yearId = data.teachers[z].yearId;
					teacherList[z].firstDay = data.teachers[z].firstDay;
					teacherList[z].lastDay = data.teachers[z].lastDay;

					teacherList[z].years = new Array();
					if (data.teachers[z].years != null) {
						for (var x=0; x<data.teachers[z].years.length; x++) {
							
							teacherList[z].years[x] = new Object();
							teacherList[z].years[x].yearId = data.teachers[z].years[x].yearId;
							teacherList[z].years[x].yearName = data.teachers[z].years[x].yearName;
							teacherList[z].years[x].firstDay = data.teachers[z].years[x].firstDay;
							teacherList[z].years[x].lastDay = data.teachers[z].years[x].lastDay;
							
							var start = new Date(teacherList[z].years[x].firstDay);
							var end   = new Date(teacherList[z].years[x].lastDay);
							if (currentDate >= start && currentDate <= end) {
								teacherList[z].years[x].active = true;
							} else {
								teacherList[z].years[x].active = false;
							}
							
						}
					}
					
				}

				if (data.teachersA != null) {
					for (var z=0; z<data.teachersA.length; z++) {

						ls = '<tr class="teacherRow" style="cursor:pointer;" id="tlid' + data.teachersA[z].teacherId + '">';
						ls = ls + '<td class="slCell" id="tlid' + data.teachersA[z].teacherId + 'T">' + data.teachersA[z].userType  + '</td>';
						ls = ls + '<td class="scCell" style="text-align:left;" id="tlid' + data.teachersA[z].teacherId + 'E">' + data.teachersA[z].emailAddress  + '</td>';
						ls = ls + '<td class="scCell" style="text-align:left;" id="tlid' + data.teachersA[z].teacherId + 'F">' + data.teachersA[z].firstName  + '</td>';
						ls = ls + '<td class="scCell" style="text-align:left;" id="tlid' + data.teachersA[z].teacherId + 'L">' + data.teachersA[z].lastName + '</td>';
						
						if (data.teachersA[z].lastLogon == "01/01/1970") {
							ls = ls + '<td class="srCell" style="text-align:center;">None</td>';
						} else {
							ls = ls + '<td class="srCell" style="text-align:center;">' + formatDateToShow(data.teachersA[z].lastLogon) + '</td>';
						}
						ls = ls + '<td id="tlid' + data.teachersA[z].teacherId + 'X" valign="top" style="border-right-color:white; border-bottom-color:white;"><p style="padding-top:5px; text-align:center;"><img src="images/cogblack.png"></p></td>';
						ls = ls + '</tr>';
						$('#teacherBody').append(ls);
					
					}
					
					$('#totalAccounts').html(data.teachersA.length);
				}
				
				var cachedMode = getUserModeFromCache();
				var cachedYearId = null;
				var x = -1;
				$.each(data.teachers, function(i, item) {
					if (cachedMode.hasValue && this.teacherId == cachedMode.teacherId && userInfo.userId == cachedMode.userId) {
						cachedYearId = cachedMode.yearId;
						x = i;
						return false;
					}
					
					if (x < 0 && this.userType != 'A') {
						x = i;
					}
				});
				
				if (x >= 0 && data.teachers[x] != null) {
					fName = data.teachers[x].firstName;
					lName = data.teachers[x].lastName;
					if (fName == "" && lName == "") {fName = "First"; lName="Last";}
					$('#adminLabel').html(fName + ' ' + lName);
	
					loadAdminYears(x);
					
					currentTeacherId = teacherList[x].teacherId;
					currentYearLabel = getYearLabel(teacherList[x], cachedYearId);
					
					if (currentYearLabel) {
						$('#adminYearLabel').html(currentYearLabel.name);
						if (!currentYearLabel.active) {
							$('#adminYearButton').css({'background-color':'#FFC7CE'});
						} 
						currentYearId = cachedYearId;
					} else {
						currentYearId = teacherList[x].yearId;
					}
					
					addUserModeToCache(userMode, currentTeacherId, currentYearId);
	
					requestClassList = new Object();
					requestClassList.userMode  = userMode;
					requestClassList.yearId    = currentYearId;
					requestClassList.teacherId = currentTeacherId;
					
					$('#reportStart').val(formatDateToShow(teacherList[x].firstDay));
					$('#reportEnd').val(formatDateToShow(teacherList[x].lastDay));
					
					showLoading();
					$.getJSON('getClasses2', requestClassList, loadClassList);

				} else {
					showTeachers();
				}

			}
		}	
	}
	
	function getYearLabel(teacher, yearId) {
		var yearLabel = null;
		if (teacher.years) {
			$.each(teacher.years, function() {
				if (this.yearId == yearId) {
					yearLabel = {name : this.yearName, active : this.active };
					return false;
				}
			});
		}
		return yearLabel;
	}
	
	function loadAdminYears(tPos) {
		$('#adminYearList').html('');
		if (teacherList[tPos].years != null) {
			for (var x=0; x<teacherList[tPos].years.length; x++) {
				var ls = '<div class="adminYearItem" id="adminYearItem' + x + '">' + teacherList[tPos].years[x].yearName + '</div>';
				$('#adminYearList').append(ls);
				if (teacherList[tPos].yearId == teacherList[tPos].years[x].yearId) {
					$('#adminYearLabel').html(teacherList[tPos].years[x].yearName);
					if (teacherList[tPos].years[x].active == true) {
						$('#adminYearButton').css({'background-color':'#FFFFFF'});
					} else {
						$('#adminYearButton').css({'background-color':'#FFC7CE'});
					}
				}
			}
		}
	}
	
	function loadClassList(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			
			userInfo.yearId = data.currentYearId;
			userInfo.classLength = data.classes.length;
			
			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listClassBox').css({'height':fromHeight+'px'});
			
			var ls;
			var x;
			var checkMark;

			if (userMode == "T") {
				
				ls = '<tr class="tHeader">';
				ls = ls + '<th style="background-color:transparent; border:0; padding: 0px; width: 10px;"></th>';
				ls = ls + '<th align="center" valign="middle" width="200px" height="20px">Class Name</th>';
				ls = ls + '<th align="center" valign="middle" width="90px" height="20px">Start Date</th>';
				ls = ls + '<th align="center" valign="middle" width="90px" height="20px">End Date</th>';
	
				if (userInfo.classCycle == 'oneWeek') {
					ls = ls + '<th align="center" valign="middle" width="30px" height="20px">M</th>';
					ls = ls + '<th align="center" valign="middle" width="30px" height="20px">T</th>';
					ls = ls + '<th align="center" valign="middle" width="30px" height="20px">W</th>';
					ls = ls + '<th align="center" valign="middle" width="30px" height="20px">R</th>';
					ls = ls + '<th align="center" valign="middle" width="30px" height="20px">F</th>';
				} else {
					if (userInfo.classCycle == 'twoWeeks') {
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">M</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">T</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">W</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">R</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">F</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">M</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">T</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">W</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">R</th>';
						ls = ls + '<th align="center" valign="middle" width="30px" height="20px">F</th>';
					} else {
						for (x=1; x<=cDays; x++) {
							ls = ls + '<th align="center" valign="middle" width="30px" height="20px">' + x + '</th>';
						}
					}
				}
				ls = ls + '</tr>';
				$('#classTable').html(ls);
				
			}
			
			classCount = data.classes.length;

			$('#pickClass').html('<div id="pcall" class="classPicker">All Classes</div>');
			$('#overallGradeReportClass').html('');
			$('#pickUnit').html('<div id="puall" class="unitPicker">All Units</div>');
			$('#pickToClass').html('');

			$('#rollClass').html('');
			$('#templateClass').html('');
			$('#customClass').html('');
			$('#moveClass').html('');
			$('#printClass').html('');
			$('#reportClass').html('<option value="0">View All</option>');
			
			$('#assignmentClass').html('<option value="0">Select Class</option>');
			$('#assessmentClass').html('<option value="0">Select Class</option>');
			$('#assessmentUnit').html('<option value="0">Select Unit</option>');
			$('#unitClass').html('<option value="0">Select Class</option>');
			
			ls = '<p class="boxHead2" style="font-size:10pt; margin-bottom:0;">View Classes</p>';
			ls = ls + '<div class="classItem" id="allClasses" style="padding-left:6px; padding-top:2px;">All Classes</div>';
			ls = ls + '<div class="classItem" id="noClasses" style="padding-left:6px; padding-top:2px;">No Classes</div>';
			$('#classList').html(ls);
			
			var unitPos = 0;
			for (var z=0; z<data.classes.length; z++) {
				
				currentStandards[z] = new Object();
				currentStandards[z].grade = data.classes[z].currentGrade;
				currentStandards[z].state = data.classes[z].currentState;
				currentStandards[z].subject = data.classes[z].currentSubject;
				
				schoolStart2[z] = data.classes[z].useSchoolStart;
				
				classStart[z] = data.classes[z].cSd;  // array of class start
														// dates, used to
														// validate school start
														// date when changed
				classEnd[z] = data.classes[z].cEd;  // array of class start
													// dates, used to validate
													// school start date when
													// changed
				classNames[z] = data.classes[z].cN;
				classId[z] = data.classes[z].cId;

				for (var y=0; y<data.classes[z].units.length; y++) {
					classUnits[unitPos] = new Object();
					classUnits[unitPos].classId = data.classes[z].cId;
					classUnits[unitPos].unitId = data.classes[z].units[y].id;
					classUnits[unitPos].unitTitle = data.classes[z].units[y].title;
					classUnits[unitPos].unitNum = data.classes[z].units[y].num;
					unitPos++;
				}
				
				ls = '<div class="classItem" id="cId' + classId[z] + '"><input type="checkbox" class="CBclassItem" id="CBcId' + classId[z] + '" value="1" title="' + classNames[z] + '"><span style="margin-left:3px;">' + classNames[z] + '</span></div>';
				$('#classList').append(ls);

				ls = '<option value="' +  classId[z] + '">' + classNames[z] + '</option>';

				if (data.classes[z].collaborateSubjectId == 0) {
					$('#templateClass').append(ls);
					$('#customClass').append(ls);
					$('#moveClass').append(ls);
					$('#unitClass').append(ls);
				}
				
				$('#printClass').append(ls);
				$('#assignmentClass').append(ls);
				$('#assessmentClass').append(ls);

				$('#rollClass').append('<input type="checkbox" id="addYearClass' + z + '" value="Y"><label>' + data.classes[z].cN + '</label><br/>');
				$('#addYearClass'+z).prop('checked',true);
				
				if (userMode == "T") {$('#reportClass').append(ls);}
				var tempClassColor = (data.classes[z].cC<=45?colors1[data.classes[z].cC]:data.classes[z].cC);
				var tempTextColor = data.classes[z].titleColor;
				$('#pickClass').append('<div id="pc' + classId[z] + '" class="classPicker" style="color:'+tempTextColor+'; background-color:' + tempClassColor + '; border:0px;">' + classNames[z] + '</div>');
				$('#overallGradeReportClass').append($('<option/>').text(classNames[z]).val(classId[z]));
				
				$('#pickToClass').append('<div id="copyToClass' + z + '" class="toClassPicker"><p style="width:150px; overflow:hidden">' + classNames[z] + '</p></div>');
				
				if (userMode == "T") {
					
					ls = '<tr class="pickRow classRow" style="cursor:pointer;" id="' + classId[z] + '">';
					ls = ls + '<td style="background-color:'+ tempClassColor + '; border:1px solid ' + tempClassColor + '; border-top-width:0; border-bottom-color:white;"></td>';
					ls = ls + '<td class="scCell" style="text-align:left;" id="' + classId[z] + 'N">' + data.classes[z].cN + '</td>';
					ls = ls + '<td class="scCell"><div id="' + classId[z] + 'CSD">' + formatDateToShow(data.classes[z].cSd) + '</div></td>';
					ls = ls + '<td class="scCell"><div id="' + classId[z] + 'CED">' + formatDateToShow(data.classes[z].cEd) + '</div></td>';
	
					if (userInfo.classCycle == 'oneWeek') {
	
						if (data.classes[z].mT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
						ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
	
						if (data.classes[z].tT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
						ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
						
						if (data.classes[z].wT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
						ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
						
						if (data.classes[z].rT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
						ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
						
						if (data.classes[z].fT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
						ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
						
					} else {
						if (userInfo.classCycle == 'twoWeeks') {
	
							if (data.classes[z].mT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
	
							if (data.classes[z].tT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].wT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].rT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].fT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].wk2mT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
	
							if (data.classes[z].wk2tT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].wk2wT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].wk2rT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							
							if (data.classes[z].wk2fT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
							ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
	
						} else {
							for (x=0; x<cDays; x++) {
								if (data.classes[z].dTs[x].dT == 'Y') {checkMark = '&#10004';} else {checkMark = '';}
								ls = ls + '<td class="scCell"><div>' + checkMark + '</div></td>';
							}
						}
					}
						
					ls = ls + '</tr>';
					$('#classTable').append(ls);
				}
			}
			
			if (userMode == "T") {
				ls = '<tr>';
				ls = ls + '<td><img src="spacer.gif" width="7px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="90px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="90px" height="1"></td>';
	
				if (userInfo.classCycle == 'oneWeek') {
					ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
				} else {
					if (userInfo.classCycle == 'twoWeeks') {
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
					} else {
						for (x=1; x<=cDays; x++) {
							ls = ls + '<td><img src="spacer.gif" width="30px" height="1"></td>';
						}
					}
				}
	
				ls = ls + '</tr>';
				$('#classTable').append(ls);
			}
			
			var classFound = false;
			for (var x=0; x<classId.length; x++) {
				if (classId[z] == currentClassId) {
					classFound = true;
					break;
				}
			}
			if (classFound == false) {
				currentClassId = classId[0];
			}	
			
			// load class list in View
			$('.CBclassItem').prop('checked',true);
			for (var z=0; z<hideClasses.length; z++) {
				$('#CBcId'+hideClasses[z]).prop('checked',false);
			}
			
			$('#viewClassLabel').html("All Classes");
			showClassCount = classCount;
			
			haveWeeks = false;
			haveMonth = false;
			haveList = false;
			haveSearch = false;
			haveAssignments = false;
			haveAssessments = false;
			haveUnits = false;
			haveTemplates = false;
			haveCommentTo = false;
			haveStudents = false;

			if (userMode == "A") {
				
				// administrator view, just get lessons

				if (action != "removeTeacher" && action != "addTeacher") {
					lessonView = "week";
					getLessons();
				} else {
					showAction();
				}
				
			} else if (newUser == false && (action == "newClass" || action == "updateClass" || action == "deleteClass")) {

				hideBox("#editClassBox", 10);
				if (window.location.hash == '#class') {
					showClass();
				} else {
					getLessons();
				}
				showAction();

			} else {

				// new user, initial load, new/change year, or update to
				// settings, load and display weeks
				// lessonView = "week";
				if (firstTime == true && userInfo.firstDay != '' && userInfo.lastDay != '') {
					
					// if current date is not in date range of school year, then
					// go to first day of school year
					
					var dtCh= "/";

					var pos1=userInfo.firstDay.indexOf(dtCh);
					var pos2=userInfo.firstDay.indexOf(dtCh,pos1+1);
					var month=parseInt(userInfo.firstDay.substring(0,pos1),10);
					var day=parseInt(userInfo.firstDay.substring(pos1+1,pos2),10);
					var year=parseInt(userInfo.firstDay.substring(pos2+1),10);
					if (year < 100) {year = year + 2000;}
					var yearStart = new Date (year, month-1, day);
					
					var lPos1 = userInfo.lastDay.indexOf(dtCh);
					var lPos2 = userInfo.lastDay.indexOf(dtCh,lPos1+1);
					var lMonth = parseInt(userInfo.lastDay.substring(0,lPos1),10);
					var lDay = parseInt(userInfo.lastDay.substring(lPos1+1,lPos2),10);
					var lYear = parseInt(userInfo.lastDay.substring(lPos2+1),10);
					if (lYear < 100) {lYear = lYear + 2000;}
					var yearEnd = new Date (lYear, lMonth-1, lDay);
					yearEnd.setDate(yearEnd.getDate() + 7)  // add a week in
															// case the current
															// year just ended
					
					// if current date is before or after year start and end,
					// show first day
					if (currentDate < yearStart || currentDate > yearEnd) { 
						var startDateYear = new Date(year, gMonth-1, gDate);
						var endDateYear = new Date(lYear, gMonth-1, gDate);
						
						if ((startDateYear > yearStart) && (startDateYear < yearEnd)) {
							gMonday = gMonth+"/"+gDate+"/"+year;
						} else if ((endDateYear > yearStart) && (endDateYear < yearEnd)) {
							gMonday = gMonth+"/"+gDate+"/"+lYear;
						} else {
							gMonday = userInfo.firstDay;
						}
					
						setMondayStart(gMonday);
						
						action = 'showDate';
						changeDate(gMonday);
						
					  } else { // set gMonday
						getMonday.setTime(startMonday.getTime());
						gDate = getMonday.getDate();
						gMonth = getMonday.getMonth(); gMonth++;
						gYear = getMonday.getFullYear();
						gMonday = gMonth + "/" + gDate + "/" + gYear;
						
						getLessons();
					}
					
				} else {
					getLessons();
				}

			}
		}
	}

	function loadSettings(data) {

		hideLoading();
		
		userInfo.currentStrategyGroup = data.userId;
		$('#strategyGroup').html('<option value="' + data.userId + '">My Strategies</option>');
		if (data.schoolId != null && data.schoolId != 0) {
			$('#strategyGroup').append('<option value="' + data.schoolId + '"> School - ' + data.schoolLabel + '</option>');
		}
		
		if (data.districtId != null && data.districtId != 0) {
			$('#strategyGroup').append('<option value="' + data.districtId + '"> District - ' + data.districtName + '</option>');
		}
		
		if (data.strategyGroup) {
			$.each(data.strategyGroup, function() {
				$('#strategyGroup').append($('<option/>').val(this.key).text(this.value));
			});
		}
		
		$('input[name="gradeReportType"][type="radio"]').first().prop('checked',true);
		$('input[name="gradeReportFiles"]').first().prop('checked',true);
		$('input[name="gradeReportStandardsShow"]').first().prop('checked',true);
       	$('#gradeReportClassDetail').prop('checked',true);
       	$('#studentGradeReportClassDetail').prop('checked',true);
		
		// sets if user has refresh token saved
		// used to display Sign in bttn or Disconnect
		$('#googleSignedIn').html(data.hasToken);
		
		// load class list to display
  		if (data.hideClassIds != null) {
  			for (var z=0; z<data.hideClassIds.length; z++) {
  				hideClasses[z] = data.hideClassIds[z];
			}
  		}
		
		var today = new Date();
		var paidThrough = new Date(data.paidThroughDate);
		
		var dateDiff = Math.ceil((paidThrough - today) / (1000*60*60*24));

		loadPayments(data.payments);

		loadScoreWeights(data);
		
		loadLetterGrades(data);

		$('#startsOnTerm1').html('<option value="0">Not Reset</option>');
		$('#startsOnTerm1').append('<option value="1">Week 1</option>');
		$('#startsOnTerm1').append('<option value="2">Week 2</option>');
		
		if (data.paymentNeeded == "true") {paymentNeeded = true;}
		if (data.schoolSuspendAccount == "Y") {suspendAccount = true;}
	    
		userInfo.newCommentA = data.newCommentA;
		
		if (data.notLoggedIn == "true") {
			if (action == "newYear" || action == "changeYear") {
				showLogin();
			} else {
				window.location="welcome.html";
			}
		} else if (data.nameExists == "true") {
			showNotification('#yearErrorMsg', 'School Year already exists, please enter a different School Year name');
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			var pbns = Storages.initNamespaceStorage('Planbook' + data.userId);
			storage = Storage ? pbns.localStorage : pbns.cookieStorage;
			
			userInfo.currentLessonLayoutId = data.currentLessonLayoutId;
			if (userInfo.currentLessonLayoutId == null) {userInfo.currentLessonLayoutId = 0;}
			$('#selectSchoolLayout').html('<option value="0">No Layout</option>');
			lessonLayouts = new Array();
			if (data.lessonLayouts != null && data.lessonLayouts.length > 0) {
				for (var x=0; x<data.lessonLayouts.length; x++) {
					$('#selectSchoolLayout').append('<option value="' + data.lessonLayouts[x].lessonLayoutId + '">' + data.lessonLayouts[x].name + '</option>');
					
					lessonLayouts[x] = new Object();
					lessonLayouts[x].lessonLayoutId = data.lessonLayouts[x].lessonLayoutId;
					lessonLayouts[x].name = data.lessonLayouts[x].name;
		      		lessonLayouts[x].tab1Label = data.lessonLayouts[x].tab1Label;
		      		lessonLayouts[x].tab2Label = data.lessonLayouts[x].tab2Label;
		      		lessonLayouts[x].tab3Label = data.lessonLayouts[x].tab3Label;
		      		lessonLayouts[x].tab4Label = data.lessonLayouts[x].tab4Label;
		      		lessonLayouts[x].tab5Label = data.lessonLayouts[x].tab5Label;
		      		lessonLayouts[x].tab6Label = data.lessonLayouts[x].tab6Label;
		      		lessonLayouts[x].tab7Label = data.lessonLayouts[x].tab7Label;
		      		lessonLayouts[x].tab8Label = data.lessonLayouts[x].tab8Label;
		      		lessonLayouts[x].tab9Label = data.lessonLayouts[x].tab9Label;
		      		lessonLayouts[x].tab1DisplayOrder = data.lessonLayouts[x].tab1DisplayOrder;
		      		lessonLayouts[x].tab2DisplayOrder = data.lessonLayouts[x].tab2DisplayOrder;
		      		lessonLayouts[x].tab3DisplayOrder = data.lessonLayouts[x].tab3DisplayOrder;
		      		lessonLayouts[x].tab4DisplayOrder = data.lessonLayouts[x].tab4DisplayOrder;
		      		lessonLayouts[x].tab5DisplayOrder = data.lessonLayouts[x].tab5DisplayOrder;
		      		lessonLayouts[x].tab6DisplayOrder = data.lessonLayouts[x].tab6DisplayOrder;
		      		lessonLayouts[x].tab7DisplayOrder = data.lessonLayouts[x].tab7DisplayOrder;
		      		lessonLayouts[x].tab8DisplayOrder = data.lessonLayouts[x].tab8DisplayOrder;
		      		lessonLayouts[x].tab9DisplayOrder = data.lessonLayouts[x].tab9DisplayOrder;
		      		lessonLayouts[x].tab1Enabled = data.lessonLayouts[x].tab1Enabled;
		      		lessonLayouts[x].tab2Enabled = data.lessonLayouts[x].tab2Enabled;
		      		lessonLayouts[x].tab3Enabled = data.lessonLayouts[x].tab3Enabled;
		      		lessonLayouts[x].tab4Enabled = data.lessonLayouts[x].tab4Enabled;
		      		lessonLayouts[x].tab5Enabled = data.lessonLayouts[x].tab5Enabled;
		      		lessonLayouts[x].tab6Enabled = data.lessonLayouts[x].tab6Enabled;
		      		lessonLayouts[x].tab7Enabled = data.lessonLayouts[x].tab7Enabled;
		      		lessonLayouts[x].tab8Enabled = data.lessonLayouts[x].tab8Enabled;
		      		lessonLayouts[x].tab9Enabled = data.lessonLayouts[x].tab9Enabled;
		      		lessonLayouts[x].layoutChange = data.lessonLayouts[x].layoutChange;
		      		lessonLayouts[x].strategiesLabel = data.lessonLayouts[x].strategiesLabel;
		      		lessonLayouts[x].strategiesDisplayOrder = data.lessonLayouts[x].strategiesDisplayOrder;
		      		lessonLayouts[x].strategiesEnabled = data.lessonLayouts[x].strategiesEnabled;
				}
				$('#selectSchoolLayout').val(userInfo.currentLessonLayoutId);
				$('#schoolLayoutList').show();
			} else {
				$('#schoolLayoutList').hide();
			}
			
			// load display view
			lessonView = (data.displayView == "" || data.displayView == null ? "week" : data.displayView);
			browserButton = false;
			window.location.hash = lessonView;
			
			// load last class viewed in List
			currentClassId = data.displayListClass;
			
			if (action != "newYear" && action != "changeYear") {
				
				if (data.alertMsg && data.alertMsg != '') {
					$('#alertMsg').html(data.alertMsg);
					$('#alertBar').show();
				}

				if (data.infoMsg != null && data.infoMsg != "") {
					$('#infoMsg').html(data.infoMsg);
					$('#infoBar').show();
				} else if (data.schoolId != "" && data.schoolPastDue == "Y") {
					$('#infoMsg').html("Payment on your school account is past due! Please encourage payment to avoid service disruption.");
					$('#infoBar').show();
				} else if (data.schoolId == "" && dateDiff <= 7 && dateDiff > 0) {
					showExpiring();
					$('#daysLeft').html("Your subscription to planbook.com will expire in "+ dateDiff +" day" + (dateDiff > 1 ? "s" : "") + ". Note that you will continue to have full access to your plans if your subscription expires, but you will no longer be able to make changes to your plans." );
				}

				// load items list in view
				for (var z=0; z<itemCount; z++) {
					var CBpId = '#CB' + partId[z];
					if (data.displayItems.substr(z,1) == "Y") {
						$(CBpId).prop('checked',true);
					} else {
						$(CBpId).prop('checked',false);
					}
				}
				$('#CBlessonDoIt').prop('checked',true);

			}
			
			userInfo.sunShow = data.sunShow;
			userInfo.monShow = data.monShow;
			userInfo.tueShow = data.tueShow;
			userInfo.wedShow = data.wedShow;
			userInfo.thuShow = data.thuShow;
			userInfo.friShow = data.friShow;
			userInfo.satShow = data.satShow;
			userInfo.adjustToFit = data.adjustToFit;
			
			var dayShows = 0;
			if (userInfo.sunShow == "Y") {dayShows++;};
			if (userInfo.monShow == "Y") {dayShows++;};
			if (userInfo.tueShow == "Y") {dayShows++;};
			if (userInfo.wedShow == "Y") {dayShows++;};
			if (userInfo.thuShow == "Y") {dayShows++;};
			if (userInfo.friShow == "Y") {dayShows++;};
			if (userInfo.satShow == "Y") {dayShows++;};
			
			switch (dayShows) {
				case 1: weekWidth = '100%'; break;
				case 2: weekWidth = '50%';  break;
				case 3: weekWidth = '33%';  break;
				case 4: weekWidth = '25%';  break;
				case 5: weekWidth = '20%';  break;
				case 6: weekWidth = '16%';  break;
				case 7: weekWidth = '14%';  break;
				default: weekWidth = '20%';	
			}

			userInfo.sunCycle = data.sunCycle;
			userInfo.monCycle = data.monCycle;
			userInfo.tueCycle = data.tueCycle;
			userInfo.wedCycle = data.wedCycle;
			userInfo.thuCycle = data.thuCycle;
			userInfo.friCycle = data.friCycle;
			userInfo.satCycle = data.satCycle;
			
			userInfo.showCount = data.showCount;
			userInfo.equalSize = data.equalSize;
			userInfo.boxSize   = data.boxSize;

			userInfo.dateFormat = data.dateFormat;
			userInfo.dateDelimiter = data.dateDelimiter;
			userInfo.sendEmail = data.sendEmail;
			userInfo.showBanner = data.showBanner;
			userInfo.autosaveInterval = data.autosaveInterval;
			
			if (userInfo.dateFormat == 2) {
				$('.datePicker').datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
			} else {
				$('.datePicker').datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
			}
			
			loadGradingPeriods2(data.gradingPeriods);
			
			try {
				 currentGradingPeriodId = storage.get('gradingPeriodId');
				if (!currentGradingPeriodId && data.currentGradingPeriodId) {
					currentGradingPeriodId = data.currentGradingPeriodId;
					storage.set('gradingPeriodId', currentGradingPeriodId);
				}
			} catch(e) {
				if (data.currentGradingPeriodId) {
					currentGradingPeriodId = data.currentGradingPeriodId;
					storage.set('gradingPeriodId', currentGradingPeriodId);
				} 
			}
			if (!currentGradingPeriodId) {
				currentGradingPeriodId = 0;
			}
			
			gradesPeriodPicked = currentGradingPeriodId;
			
			if (currentGradingPeriodId != 0) {
				$('#gradesPeriodLabel').html($('#pgp'+ currentGradingPeriodId + '0').html());
			} else {
				$('#gradesPeriodLabel').html("All Periods");
			}

			userInfo.currentGrade = data.currentGrade;
			userInfo.currentState = data.currentState;
			userInfo.currentSubject = data.currentSubject;
			
			userInfo.userId = data.userId;
			userInfo.emailAddress = data.emailAddress;
			userInfo.userPassword = "";
			userInfo.firstName = data.firstName;
			userInfo.lastName = data.lastName;
			
			userInfo.schoolId = data.schoolId;
			userInfo.promoCode = data.promoCode;
			userInfo.freeCount = data.freeCount;
			updateSchoolInfo();
			
			userInfo.displayName = data.displayName;
			userInfo.schoolName = data.schoolName;
			userInfo.schoolDistrict = data.schoolDistrict;
			userInfo.studentPassword = data.studentPassword;
			userInfo.sharedUserKey = data.sharedUserKey;
			userInfo.viewLength = data.viewLength;
			userInfo.viewLessons = data.viewLessons;
			userInfo.viewHomework = data.viewHomework;
			userInfo.viewNotes = data.viewNotes;
			userInfo.viewTab4 = data.viewTab4;
			userInfo.viewTab5 = data.viewTab5;
			userInfo.viewTab6 = data.viewTab6;
			userInfo.viewStrategies = data.viewStrategies;
			userInfo.viewStandards = data.viewStandards;
			userInfo.viewEvents = data.viewEvents;
			userInfo.viewMyList = data.viewMyList;
			userInfo.viewAssignments = data.viewAssignments;
			userInfo.viewAssessments = data.viewAssessments;
			userInfo.viewGrades = data.viewGrades;
			
			userInfo.registeredDate = data.registeredDate;
			userInfo.paidThroughDate = data.paidThroughDate;
			userInfo.classCycle = data.classCycle;	
			userInfo.userType = data.userType;
			
			loadSectionParms(data);
			
			statesSelected = new Array();
			if (data.showStateIds != null) {
				for (var y=0; y<data.showStateIds.length; y++) {
					statesSelected[y] = data.showStateIds[y]; 
				}
			}
			
			standardStates = new Array();
			
			if (data.codes != null && data.codes.length > 0) {

				$('#stateListBody').html('');
				for (var x=0; x<data.codes.length; x++) {
		    		standardStates[x] = new Object();
		    		standardStates[x].id = data.codes[x].id;
		    		standardStates[x].name = data.codes[x].name;
					$('#stateListBody').append('<tr><td class="stateRow" id="stateRow' + data.codes[x].id + '">' + data.codes[x].name + '</td></tr>');
				}
				
				$('#state').html("");
				$('#reportState').html("");
				$('#gradeReportStandardState').html("");
				
				userInfo.hasStandards = data.hasStandards;
				userInfo.schoolLabel = data.schoolLabel;
				if (userInfo.hasStandards != null && userInfo.hasStandards == "Y") {
					$('#state').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
					$('#reportState').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
					$('#gradeReportStandardState').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
				}
				
				userInfo.districtId = data.districtId;
				userInfo.districtName = data.districtName;
				if (userInfo.districtId != null && userInfo.districtId != 0) {
					$('#state').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
					$('#reportState').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
					$('#gradeReportStandardState').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
				}
				
				if (data.showStateIds != null) {
					for (var x=0; x<data.codes.length; x++) {
						for (var y=0; y<data.showStateIds.length; y++) {
							if (data.codes[x].id == data.showStateIds[y]) {
								$('#state').append('<option value="' + data.codes[x].id + '">' + data.codes[x].name + '</option>');
								$('#reportState').append('<option value="' + data.codes[x].id + '">' + data.codes[x].name + '</option>');
								$('#gradeReportStandardState').append('<option value="' + data.codes[x].id + '">' + data.codes[x].name + '</option>');
								break;
							}
						}
					}
				}
				
			}

			loadSavedTeachers(data);
			
			if (data.teacherNotes == null) {teacherNotes = "";} else {teacherNotes = data.teacherNotes;}
			if (data.studentNotes == null) {studentNotes = "";} else {studentNotes = data.studentNotes;}
			if (data.subPlans == null) {subPlans = "";} else {subPlans = data.subPlans;};
			
			if (data.classCycle == null) {userInfo.classCycle = 'oneWeek';}

			cDays = 0;
			
			if (userInfo.classCycle == 'oneWeek') {
				$('.week1').show();
				$('.week2').hide();
				$('#scheduleTable').html('');						
			} else {
				if (userInfo.classCycle == 'twoWeeks') {
					$('.week1').show();
					$('.week2').show();
					$('#scheduleTable').html('');						
				} else {
					$('.week1').hide();
					$('.week2').hide();

					var ls;
					var x=0;
					cDays = parseInt(userInfo.classCycle,10);
					dayNames[x] = data.cycleDays[x].day;
					
					ls = '<tr class="cycle"><td width="110" style="text-align:right;"><p align="right" style="font-weight:bold">Class Days</p></td>';
					ls = ls + '<td style="text-align:right;" width="25"><input type="checkbox" name="dayCheck' + x + '" id="dayCheck' + x + '" value="Y" title="Check if class taught on this day"></td>';
					ls = ls + '<td style="text-align:left;" width="65">' + dayNames[x] + '</td>';
					ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayStart' + x + '" id="dayStart' + x + '" size="7"></td>';
					ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayEnd' + x + '" id="dayEnd' + x + '" size="7"></td>';
					$('#scheduleTable').html(ls);

					var x1 = x + 1;
					ls = '<option value="' + x1 + '">' + dayNames[x] + '</option>';
					$('#templateWhen').append(ls);

					for (x=1; x<cDays; x++) {
						dayNames[x] = data.cycleDays[x].day;
						ls = '<tr class="cycle"><td width="110"></td>';
						ls = ls + '<td style="text-align:right;" width="25"><input type="checkbox" name="dayCheck' + x + '" id="dayCheck' + x + '" value="Y" title="Check if class taught on this day"></td>';
						ls = ls + '<td style="text-align:left;" width="65">' + dayNames[x] + '</td>';
						ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayStart' + x + '" id="dayStart' + x + '" size="7"></td>';
						ls = ls + '<td style="text-align:center;" width="100"><input type="text" class="timePick" name="dayEnd' + x + '" id="dayEnd' + x + '" size="7"></td>';
						$('#scheduleTable').append(ls);
						
						x1 = x + 1;
						ls = '<option value="' + x1 + '">' + dayNames[x] + '</option>';
						$('#templateWhen').append(ls);
					}
					
					$('.timePick').timepicker({
						'scrollDefault' : '8:00am',
						'forceRoundTime' : false,
						'typeaheadHighlight' : false,
						'step' : 15
					});
				}
			}

			var pos1=data.paidThroughDate.indexOf('/');
			var pos2=data.paidThroughDate.indexOf('/',pos1+1);
			var strMonth1=data.paidThroughDate.substring(0,pos1);
			var strDay1=data.paidThroughDate.substring(pos1+1,pos2);
			var strYear1=data.paidThroughDate.substring(pos2+1);
			var month1=parseInt(strMonth1,10);
			var day1=parseInt(strDay1,10);
			var year1=parseInt(strYear1,10);
			lastDate = new Date (year1, month1-1, day1);
	
  			convertYears = new Array();
  			convertPos = 0;
			
			yearNames = new Array();
			var yearPos = 0;
			$('#yearTable').html('');
			$('#yearList').html('');
      		if (data.years != null) {
				for (var y=0; y<data.years.length; y++) {
	      			yearNames[y] = data.years[y].yearName;

	      			var ls = '<tr class="yearRow" style="cursor:pointer;" id="' + data.years[y].yearId + '">';
					ls = ls + '<td class="slCell" style="text-align:left;">' + data.years[y].yearName + '</td>';
					ls = ls + '<td class="scCell"><div>' + formatDateToShow(data.years[y].firstDay) + '</div></td>';
					ls = ls + '<td class="scCell"><div>' + formatDateToShow(data.years[y].lastDay) + '</div></td>';
					ls = ls + '</tr>';
					$('#yearTable').append(ls);

					ls = '<div class="pickItem yearItem" id="year' + data.years[y].yearId + '">' + data.years[y].yearName + '</div>';
					$('#yearList').append(ls);
					
					if (data.currentYearId != null) {
		      			if (data.currentYearId == data.years[y].yearId) {yearPos = y;}
					}
					
					if (data.years[y].convertStatus == 0) {
						convertYears[convertPos] = data.years[y].yearId;
						convertPos++;
					}
					
	      		}
      		}

      		if (convertYears.length > 0) {
      			
    			convertPos = 0;
      			convertLessons();
      			
      		} else {
				$('#yearList').append('<div class="pickItem yearItem" id="yearAdd">Add a Year</div>');
	      		
	           	if (data.years != null && data.years.length > 0 && data.years[yearPos].yearId != null) {
					userInfo.yearId = data.years[yearPos].yearId;
					userInfo.firstDay = data.years[yearPos].firstDay;
					userInfo.lastDay = data.years[yearPos].lastDay;
					userInfo.yearName = data.years[yearPos].yearName;
		   			$('#reportStart').val(formatDateToShow(userInfo.firstDay));
		   			$('#reportEnd').val(formatDateToShow(userInfo.lastDay));
		   			userInfo.sunCycle = data.years[yearPos].sunCycle;
		   			userInfo.monCycle = data.years[yearPos].monCycle;
		   			userInfo.tueCycle = data.years[yearPos].tueCycle;
		   			userInfo.wedCycle = data.years[yearPos].wedCycle;
		   			userInfo.thuCycle = data.years[yearPos].thuCycle;
		   			userInfo.friCycle = data.years[yearPos].friCycle;
		   			userInfo.satCycle = data.years[yearPos].satCycle;
	           	}
	           	
				if (userInfo.classCycle == null || userInfo.classCycle == 'oneWeek') {
					$('input[name="classSchedule"]')[0].checked = true;
				} else {
					if (userInfo.classCycle == 'twoWeeks') {
						$('input[name="classSchedule"]')[1].checked = true;
					} else {
						$('input[name="classSchedule"]')[2].checked = true;
						$('#cycleDays').val(cDays);
					}
				}
	
				terms = new Array();
	           	if (data.years != null && data.years.length > 0 && data.years[yearPos].terms != null) {
	           		for (var z=0; z<data.years[yearPos].terms.length; z++) {
	           			terms[z] = new Object();
	           			terms[z].name = data.years[yearPos].terms[z].termName;
	           			terms[z].firstDay = data.years[yearPos].terms[z].firstDay;
	           			terms[z].startsOn = data.years[yearPos].terms[z].startsOn;
	           		} 
	           		loadTermsTable();
			  	} else {
					$('#termsTableBody').html('');
			  		terms = null;
					$('#termsTableHead').hide();
			  	}
	
				$('#yearLabel').html(userInfo.yearName);
	
				$('#paypalForm').append('<input type="hidden" name="custom" value="' + data.userId + '">');
				
				$('#extend1').html(formatDateToShow(data.extend1));
				$('#extend2').html(formatDateToShow(data.extend2));
				$('#extend3').html(formatDateToShow(data.extend3));
	
				if (userInfo.displayName != '') {
					$('#nameLabel').html(userInfo.displayName);
				} else {
					$('#nameLabel').html(userInfo.emailAddress);
				}
	
				// if userMode not set, then first time in...
				if (userMode == "") {
					
					var userType;
					if (data.userType == "B") {
						$('#modeButton').show();
						var cachedMode = getUserModeFromCache();
						if (cachedMode.hasValue && cachedMode.userId == userInfo.userId) {
							userType = cachedMode.userMode;
							if (userType == "T") {
								$('#modeLabel').html('Teacher');
							}
						} else {
							userType = data.userType;
						}
					} else {
						userType = data.userType;
					}
					
					if (userType == "B" || userType == "A") {
						
						// an administrator
						userMode = "A";
						cursorType = "default";
		
						$('.adminOnly').show();
						$('.teacherOnly').hide();
						$('#notesButton').hide();
						
						$('#myListColTitle').html("School List");
						$('#myListEditLabel').html("School List");
						$('#myListIDLabel').html("ID");
						
						$('#reportState').html("");
						$('#reportState').data({ codes : data.codes });
						for (var x=0; x<data.codes.length; x++) {
							$('#reportState').append('<option value="' + data.codes[x].id + '">' + data.codes[x].name + '</option>');
						}
						
					} else {
						// a teacher
						userMode = "T";
						cursorType = "pointer";
						
						$('.adminOnly').hide();
						$('.teacherOnly').show();
						
						$('#myListColTitle').html("My List");
						$('#myListEditLabel').html("My List");
						$('#myListIDLabel').html("My List ID");
	
					}
	
				}
				
				yearNeeded = data.yearNeeded;
				
				loadSectionLabels();
				
				// if new user, show welcome screen
				if (data.currentYearId == null) {
	
					$('#commentsButton').hide();
					
					$('#newFirstName').val(userInfo.firstName);
					$('#newLastName').val(userInfo.lastName);
					$('#newSchoolDistrict').val(userInfo.schoolDistrict);
					$('#newSchoolName').val(userInfo.schoolName);
					$('#newYearName').val('');
	
					userInfo.dateFormat = 1;
					userInfo.dateDelimiter = "/";
					$('.datePicker').datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
					$('#weekLessonBox').hide();
					$('#welcome1').show();
	
					$('#newFirstName').focus();
					$('#adminButton').hide();
					$('#yearButton').hide();
	
					if (data.userType == "A") {
						$('#firstClassTable').hide();
					} else {
						$('#firstClassTable').show();
					}
					
					if (userInfo.schoolId != null && userInfo.schoolId != 0) {
						$('#promoCodeTable').hide();
					} else {
						$('#promoCodeTable').show();
					}
					
					newUser = true;
	
				} else {
	
					$('.doButton').show();
	
					if (userMode == "A") {
					
						action = "getTeacherList";
	
						showLoading();
						$.getJSON('getTeachersAll', 'getAdmin=Y', loadTeacherList);
					
					} else {
						
						$('#yearButton').show();

						var layoutChanged = false;
						$('#currentLayoutName').html("No layout selected");
						$('#updatedLayouts').html("");
						if (lessonLayouts != null && lessonLayouts.length > 0) {
							for (var x=0; x<lessonLayouts.length; x++) {
								if (userInfo.currentLessonLayoutId == lessonLayouts[x].lessonLayoutId) {
									$('#currentLayoutName').html(lessonLayouts[x].name);
								}
								if (lessonLayouts[x].layoutChange == true) {
									layoutChanged = true;
									var ls = '<tr><td>' + lessonLayouts[x].name;
									if (userInfo.currentLessonLayoutId != lessonLayouts[x].lessonLayoutId) {
										ls = ls + '</td><td><input type="button" style="margin-left:10px;" class="buttonsmall useLayout" id="useLayout' + lessonLayouts[x].lessonLayoutId + '" value="Select Layout">';
									}
									ls = ls + '</td></tr>';
									$('#updatedLayouts').append(ls);
								}
							}
						}
						
						if (layoutChanged == true) {
							if (userInfo.currentLessonLayoutId == 0) {
								$('#layoutChange1').hide();
								$('#layoutChange2').show();
							} else {
								$('#layoutChange1').show();
								$('#layoutChange2').hide();
							}
							showBox('#layoutChangeBox', 30);
						} else {
							requestClassList = new Object();
							requestClassList.userMode  = userMode;
							showLoading();
							$.getJSON('getClasses2', requestClassList, loadClassList);
						}
						
					}
				}
			}
  	
      		// used for checking off google calendar favorites
	      	if (data.googleEmailCal != null) {
	      		for(var i=0; i < data.googleEmailCal.length; i++) {
	      			googleEmailCal.push(data.googleEmailCal[i].calendar);
	      		}
	      		
	      	}
		}
	}

	$('#yesAddYear').click(function() {
		hideBox('#addSchoolYear', 30);
		currentView = "School Year";
		showAddYear();
	});	

	$('#noAddYear').click(function() {
		hideBox('#addSchoolYear', 30);
	});	
	
	function loadSectionParms(tData) {
		
		userInfo.lessonEnabled = tData.lessonEnabled;
		userInfo.lessonLabel = tData.lessonLabel;
		userInfo.lessonFont = tData.lessonFont;
		userInfo.lessonSize = tData.lessonSize;
		userInfo.lessonColor = tData.lessonColor;
		userInfo.lessonHide = tData.lessonHide;
		userInfo.lessonTextFont = tData.lessonTextFont;
		userInfo.lessonTextSize = tData.lessonTextSize;
		userInfo.lessonTextColor = tData.lessonTextColor;
		userInfo.lessonLabelFillColor = tData.lessonLabelFillColor;
		userInfo.lessonTextFillColor = tData.lessonTextFillColor;
		userInfo.tab1Order = tData.lessonDisplayOrder;
		userInfo.lessonLabelBold = tData.lessonLabelBold;
		userInfo.lessonLabelItalic= tData.lessonLabelItalic;
		userInfo.lessonLabelUnderline = tData.lessonLabelUnderline;
		userInfo.lessonTextBold = tData.lessonTextBold;
		userInfo.lessonTextItalic = tData.lessonTextItalic;
		userInfo.lessonTextUnderline = tData.lessonTextUnderline;

		userInfo.eventEnabled = tData.eventEnabled;
		userInfo.eventLabel = tData.eventLabel;
		userInfo.eventLabelFont = tData.eventLabelFont;
		userInfo.eventLabelSize = tData.eventLabelSize;
		userInfo.eventLabelColor = tData.eventLabelColor;
		userInfo.eventLabelFillColor = tData.eventLabelFillColor;
		userInfo.eventTextColor = tData.eventTextColor;
		userInfo.eventTextSize = tData.eventTextSize;
		userInfo.eventTextFont = tData.eventTextFont;
		userInfo.eventTextFillColor = tData.eventTextFillColor;
		userInfo.eventLabelBold = tData.eventLabelBold;
		userInfo.eventLabelItalic= tData.eventLabelItalic;
		userInfo.eventLabelUnderline = tData.eventLabelUnderline;
		userInfo.eventTextBold = tData.eventTextBold;
		userInfo.eventTextItalic = tData.eventTextItalic;
		userInfo.eventTextUnderline = tData.eventTextUnderline;
		
		userInfo.classHeadOrder = tData.classHeadOrder;
		userInfo.classHeadCentered = tData.classHeadCentered;
		
		userInfo.tab2Enabled = tData.tab2Enabled;
		userInfo.tab2Label = tData.tab2Label;
		userInfo.tab2Font = tData.tab2Font;
		userInfo.tab2Size = tData.tab2Size;
		userInfo.tab2Color = tData.tab2Color;
		userInfo.tab2Hide = tData.tab2Hide;
		userInfo.tab2TextFont = tData.tab2TextFont;
		userInfo.tab2TextSize = tData.tab2TextSize;
		userInfo.tab2TextColor = tData.tab2TextColor;
		userInfo.tab2LabelFillColor = tData.tab2LabelFillColor;
		userInfo.tab2TextFillColor = tData.tab2TextFillColor;
		userInfo.tab2Order = tData.tab2DisplayOrder;
		userInfo.tab2LabelBold = tData.tab2LabelBold;
		userInfo.tab2LabelItalic= tData.tab2LabelItalic;
		userInfo.tab2LabelUnderline = tData.tab2LabelUnderline;
		userInfo.tab2TextBold = tData.tab2TextBold;
		userInfo.tab2TextItalic = tData.tab2TextItalic;
		userInfo.tab2TextUnderline = tData.tab2TextUnderline;

		userInfo.tab3Enabled = tData.tab3Enabled;
		userInfo.tab3Label = tData.tab3Label;
		userInfo.tab3Font = tData.tab3Font;
		userInfo.tab3Size = tData.tab3Size;
		userInfo.tab3Color = tData.tab3Color;
		userInfo.tab3Hide = tData.tab3Hide;
		userInfo.tab3TextFont = tData.tab3TextFont;
		userInfo.tab3TextSize = tData.tab3TextSize;
		userInfo.tab3TextColor = tData.tab3TextColor;
		userInfo.tab3LabelFillColor = tData.tab3LabelFillColor;
		userInfo.tab3TextFillColor = tData.tab3TextFillColor;
		userInfo.tab3Order = tData.tab3DisplayOrder;
		userInfo.tab3LabelBold = tData.tab3LabelBold;
		userInfo.tab3LabelItalic= tData.tab3LabelItalic;
		userInfo.tab3LabelUnderline = tData.tab3LabelUnderline;
		userInfo.tab3TextBold = tData.tab3TextBold;
		userInfo.tab3TextItalic = tData.tab3TextItalic;
		userInfo.tab3TextUnderline = tData.tab3TextUnderline;

		userInfo.tab4Enabled = tData.tab4Enabled;
		userInfo.tab4Label = tData.tab4Label;
		userInfo.tab4Font = tData.tab4Font;
		userInfo.tab4Size = tData.tab4Size;
		userInfo.tab4Color = tData.tab4Color;
		userInfo.tab4Hide = tData.tab4Hide;
		userInfo.tab4TextFont = tData.tab4TextFont;
		userInfo.tab4TextSize = tData.tab4TextSize;
		userInfo.tab4TextColor = tData.tab4TextColor;
		userInfo.tab4LabelFillColor = tData.tab4LabelFillColor;
		userInfo.tab4TextFillColor = tData.tab4TextFillColor;
		userInfo.tab4Order = tData.tab4DisplayOrder;
		userInfo.tab4LabelBold = tData.tab4LabelBold;
		userInfo.tab4LabelItalic= tData.tab4LabelItalic;
		userInfo.tab4LabelUnderline = tData.tab4LabelUnderline;
		userInfo.tab4TextBold = tData.tab4TextBold;
		userInfo.tab4TextItalic = tData.tab4TextItalic;
		userInfo.tab4TextUnderline = tData.tab4TextUnderline;

		userInfo.tab5Enabled = tData.tab5Enabled;
		userInfo.tab5Label = tData.tab5Label;
		userInfo.tab5Font = tData.tab5Font;
		userInfo.tab5Size = tData.tab5Size;
		userInfo.tab5Color = tData.tab5Color;
		userInfo.tab5Hide = tData.tab5Hide;
		userInfo.tab5TextFont = tData.tab5TextFont;
		userInfo.tab5TextSize = tData.tab5TextSize;
		userInfo.tab5TextColor = tData.tab5TextColor;
		userInfo.tab5LabelFillColor = tData.tab5LabelFillColor;
		userInfo.tab5TextFillColor = tData.tab5TextFillColor;
		userInfo.tab5Order = tData.tab5DisplayOrder;
		userInfo.tab5LabelBold = tData.tab5LabelBold;
		userInfo.tab5LabelItalic= tData.tab5LabelItalic;
		userInfo.tab5LabelUnderline = tData.tab5LabelUnderline;
		userInfo.tab5TextBold = tData.tab5TextBold;
		userInfo.tab5TextItalic = tData.tab5TextItalic;
		userInfo.tab5TextUnderline = tData.ta5TextUnderline;

		userInfo.tab6Enabled = tData.tab6Enabled;
		userInfo.tab6Label = tData.tab6Label;
		userInfo.tab6Font = tData.tab6Font;
		userInfo.tab6Size = tData.tab6Size;
		userInfo.tab6Color = tData.tab6Color;
		userInfo.tab6Hide = tData.tab6Hide;
		userInfo.tab6TextFont = tData.tab6TextFont;
		userInfo.tab6TextSize = tData.tab6TextSize;
		userInfo.tab6TextColor = tData.tab6TextColor;
		userInfo.tab6LabelFillColor = tData.tab6LabelFillColor;
		userInfo.tab6TextFillColor = tData.tab6TextFillColor;
		userInfo.tab6Order = tData.tab6DisplayOrder;
		userInfo.tab6LabelBold = tData.tab6LabelBold;
		userInfo.tab6LabelItalic= tData.tab6LabelItalic;
		userInfo.tab6LabelUnderline = tData.tab6LabelUnderline;
		userInfo.tab6TextBold = tData.tab6TextBold;
		userInfo.tab6TextItalic = tData.tab6TextItalic;
		userInfo.tab6TextUnderline = tData.tab6TextUnderline;

		userInfo.strategiesEnabled = tData.strategiesEnabled;
		userInfo.strategiesLabel = tData.strategiesLabel;
		userInfo.strategiesFont = tData.strategiesFont;
		userInfo.strategiesSize = tData.strategiesSize;
		userInfo.strategiesColor = tData.strategiesColor;
		userInfo.strategiesHide = tData.strategiesHide;
		userInfo.strategiesTextFont = tData.strategiesTextFont;
		userInfo.strategiesTextSize = tData.strategiesTextSize;
		userInfo.strategiesTextColor = tData.strategiesTextColor;
		userInfo.strategiesLabelFillColor = tData.strategiesLabelFillColor;
		userInfo.strategiesTextFillColor = tData.strategiesTextFillColor;
		userInfo.strategiesOrder = tData.strategiesDisplayOrder;
		userInfo.strategiesLabelBold = tData.strategiesLabelBold;
		userInfo.strategiesLabelItalic= tData.strategiesLabelItalic;
		userInfo.strategiesLabelUnderline = tData.strategiesLabelUnderline;
		userInfo.strategiesTextBold = tData.strategiesTextBold;
		userInfo.strategiesTextItalic = tData.strategiesTextItalic;
		userInfo.strategiesTextUnderline = tData.strategiesTextUnderline;

		if (userInfo.strategiesEnabled == null) {userInfo.strategiesEnabled = "N";}
		if (userInfo.strategiesLabel == null) {userInfo.strategiesLabel = "Instructional Strategies";}
		if (userInfo.strategiesFont == null) {userInfo.strategiesFont = "2";}
		if (userInfo.strategiesSize == null) {userInfo.strategiesSize = "10";}
		if (userInfo.strategiesColor == null) {userInfo.strategiesColor = "#000000";}
		if (userInfo.strategiesHide == null) {userInfo.strategiesHide = "N";}
		if (userInfo.strategiesTextFont == null) {userInfo.strategiesTextFont = "2";}
		if (userInfo.strategiesTextSize == null) {userInfo.strategiesTextSize = "10";}
		if (userInfo.strategiesTextColor == null) {userInfo.strategiesTextColor = "#000000";}
		if (userInfo.strategiesLabelFillColor == null) {userInfo.strategiesLabelFillColor = "#FFFFFF";}
		if (userInfo.strategiesTextFillColor == null) {userInfo.strategiesTextFillColor = "#FFFFFF";}
		if (userInfo.strategiesOrder == null) {userInfo.strategiesOrder = "10";}
		if (userInfo.strategiesLabelBold == null) {userInfo.strategiesLabelBold = "N";}
		if (userInfo.strategiesLabelItalic == null) {userInfo.strategiesLabelItalic = "N";}
		if (userInfo.strategiesLabelUnderline == null) {userInfo.strategiesLabelUnderline = "N";}
		if (userInfo.strategiesTextBold == null) {userInfo.strategiesTextBold = "N";}
		if (userInfo.strategiesTextItalic == null) {userInfo.strategiesTextItalic = "N";}
		if (userInfo.strategiesTextUnderline == null) {userInfo.strategiesTextUnderline = "N";}
		
		userInfo.sharedStandardsEnabled = tData.sharedStandardsEnabled;
		userInfo.sharedStandardsLabel = tData.sharedStandardsLabel;
		userInfo.sharedStandardsFont = tData.sharedStandardsFont;
		userInfo.sharedStandardsSize = tData.sharedStandardsSize;
		userInfo.sharedStandardsColor = tData.sharedStandardsColor;
		userInfo.sharedStandardsHide = tData.sharedStandardsHide;
		userInfo.sharedStandardsTextFont = tData.sharedStandardsTextFont;
		userInfo.sharedStandardsTextSize = tData.sharedStandardsTextSize;
		userInfo.sharedStandardsTextColor = tData.sharedStandardsTextColor;
		userInfo.sharedStandardsLabelFillColor = tData.sharedStandardsLabelFillColor;
		userInfo.sharedStandardsTextFillColor = tData.sharedStandardsTextFillColor;
		userInfo.sharedStandardsOrder = tData.sharedStandardsDisplayOrder;
		userInfo.sharedStandardsLabelBold = tData.sharedStandardsLabelBold;
		userInfo.sharedStandardsLabelItalic= tData.sharedStandardsLabelItalic;
		userInfo.sharedStandardsLabelUnderline = tData.sharedStandardsLabelUnderline;
		userInfo.sharedStandardsTextBold = tData.sharedStandardsTextBold;
		userInfo.sharedStandardsTextItalic = tData.sharedStandardsTextItalic;
		userInfo.sharedStandardsTextUnderline = tData.sharedStandardsTextUnderline;

		userInfo.myStandardsEnabled = tData.myStandardsEnabled;
		userInfo.myStandardsLabel = tData.myStandardsLabel;
		userInfo.myStandardsFont = tData.myStandardsFont;
		userInfo.myStandardsSize = tData.myStandardsSize;
		userInfo.myStandardsColor = tData.myStandardsColor;
		userInfo.myStandardsHide = tData.myStandardsHide;
		userInfo.myStandardsTextFont = tData.myStandardsTextFont;
		userInfo.myStandardsTextSize = tData.myStandardsTextSize;
		userInfo.myStandardsTextColor = tData.myStandardsTextColor;
		userInfo.myStandardsLabelFillColor = tData.myStandardsLabelFillColor;
		userInfo.myStandardsTextFillColor = tData.myStandardsTextFillColor;
		userInfo.myStandardsOrder = tData.myStandardsDisplayOrder;
		userInfo.myStandardsLabelBold = tData.myStandardsLabelBold;
		userInfo.myStandardsLabelItalic= tData.myStandardsLabelItalic;
		userInfo.myStandardsLabelUnderline = tData.myStandardsLabelUnderline;
		userInfo.myStandardsTextBold = tData.myStandardsTextBold;
		userInfo.myStandardsTextItalic = tData.myStandardsTextItalic;
		userInfo.myStandardsTextUnderline = tData.myStandardsTextUnderline;

		userInfo.schoolStandardsEnabled = tData.schoolStandardsEnabled;
		userInfo.schoolStandardsLabel = tData.schoolStandardsLabel;
		userInfo.schoolStandardsFont = tData.schoolStandardsFont;
		userInfo.schoolStandardsSize = tData.schoolStandardsSize;
		userInfo.schoolStandardsColor = tData.schoolStandardsColor;
		userInfo.schoolStandardsHide = tData.schoolStandardsHide;
		userInfo.schoolStandardsTextFont = tData.schoolStandardsTextFont;
		userInfo.schoolStandardsTextSize = tData.schoolStandardsTextSize;
		userInfo.schoolStandardsTextColor = tData.schoolStandardsTextColor;
		userInfo.schoolStandardsLabelFillColor = tData.schoolStandardsLabelFillColor;
		userInfo.schoolStandardsTextFillColor = tData.schoolStandardsTextFillColor;
		userInfo.schoolStandardsOrder = tData.schoolStandardsDisplayOrder;
		userInfo.schoolStandardsLabelBold = tData.schoolStandardsLabelBold;
		userInfo.schoolStandardsLabelItalic= tData.schoolStandardsLabelItalic;
		userInfo.schoolStandardsLabelUnderline = tData.schoolStandardsLabelUnderline;
		userInfo.schoolStandardsTextBold = tData.schoolStandardsTextBold;
		userInfo.schoolStandardsTextItalic = tData.schoolStandardsTextItalic;
		userInfo.schoolStandardsTextUnderline = tData.schoolStandardsTextUnderline;

		userInfo.lessonTitleFont = tData.lessonTitleFont;
		userInfo.lessonTitleSize = tData.lessonTitleSize;
		userInfo.lessonTitleColor = tData.lessonTitleColor;
		userInfo.lessonTitleLabelFillColor = tData.lessonTitleLabelFillColor;
		userInfo.lessonTitleLabelBold = tData.lessonTitleLabelBold;
		userInfo.lessonTitleLabelItalic= tData.lessonTitleLabelItalic;
		userInfo.lessonTitleLabelUnderline = tData.lessonTitleLabelUnderline;
		
		lessonTitleStyle = ' style = "font-weight: ' + (userInfo.lessonTitleLabelBold == "Y"?'bold':'normal') + '; ' +
		'font-style: '+(userInfo.lessonTitleLabelItalic=="Y"?'italic':'normal') + '; ' +
		'text-decoration: '+(userInfo.lessonTitleLabelUnderline=="Y"?'underline':'normal') + '; ' +
		'background-color: '+ userInfo.lessonTitleLabelFillColor + '; ' +
		'font-family:' + fontTypes[userInfo.lessonTitleFont] + '; ' + 
		'font-size:' + userInfo.lessonTitleSize + 'pt; ' + 
		'color:' + userInfo.lessonTitleColor + ';" ';

		userInfo.attachmentsFont = tData.attachmentsFont;
		userInfo.attachmentsSize = tData.attachmentsSize;
		userInfo.attachmentsColor = tData.attachmentsColor;
		userInfo.attachmentsHide = tData.attachmentsHide;
		userInfo.attachmentsTextFont = tData.attachmentsTextFont;
		userInfo.attachmentsTextSize = tData.attachmentsTextSize;
		userInfo.attachmentsTextColor = tData.attachmentsTextColor;
		userInfo.attachmentsLabelFillColor = tData.attachmentsLabelFillColor;
		userInfo.attachmentsTextFillColor = tData.attachmentsTextFillColor;
		userInfo.attachmentsLabelBold = tData.attachmentsLabelBold;
		userInfo.attachmentsLabelItalic= tData.attachmentsLabelItalic;
		userInfo.attachmentsLabelUnderline = tData.attachmentsLabelUnderline;
		userInfo.attachmentsTextBold = tData.attachmentsTextBold;
		userInfo.attachmentsTextItalic = tData.attachmentsTextItalic;
		userInfo.attachmentsTextUnderline = tData.attachmentsTextUnderline;
		
		userInfo.assignmentsFont = tData.assignmentsFont;
		userInfo.assignmentsSize = tData.assignmentsSize;
		userInfo.assignmentsColor = tData.assignmentsColor;
		userInfo.assignmentsHide = tData.assignmentsHide;
		userInfo.assignmentsTextFont = tData.assignmentsTextFont;
		userInfo.assignmentsTextSize = tData.assignmentsTextSize;
		userInfo.assignmentsTextColor = tData.assignmentsTextColor;
		userInfo.assignmentsLabelFillColor = tData.assignmentsLabelFillColor;
		userInfo.assignmentsTextFillColor = tData.assignmentsTextFillColor;
		userInfo.assignmentsLabelBold = tData.assignmentsLabelBold;
		userInfo.assignmentsLabelItalic= tData.assignmentsLabelItalic;
		userInfo.assignmentsLabelUnderline = tData.assignmentsLabelUnderline;
		userInfo.assignmentsTextBold = tData.assignmentsTextBold;
		userInfo.assignmentsTextItalic = tData.assignmentsTextItalic;
		userInfo.assignmentsTextUnderline = tData.assignmentsTextUnderline;

		userInfo.assessmentsFont = tData.assessmentsFont;
		userInfo.assessmentsSize = tData.assessmentsSize;
		userInfo.assessmentsColor = tData.assessmentsColor;
		userInfo.assessmentsHide = tData.assessmentsHide;
		userInfo.assessmentsTextFont = tData.assessmentsTextFont;
		userInfo.assessmentsTextSize = tData.assessmentsTextSize;
		userInfo.assessmentsTextColor = tData.assessmentsTextColor;
		userInfo.assessmentsLabelFillColor = tData.assessmentsLabelFillColor;
		userInfo.assessmentsTextFillColor = tData.assessmentsTextFillColor;
		userInfo.assessmentsLabelBold = tData.assessmentsLabelBold;
		userInfo.assessmentsLabelItalic= tData.assessmentsLabelItalic;
		userInfo.assessmentsLabelUnderline = tData.assessmentsLabelUnderline;
		userInfo.assessmentsTextBold = tData.assessmentsTextBold;
		userInfo.assessmentsTextItalic = tData.assessmentsTextItalic;
		userInfo.assessmentsTextUnderline = tData.assessmentsTextUnderline;
		
		userInfo.sunShow = tData.sunShow;
		userInfo.monShow = tData.monShow;
		userInfo.tueShow = tData.tueShow;
		userInfo.wedShow = tData.wedShow;
		userInfo.thuShow = tData.thuShow;
		userInfo.friShow = tData.friShow;
		userInfo.satShow = tData.satShow;

		var dayShows = 0;
		if (userInfo.sunShow == "Y") {dayShows++;};
		if (userInfo.monShow == "Y") {dayShows++;};
		if (userInfo.tueShow == "Y") {dayShows++;};
		if (userInfo.wedShow == "Y") {dayShows++;};
		if (userInfo.thuShow == "Y") {dayShows++;};
		if (userInfo.friShow == "Y") {dayShows++;};
		if (userInfo.satShow == "Y") {dayShows++;};
		
		switch (dayShows) {
			case 1: weekWidth = '100%'; break;
			case 2: weekWidth = '50%';  break;
			case 3: weekWidth = '33%';  break;
			case 4: weekWidth = '25%';  break;
			case 5: weekWidth = '20%';  break;
			case 6: weekWidth = '16%';  break;
			case 7: weekWidth = '14%';  break;
			default: weekWidth = '20%';	
		}

	}

	$('#applyWelcome1').click(function() {

		userInfo.firstName = $('#newFirstName').val();
		userInfo.lastName = $('#newLastName').val();
		userInfo.schoolName = $('#newSchoolName').val();
		userInfo.schoolDistrict = $('#newSchoolDistrict').val();
		
		userInfo.displayName = $.trim($('#newDisplayName').val());
		if (userInfo.displayName != "") {
			$('#nameLabel').html(userInfo.displayName);
		} else {
			$('#nameLabel').html(userInfo.emailAddress);
		}

		$('#welcome1').hide();

		if (userInfo.userType == "A") {
			userInfo.yearName = "2016-2017";
   			userInfo.firstDay = "09/01/2016";
   			userInfo.lastDay = "06/01/2017";
			userInfo.cycleDays = new Array();
			userInfo.classCycle = "oneWeek";
			newLayout1();
			updateDisplayList();
			userInfo.newClassNames = new Array();
			userInfo.newClassColors = new Array();
			userInfo.newClassDays = new Array();
			userInfo.holidayTitle = new Array();
			userInfo.holidayStart = new Array();
			userInfo.holidayEnd = new Array();
			addNewUser();
		} else {
			$('#welcome2').show();
			clearNotification('#welcome2ErrorMsg');
			$('input[name="newClassSchedule"]')[0].checked = true;
			$('#newCycleDays').val('2');
		}

	});	
	
	$('#applyWelcome2').click(function() {

		var valError = false;
		clearNotification('#welcome2ErrorMsg');
		
		var fDay = formatDateToSave($('#newFirstDay').val());
		var lDay = formatDateToSave($('#newLastDay').val());
		var yName = $.trim($('#newYearName').val());
		
		if (lDay == "") {
			valError = true;
			showNotification('#welcome2ErrorMsg', 'Enter a Last Day of Year');
		} else {
			if (valDate(lDay) == false) {
				valError = true;
				showNotification('#welcome2ErrorMsg', 'Enter a valid Last Day of Year');
			}
		}
	
		if (fDay == "") {
			valError = true;
			showNotification('#welcome2ErrorMsg', 'Enter a First Day of Year');
		} else {
			if (valDate(fDay) == false) {
				valError = true;
				showNotification('#welcome2ErrorMsg', 'Enter a valid First Day of Year');
			}
		}
	
		if (valError == false) {
			var result = compareDates(fDay, lDay);
			if (result != 0) {
				valError = true;
				if (result == 1) {
					showNotification('#welcome2ErrorMsg', 'First Day must come before Last Day');
				} else {
					showNotification('#welcome2ErrorMsg', 'First Day - Last Day date range cannot exceed one year');
				}
			}		
		}	
		
		if (yName == "") {
			valError = true;
			showNotification('#welcome2ErrorMsg', 'Enter a name for School Year');
		}

		var strDays = '';
		var tempDays = '';
		if ($('input[name="newClassSchedule"]')[2].checked == true) {
			strDays= $('#newCycleDays').val();
			if (isNaN(strDays)==true || $.trim(strDays)=='') {
				valError = true;
				showNotification('#welcome2ErrorMsg', 'Class Schedule - Cycle Days must be a number');
			} else {
				tempDays = parseInt(strDays,10);
				if (tempDays < 2 || tempDays > 20) {
					valError = true;
					showNotification('#welcome2ErrorMsg', 'Class Schedule - Cycle Days must be between 2 and 20');
				}
			}
		}
		
		if (valError == false)	{

 			userInfo.yearName = yName;
   			userInfo.firstDay = fDay;
   			userInfo.lastDay = lDay;

			userInfo.cycleDays = new Array();
			if ($('input[name="newClassSchedule"]')[0].checked == true) {
				userInfo.classCycle = 'oneWeek';
				newClassDays = 5;
			} else {
				if ($('input[name="newClassSchedule"]')[1].checked == true) {
					userInfo.classCycle = 'twoWeeks';
					newClassDays = 10;
				} else {
					userInfo.classCycle = strDays;
					newClassDays = tempDays;
					if (tempDays == 2) {
						userInfo.cycleDays[0] = 'A Day';
						userInfo.cycleDays[1] = 'B Day';
					} else {	
						var dayNum=1;
						for (var x=0; x<tempDays; x++) {
							userInfo.cycleDays[x] = 'Day ' + dayNum;
							dayNum++;	
						}
					}
				}
			}

			$('#welcome2').hide();
			$('#welcome3').show();
			clearNotification('#welcome3ErrorMsg');
		}

	});
	
	$('#cancelWelcome2').click(function() {
		$('#welcome2').hide();
		$('#welcome1').show();
		clearNotification('#welcome1ErrorMsg');
	});	
		
	$('#cancelWelcome3').click(function() {
		$('#welcome3').hide();
		$('#welcome2').show();
		clearNotification('#welcome2ErrorMsg');
	});	

	$('#cancelWelcome4').click(function() {
		$('#welcome4').hide();
		$('#welcome3').show();
		clearNotification('#welcome3ErrorMsg');
	});	
	
	$('#cancelWelcome5').click(function() {
		$('#welcome5').hide();
		$('#welcome3').show();
		clearNotification('#welcome4ErrorMsg');
	});	

	function addNewUser() {
		
		userInfo.yearId = 0;

		userInfo.viewLessons = "Y";
		userInfo.viewHomework = "Y";
		userInfo.viewNotes = "N";
		userInfo.viewTab4 = "N";
		userInfo.viewTab5 = "N";
		userInfo.viewTab6 = "N";
		userInfo.viewStrategies = "N";
		userInfo.viewStandards = "N";
		userInfo.viewEvents = "Y";
		userInfo.viewMyList = "N";
		userInfo.viewAssignments = "Y";
		userInfo.viewAssessments = "Y";
		userInfo.viewGrades = "N";
		
		userInfo.newPassword = '';
		userInfo.studentPassword = '';
		userInfo.sharedUserKey = '';
		userInfo.viewLength = 0;
		userInfo.showCount = "N";

		userInfo.sunShow = "N";
		userInfo.monShow = "Y";
		userInfo.tueShow = "Y";
		userInfo.wedShow = "Y";
		userInfo.thuShow = "Y";
		userInfo.friShow = "Y";
		userInfo.satShow = "N";
		userInfo.adjustToFit = "N";

		userInfo.sunCycle = "N";
		userInfo.monCycle = "Y";
		userInfo.tueCycle = "Y";
		userInfo.wedCycle = "Y";
		userInfo.thuCycle = "Y";
		userInfo.friCycle = "Y";
		userInfo.satCycle = "N";
		
		userInfo.termName = new Array();
		userInfo.termFirstDay = new Array();
		userInfo.termStartsOn = new Array();
		
		yearNames[0] = userInfo.yearName;

		if (userInfo.lessonFont == null) {userInfo.lessonFont = "2";}
		if (userInfo.lessonSize == null) {userInfo.lessonSize = "10";}
		if (userInfo.lessonColor == null) {userInfo.lessonColor = "#000000";}
		if (userInfo.lessonHide == null) {userInfo.lessonHide = "Y";}

		if (userInfo.tab2Font == null) {userInfo.tab2Font = "2";}
		if (userInfo.tab2Size == null) {userInfo.tab2Size = "10";}
		if (userInfo.tab2Color == null) {userInfo.tab2Color = "#000000";}
		if (userInfo.tab2Hide == null) {userInfo.tab2Hide = "N";}

		if (userInfo.tab3Font == null) {userInfo.tab3Font = "2";}
		if (userInfo.tab3Size == null) {userInfo.tab3Size = "10";}
		if (userInfo.tab3Color == null) {userInfo.tab3Color = "#000000";}
		if (userInfo.tab3Hide == null) {userInfo.tab3Hide = "N";}

		if (userInfo.tab4Font == null) {userInfo.tab4Font = "2";}
		if (userInfo.tab4Size == null) {userInfo.tab4Size = "10";}
		if (userInfo.tab4Color == null) {userInfo.tab4Color = "#000000";}
		if (userInfo.tab4Hide == null) {userInfo.tab4Hide = "N";}

		if (userInfo.tab5Font == null) {userInfo.tab5Font = "2";}
		if (userInfo.tab5Size == null) {userInfo.tab5Size = "10";}
		if (userInfo.tab5Color == null) {userInfo.tab5Color = "#000000";}
		if (userInfo.tab5Hide == null) {userInfo.tab5Hide = "N";}

		if (userInfo.tab6Font == null) {userInfo.tab6Font = "2";}
		if (userInfo.tab6Size == null) {userInfo.tab6Size = "10";}
		if (userInfo.tab6Color == null) {userInfo.tab6Color = "#000000";}
		if (userInfo.tab6Hide == null) {userInfo.tab6Hide = "N";}

		if (userInfo.strategiesFont == null) {userInfo.strategiesFont = "2";}
		if (userInfo.strategiesSize == null) {userInfo.strategiesSize = "10";}
		if (userInfo.strategiesColor == null) {userInfo.strategiesColor = "#000000";}
		if (userInfo.strategiesHide == null) {userInfo.strategiesHide = "N";}

		if (userInfo.sharedStandardsFont == null) {userInfo.sharedStandardsFont = "2";}
		if (userInfo.sharedStandardsSize == null) {userInfo.sharedStandardsSize = "10";}
		if (userInfo.sharedStandardsColor == null) {userInfo.sharedStandardsColor = "#000000";}
		if (userInfo.sharedStandardsHide == null) {userInfo.sharedStandardsHide = "N";}

		if (userInfo.myStandardsFont == null) {userInfo.myStandardsFont = "2";}
		if (userInfo.myStandardsSize == null) {userInfo.myStandardsSize = "10";}
		if (userInfo.myStandardsColor == null) {userInfo.myStandardsColor = "#000000";}
		if (userInfo.myStandardsHide == null) {userInfo.myStandardsHide = "N";}

		if (userInfo.schoolStandardsFont == null) {userInfo.schoolStandardsFont = "2";}
		if (userInfo.schoolStandardsSize == null) {userInfo.schoolStandardsSize = "10";}
		if (userInfo.schoolStandardsColor == null) {userInfo.schoolStandardsColor = "#000000";}
		if (userInfo.schoolStandardsHide == null) {userInfo.schoolStandardsHide = "N";}
		
		userInfo.eventEnabled = "Y";
		userInfo.eventLabel = "Event";
		
		if (userInfo.eventLabelFont == null) {userInfo.eventLabelFont = "2";}
		if (userInfo.eventLabelSize == null) {userInfo.eventLabelSize = "10";}
		if (userInfo.eventLabelColor == null) {userInfo.eventLabelColor = "#000000";}
		if (userInfo.eventLabelFillColor == null) {userInfo.eventLabelFillColor = "#C3D9FF";}
		
		if (userInfo.eventTextFont == null) {userInfo.eventTextFont = "2";}
		if (userInfo.eventTextSize == null) {userInfo.eventTextSize = "10";}
		if (userInfo.eventTextColor == null) {userInfo.eventTextColor = "#000000";}
		if (userInfo.eventTextFillColor == null) {userInfo.eventTextFillColor = "#FFFFFF";}

		userInfo.classHeadOrder = "1";
		userInfo.classHeadCentered = "N";
		
		userInfo.newPromoCode = $.trim($('#promoCode').val());

		userInfo.currentGrade = "0";
		userInfo.currentState = "CC";
		userInfo.currentSubject = "L";
		
		$('#reportStart').val(formatDateToShow(userInfo.firstDay));
		$('#reportEnd').val(formatDateToShow(userInfo.lastDay));
		
		$('#yearLabel').html(userInfo.yearName);

		loadSectionLabels();
		
		showLoading();
		$.post('updateSettings', userInfo, newUserAdded, "json");
		
	}	

	function newUserAdded(data) {

		// reset all userInfo fields that are only used for new user
		userInfo.newPromoCode = "";
		userInfo.newClassNames = new Array();
		userInfo.newClassColors = new Array();
		userInfo.newClassDays = new Array();
		userInfo.holidayTitle = new Array();
		userInfo.holidayStart = new Array();
		userInfo.holidayEnd = new Array();
		
		if (data.paidThroughDate != null) {
			userInfo.paidThroughDate = data.paidThroughDate;
			$('#paidThroughDate').html(userInfo.paidThroughDate);
		}

		$('.doButton').show();
		
		if (userInfo.schoolId == null || userInfo.schoolId == 0) {
			$('#commentsButton').hide();
		} else {
			$('#commentsButton').show();
		}
		
		if (userMode == "A") {
		
			$('#adminButton').show();

			action = "getTeacherList";

			showLoading();
			$.getJSON('getTeachersAll', 'getAdmin=Y', loadTeacherList);
		
		} else {
			
			$('#yearButton').show();

			userMode = "T";
			cursorType = "pointer";
			
			if (userInfo.userType == "B") {
				$('#modeLabel').html("Teacher");
				$('#modeButton').show();
			}
			
			$('#notesButton').show();

			jsonInfo = new Object();
			jsonInfo.userMode  = userMode;

			showLoading();
			$.getJSON('getClasses2', jsonInfo, loadClassList);
		}
			
	}
	
	$('#applyLogin').click(function() {

		var eAddress = $('#loginEmail').val();
		var valError = false;
			
		clearNotification('#loginErrorMsg');

		if (eAddress == "") {
			valError = true;
			showNotification('#loginErrorMsg', 'Please enter an Email Address');
			$('#loginEmail').focus();
		} else {
			if (valEmail(eAddress) == false) {
				valError = true;
				showNotification('#loginErrorMsg', 'Please enter a valid Email Address');
				$('#loginEmail').focus();
			}
		}

		var newPW = '';
		if (valError == false) {
			newPW = $('#loginPW').val();
			if (newPW == "") {
				valError = true;
				showNotification('#loginErrorMsg', 'Please enter a Password');
				$('#loginPW').focus();
			}
		}

		if (valError == false) {
	
			userLogin = new Object();
			userLogin.emailAddress = eAddress;
			userLogin.userPassword = newPW;	

			showLoading();
			$.getJSON('login', userLogin, loginResult);

		}		
		
		return false;
		
	});	
	
	function loginResult(data) {

		hideLoading();
		
		if (data.invalidLogin == "true") {
			showNotification('#loginErrorMsg', 'Email Address or Password is incorrect');
			$('#loginEmail').focus();
		} else if (data.systemDown == "true") {
			showNotification('#loginErrorMsg', 'Server down for maintenance. Please try again later.');
		} else if (data.error == "true") {
			$('#loginErrorMsg').html('Unable to connect to server. Please try again later.');
		} else {
			$.cookie('email',$('#loginEmail').val(),{expires:14});
			hideBox('#loginBox', 30)

			if (data.newCommentA != null) {
				userInfo.newCommentA = data.newCommentA;
			}
			
			if (data.alertMsg && data.alertMsg != '') {
				$('#alertMsg').html(data.alertMsg);
				$('#alertBar').show();
			}

			if (data.infoMsg != null && data.infoMsg != "") {
				$('#infoMsg').html(data.infoMsg);
				$('#infoBar').show();
			}

			if (data.paymentNeeded == "true") {
				paymentNeeded = true;
				showExpiredMsg();
			}

		}
			
	}
		
	$('#cancelLogin').click(function() {
		hideBox('#loginBox', 30)
	});	

	$('#applyStudentLogin').click(function() {
		
		clearNotification('#studentLoginErrorMsg');
		jsonInfo = new Object();
		jsonInfo.teacherEmail = $.trim($('#studentLoginEmail').val());
		jsonInfo.studentKey = $.trim($('#studentLoginKey').val());

		if (jsonInfo.teacherEmail == "") {
			showNotification('#studentLoginErrorMsg', 'Please enter an Email Address or Student ID');
		} else {
			if (jsonInfo.studentKey == "") {
				showNotification('#studentLoginErrorMsg', 'Please enter a Student Key');
			} else {
				showLoading();
				$.getJSON('loginStudent', jsonInfo, studentDone);
			}
		}

		return false;
		
	});	

	function studentDone(data) {

		hideLoading();

		if (data.invalidTeacherData == "true" || data.invalidLogin == "true") {
			showNotification('#studentLoginErrorMsg', 'Email Address or Student Key is incorrect');
		} else {
			hideBox('#studentLoginBox', 30)
		}	
	}

	$('#cancelStudentLogin').click(function() {
		hideBox('#studentLoginBox', 30)
	});	

	$('#cancelWelcome1').click(function() {
		window.location="welcome.html";
	});	
	
	$('#signout').click(function() {
		var displayItems = "";
		showLoading();
		$.post('signout', "displayItems=" + displayItems, signoutComplete, "json");
	});

	$('#signoutStudent').click(function() {
		showLoading();
		$.post('signoutStudent', "user=user", signoutComplete, "json");

	});
	
	function signoutComplete(data) {
		hideLoading();
		window.location="welcome.html";
	}
	
	function del_cookie(name) {
	   document.cookie = name + '=; expires=Thu, 01-Jan-70 00:00:01 GMT;';
	}
	
	function isiPhone() {
	    return (
	        (navigator.platform.indexOf("iPhone") != -1) ||
	        (navigator.platform.indexOf("iPod") != -1)
	    );
	}

	/** ** Load and display CLASS data *** */

	function loadClassSettings(data) {
	
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			currentClassId = data.classId;
			currentClassName = data.className;
			
			classInfo.classId = data.classId;
			classInfo.className = data.className;
			classInfo.classStartDate = data.classStartDate;
			classInfo.classEndDate = data.classEndDate;
			classInfo.color = data.color;
			
			// new
			classInfo.titleColor = data.titleColor;
			classInfo.titleSize = data.titleSize;
			classInfo.titleFont = data.titleFont;

			classInfo.classLabelBold = data.classLabelBold;
			classInfo.classLabelItalic = data.classLabelItalic;
			classInfo.classLabelUnderline = data.classLabelUnderline;

			classInfo.mondayStartTime = data.mondayStartTime;
			classInfo.mondayEndTime = data.mondayEndTime;
			classInfo.tuesdayStartTime = data.tuesdayStartTime;
			classInfo.tuesdayEndTime = data.tuesdayEndTime;
			classInfo.wednesdayStartTime = data.wednesdayStartTime;
			classInfo.wednesdayEndTime = data.wednesdayEndTime;
			classInfo.thursdayStartTime = data.thursdayStartTime;
			classInfo.thursdayEndTime = data.thursdayEndTime;
			classInfo.fridayStartTime = data.fridayStartTime;
			classInfo.fridayEndTime = data.fridayEndTime;
			classInfo.sundayStartTime = data.sundayStartTime;
			classInfo.sundayEndTime = data.sundayEndTime;
			classInfo.saturdayStartTime = data.saturdayStartTime;
			classInfo.saturdayEndTime = data.saturdayEndTime;

			classInfo.useSchoolStart = data.useSchoolStart;
			classInfo.useSchoolEnd = data.useSchoolEnd;

			classInfo.useSchoolStart = data.useSchoolStart;
			classInfo.useSchoolEnd = data.useSchoolEnd;
			
			classInfo.mondayTeach = data.mondayTeach;
			classInfo.tuesdayTeach = data.tuesdayTeach;
			classInfo.wednesdayTeach = data.wednesdayTeach;
			classInfo.thursdayTeach = data.thursdayTeach;
			classInfo.fridayTeach = data.fridayTeach;
			classInfo.sundayTeach = data.sundayTeach;
			classInfo.saturdayTeach = data.saturdayTeach;

			classInfo.wk2mondayStartTime = data.wk2mondayStartTime;
			classInfo.wk2mondayEndTime = data.wk2mondayEndTime;
			classInfo.wk2tuesdayStartTime = data.wk2tuesdayStartTime;
			classInfo.wk2tuesdayEndTime = data.wk2tuesdayEndTime;
			classInfo.wk2wednesdayStartTime = data.wk2wednesdayStartTime;
			classInfo.wk2wednesdayEndTime = data.wk2wednesdayEndTime;
			classInfo.wk2thursdayStartTime = data.wk2thursdayStartTime;
			classInfo.wk2thursdayEndTime = data.wk2thursdayEndTime;
			classInfo.wk2fridayStartTime = data.wk2fridayStartTime;
			classInfo.wk2fridayEndTime = data.wk2fridayEndTime;
			classInfo.wk2sundayStartTime = data.wk2sundayStartTime;
			classInfo.wk2sundayEndTime = data.wk2sundayEndTime;
			classInfo.wk2saturdayStartTime = data.wk2saturdayStartTime;
			classInfo.wk2saturdayEndTime = data.wk2saturdayEndTime;

			classInfo.wk2mondayTeach = data.wk2mondayTeach;
			classInfo.wk2tuesdayTeach = data.wk2tuesdayTeach;
			classInfo.wk2wednesdayTeach = data.wk2wednesdayTeach;
			classInfo.wk2thursdayTeach = data.wk2thursdayTeach;
			classInfo.wk2fridayTeach = data.wk2fridayTeach;
			classInfo.wk2sundayTeach = data.wk2sundayTeach;
			classInfo.wk2saturdayTeach = data.wk2saturdayTeach;

			classInfo.collaborateType = data.collaborateType;
			classInfo.collaborateSubjectId = data.collaborateSubjectId;
			classInfo.collaborateKey = data.collaborateKey;
			classInfo.collaborateTeacherEmail = data.collaborateTeacherEmail;
			classInfo.collaborateTeacherId = data.collaborateTeacherId;
			classInfo.collaborateYearId = data.collaborateYearId;
			
			if (cDays > 0) {
				for (var x=0; x<cDays; x++) {
					if (data.dTs[x] == null) {
						dayTeach[x] = 'Y';
						startTime[x] = '';
						endTime[x] = '';
					} else {
						dayTeach[x] = data.dTs[x].dT;
						startTime[x] = data.sTs[x].sT;
						endTime[x] = data.eTs[x].eT;
					}
				}
			}

			noClass = new Array();
           	if (data.noClass != null && data.noClass.length > 0) {
           		for (var z=0; z<data.noClass.length; z++) {
           			noClass[z] = data.noClass[z];
           		} 
		  	} else {
		  		noClass = null;
		  	}
       		loadNoClassTable();
			
			editClassSettings();
			
		}		
	}

	function loadMonth(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			var fromHeight = $(window).height() - 150;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#monthLessonBox').css({'height':fromHeight+'px'});

			var start = true;
			var end = false;
			var dayColor = '';

			for (var x=0; x<35; x++) {

				var day = data.days[x].date.substring(3,5);
				if (day.substring(0,1) == "0") {day = day.substring(1);}

				if (!end) {
					if (start) {
						if (parseInt(day,10) > 4) {
							dayColor = 'gray';
						} else {
							dayColor = '#0057C1';
							start = false;
						}
					} else {
						if (parseInt(day,10) == 1) {
							dayColor = 'gray';
							end = true;
						}
					}
				}

				$(displayCell[x]).html('');
				
				if (userInfo.showCount == "Y" && data.days[x].count != null && data.days[x].count > 0) {
					$(displayCellTitle[x]).html('<div style="background-color:#DBDFE8; padding-right:4px; padding-left:4px; font-size:9pt; float:none; color:' + dayColor + ';"><div style="float:left;">Day:' + data.days[x].count + '</div><div style="float:right;">' + day + '</div><div style="clear:both;"></div></div>');
				} else {
					$(displayCellTitle[x]).html('<p class="monthDay" style="color:' + dayColor + ';">' + day + '</p>');
				}

				if (data.days[x].cD != null && data.days[x].cD != '') {
					$(displayCellTitle[x]).append('<p class="schedTitle">' + data.days[x].cD + '</p>');
				}
				
				for (var z=0; z<data.days[x].objects.length; z++) {
					if (data.days[x].objects[z].type == "E") {
						loadDayEvent(data.days[x].objects[z],x,"M");
					} else {
						var hideDate = data.days[x].dayOfWeek + ' ' + formatDateToShow(data.days[x].date);
						loadDayLesson(data.days[x].objects[z],x,hideDate,"M",data.days[x].date);
					}
				}
			
			}
			
			$('.draggable').draggable({
				handle: '.dragIt',
				helper: 'clone',
			    start: function(e, ui) {
					currentId = this.id;
					loadLesson(currentId);
					lessonLoaded = "Y";
					ui.helper.html('<div style="padding:3px; width:170px; color:white; background-color:' + $(this).css('border-top-color') + ';"><table style="border-collapse:collapse;"><tr><td><img border="0" src="images/move.png" style="margin-right:5px;"></td><td style="width:100%"><strong>' + $('#lbClass').html() + '</strong><br/>' + $('#lbDate').html() + '</td></tr></table></div>');
			    },
			    cursorAt:{left:0,top:0}
			});

			$('.draggable').droppable({
				accept: ".draggable",
				 hoverClass: "addShadow",
				 drop : function (event, ui) {
					var str = this.id;
					var pos = str.indexOf('X');
					var moveSeq = str.substring(pos+1);
					var posE = str.indexOf('Z');
					moveClassId = str.substring(0,pos);
					var fullMoveDate = $('#' + moveClassId + moveSeq + 'D').html();
					var posSpace= fullMoveDate.indexOf(' ');
					moveExtraLesson = str.substring(posE+1);
					moveLessonDate = formatDateToSave(fullMoveDate.substring(posSpace+1));
					moveShowClass1 = $('#' + moveClassId + moveSeq + 'CN').html();
					moveShowDate1 = fullMoveDate.substring(posSpace+1);
					overwriteMoveLesson = "N";
					copyMoveLesson = "N";
					moveLesson();		
				}
			});
			
			$('.hiddenInfo').hide();

			for (var z=0; z<itemCount; z++) {
				var CBpId = '#CB' + partId[z];
				var hsPartId = '.' + partId[z];
				if ($(CBpId).prop('checked')) {showPart(hsPartId);} else {hidePart(hsPartId);}
			}	
			if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			for (var z=0; z<classCount; z++) {
				var CBcId = '#CBcId' + classId[z];
				var hsClassId = '.class' + classId[z];
				if ($(CBcId).prop('checked')) {showClassLessons(hsClassId);} else {hideClassLessons(hsClassId);}
			}

			if (userInfo.equalSize == "Y" && userInfo.adjustToFit == "N") {
				$('.lessonHeight').css({'height':userInfo.boxSize+'px'});
			} else {
				$('.lessonHeight').css({'height':'auto'});
			}
			
			if (plansHS == true) {
				$('.eventHS').show();
				$('.plansHS').show();
			} else {
				$('.eventHS').hide();
				$('.plansHS').hide();
			}
			
			haveMonth = true;
			showMonth();
			
			checkFirstTime();
			
		}		
		
	}

	function loadList(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listLessonBox').css({'height':fromHeight+'px'});
			
			currentClassId = data.classId;
			currentClassName = data.className;
			classInfo.classId = data.classId;

			var lessonNum = 1;
			todayLessonRow = 0;
			todayLessonPos = 0;
			
			$('#listTableBody').html('');

			for (var x=0; x<data.lessons.length; x++) {

				standardsText = '';
				
				if (data.lessons[x].classId != null) {

					var checkDate = toDate(data.lessons[x].date);
					if (todayLessonRow == 0 && currentDate <= checkDate) {
						todayLessonRow = x+1;
					}
					
					data.lessons[x].sequence = formatDateToSequence(data.lessons[x].date) + "Z" + data.lessons[x].extraLesson;
					
					var ls = '<tr class="lessonRow lessonRow' +  data.lessons[x].unitId + '" id="lr' + classInfo.classId + 'X' + data.lessons[x].sequence + '">';

					ls = ls + '<td valign="top" class="listDoIt" id="' + classInfo.classId + 'X' + data.lessons[x].sequence + '" style="cursor:' + cursorType + '; background-color:' + $('#lessonChangeClass').css('backgroundColor') + '; border:1px solid ' + $('#lessonChangeClass').css('backgroundColor') + '; border-top-width:0; border-bottom-color:white;">';
					ls = ls + '<img border="0" src="images/downwhite.png" style="position:relative; top:-4px; padding-left:5px; padding-right:5px;">';
					ls = ls + '</td>';
					
					ls = ls + '<td valign="top" class="listTablePM slCell" id="listTablePM' + lessonNum + '" style="background-color:#DBDFE8; color:#0057C1; font-size:12pt; cursor:' + cursorType + ';">-</td>';
					
					ls = ls + '<td valign="top" class="scCell">';
					ls = ls + '<div>' + lessonNum + '</div></td>';
					
					var unitLabel = "";
					if (data.lessons[x].unitId != 0) {
						for (var y=0; y<classUnits.length; y++) {
							if (data.lessons[x].unitId == classUnits[y].unitId) {
								if (classUnits[y].unitNum != "") {
									unitLabel += '<span style="background-color:' + $('#lessonChangeClass').css('backgroundColor') + '; color:white; padding-top:1px; padding-bottom:1px; padding-right:3px; padding-left:3px; margin-right:3px;">' + classUnits[y].unitNum + '</span>';
								}
								unitLabel += '<span class="listTableHS listTableHS' + lessonNum + '">' + classUnits[y].unitTitle + '</span>';
								break;
							}
						}
					}
					
					ls = ls + '<td valign="top" class="srCell">';
					ls = ls + '<div class="shared' + getSharedLine(data.lessons[x]) + 'UTL">' + unitLabel + '</div></td>';
					
					ls = ls + '<td valign="top" class="scCell">';
					ls = ls + '<div>' + formatDateToShow(data.lessons[x].date) + '</div></td>';

					ls = ls + '<td valign="top" class="scCell">';
					ls = ls + '<div>' + data.lessons[x].dayOfWeek + '</div></td>';

					ls = ls + '<td valign="top" class="srCell">';
					ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data.lessons[x]) + 'LTI" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'LTI' + 'L' + '"' + lessonTitleStyle + '>' + data.lessons[x].lessonTitle + '</div></div>';
					ls = ls + '<div class="listTableHS listTableHS' + lessonNum + '">' + loadLessonSections(data.lessons[x], "L") + '</div>';
					ls = ls + loadHiddenFields(data.lessons[x], "L");
					ls = ls + '<div style="display:none;" id="' + classInfo.classId + data.lessons[x].sequence + 'D">' + data.lessons[x].dayOfWeek + ' ' + formatDateToShow(data.lessons[x].date) + '</div>';

					ls = ls + '</td></tr>';

					$('#listTableBody').append(ls);

					hideEmptySections(data.lessons[x]);

					addTemplateClass(data.lessons[x]);
					
					lessonNum = lessonNum + 1;
					
				}
			
			}

			var ls = '<tr><td><img src="spacer.gif" width="20px" height="1"></td><td><img src="spacer.gif" width="20px" height="1"></td><td><img src="spacer.gif" width="35px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="150px" height="1"></td><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#listTableBody').append(ls);
			
			$('.emptyLesson').hide();
			$('.hiddenInfo').hide();
			for (var z=0; z<itemCount; z++) {
				var CBpId = '#CB' + partId[z];
				var hsPartId = '.' + partId[z];
				if ($(CBpId).prop('checked')) {showPart(hsPartId);} else {hidePart(hsPartId);}
			}	
			if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			haveList = true;
			listClassId = currentClassId;

			if ($('#listTablePM').html() == "Hide Detail") {
				$('.listTableHS').show();
				$('.listTablePM').html("-");
			} else {
				$('.listTableHS').hide();
				$('.listTablePM').html("+");
			}

			showList();
			
			checkFirstTime();
			
		}		
		
	}
	
	function loadToList(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			loadToLessons = true;
			
			var toHeight = $(window).height() - $('#importToLessonBox').offset().top - 20;
			
			if (toHeight < 200) {toHeight = 200;}
			
			$('#importToLessonBox').css({'height':toHeight+'px'});
			
			$('#importToBody').html("");
			
			var lessonNum = 1;
			todayToLessonRow = 0;
			todayToLessonPos = 0;
			
			for (var x=0; x<data.lessons.length; x++) {

				standardsText = '';

				if (data.lessons[x].classId != null) {
					
					var checkDate = toDate(data.lessons[x].date);
					if (todayToLessonRow == 0 && currentDate <= checkDate) {
						todayToLessonRow = x+1;
					}

					data.lessons[x].sequence = formatDateToSequence(data.lessons[x].date) + "Z" + data.lessons[x].extraLesson;

					ls = '<tr class="importDrop" id="' + data.lessons[x].classId + 'X' + data.lessons[x].sequence + '">';

					ls = ls + '<td></td>';

					ls = ls + '<td class="slCell" style="vertical-align:top;">';
					ls = ls + '<div>' + lessonNum + '</div>';
					ls = ls + '</td>';
					
					ls = ls + '<td class="scCell" style="vertical-align:top;">';
					ls = ls + '<div id="' + data.lessons[x].classId + data.lessons[x].sequence + 'D">' + data.lessons[x].dayOfWeek + ' ' + formatDateToShow(data.lessons[x].date) + '</div>';
					ls = ls + loadHiddenFields(data.lessons[x], "T");
					ls = ls + '</td>';

					ls = ls + '<td class="srCell" style="vertical-align:top;">';
					ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data.lessons[x]) + 'LTI" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'LTI' + 'T' + '"' + lessonTitleStyle + '>' + data.lessons[x].lessonTitle + '</div></div>';
					ls = ls + '<div class="toTableHS">' + loadLessonSections(data.lessons[x], "T") + '</div>';
					ls = ls + '</td></tr>';

					$('#importToBody').append(ls);
					
					hideEmptySections(data.lessons[x]);
					
					lessonNum = lessonNum + 1;

				}
			
			}
			
			var ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td><td><img src="spacer.gif" width="50px" height="1"></td><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#importToBody').append(ls);
			
			$('.importDrop').droppable({
				accept: ".importDrag",
				 hoverClass: "importDropHover",
				 drop : function (event, ui) {
					var str = this.id;
					var pos = str.indexOf('X');
					var moveSeq = str.substring(pos+1);
					var toClassId = str.substring(0,pos);
					var fullMoveDate = $('#' + toClassId + moveSeq + 'D').html();
					var posSpace= fullMoveDate.indexOf(' ');
					importToDate = formatDateToSave(fullMoveDate.substring(posSpace+1));
					if (paymentNeeded == false) {
						jsonInfo = new Object();
						jsonInfo.startDate = importFromDate;
						jsonInfo.endDate = importFromDate;
						jsonInfo.insertDate = importToDate;
						jsonInfo.sharedClassId = shareYears[copyYearPos].classes[copyClassPos].classId;
						jsonInfo.classId = classId[toClassPos];
						jsonInfo.monday = gMonday;
						jsonInfo.importDrag = true;
						hideMessage();
						showLoading();
						$.getJSON('importLessons', jsonInfo, lessonsImported);
					} else {
						showExpiredMsg();
					}
				}
			});
			
			$('.emptyLesson').hide();
			$('.hiddenInfo').hide();
			for (var z=0; z<itemCount; z++) {
				var CBpId = '#CB' + partId[z];
				var hsPartId = '.' + partId[z];
				if ($(CBpId).prop('checked')) {showPart(hsPartId);} else {hidePart(hsPartId);}
			}	
			if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			if ($('#toTablePM').html() == "Show Detail") {
				$('.toTableHS').hide();
			} else {
				$('.toTableHS').show();
			}
			
			showTodayToLesson();

		}		
		
	}

	function loadFromList(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			var fromHeight = $(window).height() - $('#importFromLessonBox').offset().top - 20;
			
			if (fromHeight < 200) {fromHeight = 200;}
			
			$('#importFromLessonBox').css({'height':fromHeight+'px'});
				
			$('#importFromBody').html('');
			
			var lessonNum = 1;
			todayFromLessonRow = 0;
			todayFromLessonPos = 0;

			for (var x=0; x<data.lessons.length; x++) {

				standardsText = '';

				if (data.lessons[x].classId != null) {

					var checkDate = toDate(data.lessons[x].date);
					if (todayFromLessonRow == 0 && currentDate <= checkDate) {
						todayFromLessonRow = x+1;
					}

					data.lessons[x].sequence = formatDateToSequence(data.lessons[x].date) + "Z" + data.lessons[x].extraLesson;
					
					ls = '<tr class="importDrag" id="' + data.lessons[x].classId + 'X' + data.lessons[x].sequence + '">';
					
					ls = ls + '<td></td>';

					ls = ls + '<td class="slCell" style="vertical-align:top;">';
					ls = ls + '<div>' + lessonNum + '</div>';
					ls = ls + '</td>';
					
					ls = ls + '<td class="scCell" style="vertical-align:top;">';
					ls = ls + '<div id="' + data.lessons[x].classId + data.lessons[x].sequence + 'D">' + data.lessons[x].dayOfWeek + ' ' + formatDateToShow(data.lessons[x].date) + '</div>';
					ls = ls + loadHiddenFields(data.lessons[x], "F");
					ls = ls + '</td>';

					ls = ls + '<td class="srCell" style="vertical-align:top;">';
					ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data.lessons[x]) + 'LTI" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'LTI' + 'F' + '"' + lessonTitleStyle + '>' + data.lessons[x].lessonTitle + '</div></div>';
					ls = ls + '<div class="fromTableHS">' + loadLessonSections(data.lessons[x], "F") + '</div>';
					ls = ls + '</td></tr>';

					$('#importFromBody').append(ls);
					
					hideEmptySections(data.lessons[x]);
					
					lessonNum = lessonNum + 1;

				}
			
			}

			var ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td><td><img src="spacer.gif" width="50px" height="1"></td><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#importFromBody').append(ls);
			
			$('.importDrag').draggable({
	            helper: function(){
					var str = this.id;
					var pos = str.indexOf('X');
					var moveSeq = str.substring(pos+1);
					var posE = str.indexOf('Z');
					var fromClassId = str.substring(0,pos);
					var fullMoveDate = $('#' + fromClassId + moveSeq + 'D').html();
					var posSpace= fullMoveDate.indexOf(' ');
					var importFromClassName = shareYears[copyYearPos].classes[copyClassPos].className;
	                var ls = '<div style="padding:5px; width:170px; color:white; background-color:#0057C1;"><strong>' + importFromClassName + '</strong><br/>' + fullMoveDate.substring(posSpace+1) + '</div>';
	                return $(ls);
	            },
			    start: function(e, ui) {
					var str = this.id;
					var pos = str.indexOf('X');
					var moveSeq = str.substring(pos+1);
					var posE = str.indexOf('Z');
					var fromClassId = str.substring(0,pos);
					var fullMoveDate = $('#' + fromClassId + moveSeq + 'D').html();
					var posSpace= fullMoveDate.indexOf(' ');
					importFromDate = formatDateToSave(fullMoveDate.substring(posSpace+1));
			    },
			    cursorAt:{left:0,top:0},
			    cursor:"move"
			});
			
			$('.emptyLesson').hide();
			$('.hiddenInfo').hide();
			for (var z=0; z<itemCount; z++) {
				var CBpId = '#CB' + partId[z];
				var hsPartId = '.' + partId[z];
				if ($(CBpId).prop('checked')) {showPart(hsPartId);} else {hidePart(hsPartId);}
			}	
			if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			if ($('#fromTablePM').html() == "Show Detail") {
				$('.fromTableHS').hide();
			} else {
				$('.fromTableHS').show();
			}
			
			showTodayFromLesson();

		}		
		
	}

	function loadEvents(data) {

		currentEventDatastoreId = '';
		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				var fromHeight = $(window).height() - 220;
				if (fromHeight < 200) {fromHeight = 200;}
				$('#listEventBox').css({'height':fromHeight+'px'});
				
				haveEvents = true;
				hideBox('#editEventBox', 10);
				hideBox('#importBoxEvent', 30);
				
				var eL = 'font-weight: '+(userInfo.eventLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.eventLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.eventLabelUnderline=="Y"?'underline':'normal')+';';
				var eT = 'font-weight: '+(userInfo.eventlessonTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.eventTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.eventTextUnderline=="Y"?'underline':'normal')+';';

				$('#eventTableBody').html("");
		
				todayEventRow = 0;
				todayEventPos = 0;
				
				if (data.events.length != null) {
		
					for (var x=0; x<data.events.length; x++) {
						var eventDatastoreId = data.events[x].eventId != 0 ? data.events[x].eventId + '-' + data.events[x].currentDate.replace(/\W/g, '') : 0;
						var eventFormat = getEventFormat(data.events[x]);
						var eventTitle = "";
						if (data.events[x].eventTitle != null) {eventTitle = data.events[x].eventTitle;}
						
						var checkDate = toDate(data.events[x].currentDate);
						if (todayEventRow == 0 && currentDate <= checkDate) {
							todayEventRow = x+1;
						}
						
						ls = '<tr class="pickRow eventList" style="cursor:pointer;" id="' + eventDatastoreId + '">';
						ls = ls + '<td class="slCell"><div id="' + eventDatastoreId + 'D">' + formatDateToShow(data.events[x].currentDate) + '</div>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'A">' + formatDateToShow(data.events[x].eventDate) + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'T">' + formatDateToShow(data.events[x].endDate) + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'R">' + data.events[x].repeats + '</p>';
						var privateFlag = "N";
						if (data.events[x].privateFlag == true) {privateFlag = "Y";}
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EPF">' + privateFlag + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EST">' + data.events[x].eventStartTime + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EET">' + data.events[x].eventEndTime + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ET">' + eventTitle + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ES">' + data.events[x].schoolId + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'C">' + data.events[x].noCycle + '</p>';
						ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EDS"></p></td>';
						
						ls = ls + '<td class="srCell">';

						if (eventTitle != "") {
							ls = ls + '<div style="margin-bottom:2px;" style="'+eL+'background-color:' + eventFormat.titleFillColor + '; font-family:'+ eventFormat.titleFontFamily +'; font-size: '+ eventFormat.titleFontSize +'pt; color:'+ eventFormat.titleFontColor +';">' + eventTitle + '</div>';
						}
						
						if ($.trim(data.events[x].eventText) != '') {
							ls = ls + '<div class="eventHS" id="' + eventDatastoreId + 'E" style="' + eT + 'font-family:' + eventFormat.bodyFontFamily + '; font-size:' + eventFormat.bodyFontSize + 'pt; color:' + eventFormat.bodyFontColor + '; background-color:' + eventFormat.bodyFillColor + ';">' + data.events[x].eventText + '</div>';
						}
						
						
						if (data.events[x].noSchool == true) {
							ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S">(No School)</p>';
						} else {
							ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S"></p>';			
						}
										
						ls = ls + '</td></tr>';
						$('#eventTableBody').append(ls);
						
						var eventAttachments = data.events[x].attachments;
						if (eventAttachments && eventAttachments.length > 0) {
							var $atch = $('<div><p style="margin-top: 10px;">Attachments:</p></div>');
							$.each(eventAttachments, function() {
								$atch.append($('<p/>').append(
									$('<a/>').attr({
										target : '_blank',
										href : this.url
									})
									.text(this.name)
									.click(function(e){ 
										e.stopPropagation(); 
									})
								));
							});
							$('#' + eventDatastoreId + 'E').after($atch);
						}
					
						
						var ed = data.events[x];
						ed.format = eventFormat;
						$('#' + eventDatastoreId + 'EDS').data(ed);
						
					}
				}
	
				$('.hiddenInfo').hide();
				
				var ls = '<tr><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="300px" height="1"></td></tr>';
				$('#eventTableBody').append(ls);
				
				if (action == "getEvents") {
					showEvents();
				} else {   
					// new event or an event changed, all views need refreshed
					haveWeeks = false;
					haveMonth = false;
					haveList = false;
					haveSearch = false;
					if (window.location.hash == "#event") {
						showAction();
					} else {
						getLessons();
					}
				}
			}
		}	
	}

/** ** Display Previous Week *** */

	function showPrevWeek() {

		if (userInfo.equalSize == "Y") {
			$(displayWeekE[currentWeek]).hide();
		} else {
			$(displayWeek[currentWeek]).hide();
		}
		
		currentWeek = currentWeek - 1;

		if (userInfo.sunShow == "Y") {currentDay = (currentWeek * 7);}
		else if (userInfo.monShow == "Y") {currentDay = (currentWeek * 7) + 1;}
		else if (userInfo.tueShow == "Y") {currentDay = (currentWeek * 7) + 2;}
		else if (userInfo.wedShow == "Y") {currentDay = (currentWeek * 7) + 3;}
		else if (userInfo.thuShow == "Y") {currentDay = (currentWeek * 7) + 4;}
		else if (userInfo.friShow == "Y") {currentDay = (currentWeek * 7) + 5;}
		else {currentDay = (currentWeek * 7) + 6;}

		if (userInfo.equalSize == "Y") {
			$(displayWeekE[currentWeek]).show();
		} else {
			$(displayWeek[currentWeek]).show();
		}
		hideDays();
	}

/** ** Display Next Week *** */
	
	function showNextWeek() {

		if (userInfo.equalSize == "Y") {
			$(displayWeekE[currentWeek]).hide();
		} else {
			$(displayWeek[currentWeek]).hide();
		}

		currentWeek = currentWeek + 1;
		currentDay = (currentWeek * 7) + 1;

		checkCurrentDay();
		
		if (userInfo.equalSize == "Y") {
			$(displayWeekE[currentWeek]).show();
		} else {
			$(displayWeek[currentWeek]).show();
		}
		hideDays();
	}

/** ** Display Previous Day *** */

	function showPrevDay() {

		$(displayDay[currentDay]).hide();

		currentDay = currentDay - 1;
		if (currentDay < 14) {currentWeek = 1;}
		if (currentDay < 7) {currentWeek = 0;}

		checkCurrentDayPrev();

		if (currentDay < 0) {

			getMonday.setDate(getMonday.getDate()-14);
			gDate = getMonday.getDate();
			gMonth = getMonday.getMonth(); gMonth++;
			gYear = getMonday.getFullYear();
			gMonday = gMonth + "/" + gDate + "/" + gYear;
	
			action = "showPrevDay";
			haveWeeks = false;
			getLessons();
		
		} else {

			$(displayDay[currentDay]).show();
			
		}
	}

/** ** Display Next Day *** */
	
	function showNextDay() {

		$(displayDay[currentDay]).hide();

		currentDay = currentDay + 1;
		if (currentDay >= 7) {currentWeek = 1;}
		if (currentDay >= 14) {currentWeek = 2;}

		checkCurrentDay();
		
		if (currentDay > 20) {

			getMonday.setDate(getMonday.getDate()+14);
			gDate = getMonday.getDate();
			gMonth = getMonday.getMonth(); gMonth++;
			gYear = getMonday.getFullYear();
			gMonday = gMonth + "/" + gDate + "/" + gYear;
	
			action = 'showNextDay';
			haveWeeks = false;
			getLessons();
		
		} else {

			$(displayDay[currentDay]).show();
			
		}

		
	}

	function showLogin() {

		hideLoading();

		action = "login";

		if (userMode == 'S') {
			showBox('#studentLoginBox', 30);
		} else {
			showBox('#loginBox', 30);
			if ($.cookie('email') != null) {
				$('#loginEmail').val($.cookie('email'));
				$('#loginPW').focus();
			} else {
				$('#loginEmail').focus();
			}
		}
		
	}
	
	$("input[name='classSchedule']").click(function() {
	
		if ($('input[name="classSchedule"]')[0].checked == true) {
			$('#cycleDays').prop("disabled", true);
			$('#pickNames').prop("disabled", true);
			$('#editNamesBox').hide();
			$('#schoolTermsBox').hide();
		} else {
			if ($('input[name="classSchedule"]')[1].checked == true) {
				$('#cycleDays').prop("disabled", true);
				$('#pickNames').prop("disabled", true);
				$('#editNamesBox').hide();
				$('#schoolTermsBox').show();
			} else {
				$('#cycleDays').prop("disabled", false);
				$('#pickNames').prop("disabled", false);
				$('#schoolTermsBox').show();
			}
		}

     });

	 
	$('#pickNames').click(function() {

		$('#settingsErrorMsg').html('');
		valError = false;
		
		var strDays= $.trim($('#cycleDays').val());
		if (isNaN(strDays)==true || $.trim(strDays)=='') {
			valError = true;
			$('#settingsErrorMsg').html('Class Schedule - Cycle Days must be a number');
		} else {
			var tempDays = parseInt(strDays,10);
			if (tempDays < 2 || tempDays > 20) {
				valError = true;
				$('#settingsErrorMsg').html('Class Schedule - Cycle Days must be between 2 and 20');
			} else {
				$('#editNamesBox').show();
				
				var ls;
				var dayNum=1;
				var x=0;
				
				ls = '<tr><td width="50"><p align="right" style="line-height:25px;">Day ' + dayNum + '</p></td>';
				ls = ls + '<td style="text-align:left;" width="222"><input type="text" id="dayName' + x + '" size="30" title="Enter name"></td></tr>';
				$('#namesTable').html(ls);

				ls = '#dayName' + x;
				$(ls).focus();
				if (dayNames[x] != null) {
					$(ls).val(dayNames[x]);
				} else {
					if (tempDays == 2) {
						$(ls).val('A Day');
					} else {	
						$(ls).val('Day ' + dayNum);
					}
					dayNames[x] = $(ls).val();
				}
				
				dayNum++;
				
				for (x=1; x<tempDays; x++) {
					ls = '<tr><td width="50"><p align="right" style="line-height:25px;">Day ' + dayNum + '</p></td>';
					ls = ls + '<td style="text-align:left;" width="222"><input type="text" id="dayName' + x + '" size="30" title="Enter name"></td></tr>';
					$('#namesTable').append(ls);
					ls = '#dayName' + x;
					if (dayNames[x] != null) {
						$(ls).val(dayNames[x]);
					} else {
						if (tempDays == 2) {
							$(ls).val('B Day');
						} else {	
							$(ls).val('Day ' + dayNum);
						}
						dayNames[x] = $(ls).val();
					}
					dayNum++;
				}
			}
		}

	});	
	
	$('#mailLink').click(function() {
	
		$.getJSON('emailStudentURL', {}, function(data) {
			if (data.notLoggedIn == "true") {
				showLogin();
			} else if (data.error == "true") {
				showErrorMsg();
			} else {
				showMessage('The link has been sent to ' + userInfo.emailAddress);
			}
		});
		
	});
	
	$('.classRow').live('click', function(e) {

// $('.classRow').css({'background-color':'white'});
// $(this).css({'background-color':'#E8EEF7'});
		currentClassId = this.id;
		
		var str = '#' + currentClassId + 'CSD';
		currentClassStart = $(str).html();
		
		str = '#' + currentClassId + 'CED';
		currentClassEnd = $(str).html();
		
		hideLists();
		showLoading();
		$.getJSON('getClass', 'classId='+currentClassId, loadClassSettings);

	});
	
	$('.myStandardRow').live('click', function(e) {

		currentMyStandardId = this.id;
		
		$('#myListAction').show();
		
		hideLists();
		editMyList();

	});

	$('.templateRow').live('click', function(e) {

		currentTemplateId = this.id;
		hideLists();
		editTemplate();

	});

	$('.teacherRow').live('click', function(e) {

		$('.teacherRow').css({'background-color':'white'});
		$(this).css({'background-color':'#E8EEF7'});
		editTeacherId = this.id;

		hideLists();

		var xls = "#" + this.id + "X";
	
		$('#teacherOptionList').css({'top':$(xls).offset().top+26,'left':$(xls).offset().left-1}).show();
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}

	});

	
	$('#addTerm').click(function() {
		
		var newPos;
		if (terms == null) {
			terms = new Array();
			newPos = 0;
		} else {
			newPos = terms.length;
		}

		terms[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="nameTerm' + newPos + '" size="20"></td>';
		ls = ls + '<td><input type="text" id="firstDayTerm' + newPos + '" size="10"></td>';
		ls = ls + '<td><select id="startsOnTerm' + newPos + '"></select></td>';
		ls = ls + '<td><img class="removeTerm" id="t' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#termsTableBody').append(ls);
		$('#termsTableHead').show();
		
		var firstDayTerm = '#firstDayTerm' + newPos;
		$(firstDayTerm).datepicker({});
		if (userInfo.dateFormat == 2) {
			$(firstDayTerm).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
		} else {
			$(firstDayTerm).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
		}

		var startsOnTerm = '#startsOnTerm' + newPos;
		fillTermStartsOn(startsOnTerm);

	});

	$('.removeTerm').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substring(1);
		var termPos = parseInt(temp2,10);
 
		for (var x=0; x<terms.length; x++) {
			var nameTerm = '#nameTerm' + x;
			var firstDayTerm = '#firstDayTerm' + x;
			var startsOnTerm = '#startsOnTerm' + x;
			terms[x].name = $(nameTerm).val();
			terms[x].firstDay = formatDateToSave($(firstDayTerm).val());
			terms[x].startsOn = $(startsOnTerm).val();
		}
		
		terms.splice(termPos, 1);

		loadTermsTable();

	});
	
	function fillTermStartsOn(startsOnTerm) {	
		
		$(startsOnTerm).html('<option value="0">Not Reset</option>');
		
		if ($('input[name="classSchedule"]')[1].checked) {
			$(startsOnTerm).append('<option value="1">Week 1</option>');
			$(startsOnTerm).append('<option value="2">Week 2</option>');
		} else {
			var strDays= $.trim($('#cycleDays').val());
			var tempDays = parseInt(strDays,10);
			for (var z=1; z<=tempDays; z++) {
				$(startsOnTerm).append('<option value="' + z + '">Day ' + z + '</option>');
			} 
		}

	}	

	function showExpiredMsg() {
		showBox('#expireMsg', 30);
	}
	
	function showExpiring() {
		showBox('#expiringMsg', 30);
	}

	$('#closeExpireMsg').click(function() {
		hideBox('#expireMsg', 30);
	});
	
	$('#closeSuspendAccount').click(function() {
		hideBox('#msgSuspendAccount', 30);
	});
	
	$('#closeExpireMsg2').click(function() {
		hideBox('#expiringMsg', 30);
	});
	
	function showErrorMsg() {
		showErrorBox('Sorry, an error has occurred. Please try again. If the error continues, please contact us at 888-205-5528 or support@planbook.com');
	}
	
	function showLessonErrorMsg() {
		showErrorBox('Sorry, an error has occurred. Please try again. If the error continues, please contact us at 888-205-5528 or support@planbook.com');
	}
	
	
	$('#eventDate, #eventEndDate').change(function() {	
		validateStartEndDates('#eventDate', '#eventEndDate');
		onEventDatesChanged();
	});
	
	function onEventDatesChanged() {
		var start = $('#eventDate').val();
		var end = $('#eventEndDate').val();
		if (start == end) {
			$('#removedDays').hide();
			$('#noEventTableBody').html('');
		} else {
			var eventData = $(currentEventData).data();
			$('#removedDays').show();
			$('#noEventTableBody').html('');
			if (eventData && eventData.noEventDays) {
				$.each(eventData.noEventDays, function() {
					addNoEvent(null, this);
				});
			}
		}
	}

	$('#templateNavButton').click(function() {
		browserButton = false;
		window.location.hash = "template";
		showTemplates();
	});

	function showTemplates() {
		classPickType = 'template';
		if (haveTemplates == false) {
			getTemplates();
		} else {
			hideAll();
			$('#templateView').show();
		}
	}
	
	$('#teacherListButton').click(function() {
		browserButton = false;
		window.location.hash = "teachers";
		showTeachers();
	});

	$('#standardsReportButton, #adminReportButton').click(function() {
		browserButton = false;
		window.location.hash = "standards";
		showStandardsReport();
	});
	
	function showStandardsReport() {
		
		hideAll();
		$('#standardsReport').show();

		var fromHeight = $(window).height() - $('#criteriaBox').offset().top - 170;
		if (fromHeight < 200) {fromHeight = 200;}
		$('#standardsReportBox').css({'height':fromHeight+'px'});
		$('#standardsReportAdminBox').css({'height':fromHeight+'px'});
		
		if (haveStandards == false) {
		
			$('#reportGrade').val(userInfo.currentGrade);
			$('#reportState').val(userInfo.currentState);
			$('#reportSubject').val(userInfo.currentSubject);
			oneSubject = true;
			
			if (userMode == "A" && standardsTeacherId == 0) {
				$('#standardsReportAdminBox').show();
				$('#standardsReportBox').hide();
				$('#reportReturn').hide();
				$('#reportSubject').val("VA2");
				oneSubject = false;
			} else {
				$('#standardsReportBox').show();
				if (userMode == "A") {$('#reportReturn').show();} else {$('#reportReturn').hide();}
				$('#standardsReportAdminBox').hide();
			}
			
			haveStandards = true;
			
			reportView();
			
		}

	}

	$('#standardNavButton, #schoolListButton').click(function() {
		browserButton = false;
		window.location.hash = "mylist";
		showStandards();
	});
	
	$('#editTab1').click(function() {
		
		$('#editTab1').addClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').show();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();
		
		tinymce.execCommand('mceFocus',false,'lessonText');
		
	});

	$('#editTab2').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').addClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').show();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

		tinymce.execCommand('mceFocus',false,'homeworkText');
		
	});
	
	$('#editTab3').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').addClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').show();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

		tinymce.execCommand('mceFocus',false,'notesText');
		
	});

	$('#editTab4').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').addClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').show();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

		tinymce.execCommand('mceFocus',false,'tab4Text');
		
	});
	
	$('#editTab5').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').addClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').show();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

		tinymce.execCommand('mceFocus',false,'tab5Text');
		
	});
	
	$('#editTab6').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').addClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').show();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

		tinymce.execCommand('mceFocus',false,'tab6Text');
		
	});
	
	$('#editMyStandardsTab').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').addClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').show();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

	});
	
	$('#editSchoolStandardsTab').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').addClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').show();
		$('#strategiesTextBox').hide();

	});

	$('#editStandardsTab').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').removeClass('current');
		$('#editStandardsTab').addClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').show();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').hide();

	});

	$('#editStrategiesTab').click(function() {
		
		$('#editTab1').removeClass('current');
		$('#editTab2').removeClass('current');
		$('#editTab3').removeClass('current');
		$('#editTab4').removeClass('current');
		$('#editTab5').removeClass('current');
		$('#editTab6').removeClass('current');
		$('#editStrategiesTab').addClass('current');
		$('#editStandardsTab').removeClass('current');
		$('#editMyStandardsTab').removeClass('current');
		$('#editSchoolStandardsTab').removeClass('current');

		$('#lessonTextBox').hide();
		$('#homeworkTextBox').hide();
		$('#notesTextBox').hide();
		$('#tab4TextBox').hide();
		$('#tab5TextBox').hide();
		$('#tab6TextBox').hide();
		$('#standardsTextBox').hide();
		$('#myStandardsTextBox').hide();
		$('#schoolStandardsTextBox').hide();
		$('#strategiesTextBox').show();

	});
	
	function getEventFormat(event) {
		var ef = {};
		
		if (event.titleFont && event.titleFont != '') {
			ef.titleFontFamily = fontTypes[event.titleFont];
			ef.titleFont = event.titleFont;
		} else {
			ef.titleFontFamily = fontTypes[userInfo.eventLabelFont];
			ef.titleFont = userInfo.eventLabelFont;
		}
		
		if (event.titleColor && event.titleColor != '') {
			ef.titleFontColor = event.titleColor;
		} else {
			ef.titleFontColor = userInfo.eventLabelColor;
		}
		
		if (event.titleSize && event.titleSize != '') {
			ef.titleFontSize = event.titleSize;
		} else {
			ef.titleFontSize = userInfo.eventLabelSize;
		}
		
		if (event.titleFillColor && event.titleFillColor != '') {
			ef.titleFillColor = event.titleFillColor;
		} else {
			ef.titleFillColor = userInfo.eventLabelFillColor;
		}
		
		if (event.titleBold && event.titleBold != '') {
			ef.titleBold = event.titleBold;
		} else {
			ef.titleBold = userInfo.eventLabelBold;
		}
		
		if (event.titleItalic && event.titleItalic != '') {
			ef.titleItalic = event.titleItalic;
		} else {
			ef.titleItalic = userInfo.eventLabelItalic;
		}
		
		if (event.titleUnderline && event.titleUnderline != '') {
			ef.titleUnderline = event.titleUnderline;
		} else {
			ef.titleUnderline = userInfo.eventLabelUnderline;
		}
		
		ef.titleBold = ef.titleBold == 'Y' ? 'bold' : 'normal';
		ef.titleItalic = ef.titleItalic == 'Y' ? 'italic' : 'normal';
		ef.titleUnderline = ef.titleUnderline == 'Y' ? 'underline' : 'normal';
		
		if (event.bodyFont && event.bodyFont != '') {
			ef.bodyFontFamily = fontTypes[event.bodyFont];
			ef.bodyFont = event.bodyFont;
		} else {
			ef.bodyFontFamily = fontTypes[userInfo.eventTextFont];
			ef.bodyFont = userInfo.eventTextFont;
		}
		
		if(event.bodyColor && event.bodyColor != '') {
			ef.bodyFontColor = event.bodyColor;
		} else {
			ef.bodyFontColor = userInfo.eventTextColor;
		}
		
		if (event.bodySize && event.bodySize != '') {
			ef.bodyFontSize = event.bodySize;
		} else {
			ef.bodyFontSize = (userInfo.eventTextSize == null 
					|| userInfo.eventTextSize == undefined 
					|| userInfo.eventTextSize == "" 
					|| userInfo.eventTextSize == "undefined") 
					? '10' : userInfo.eventTextSize;
		}
			
		if (event.bodyFillColor && event.bodyFillColor != '') {
			ef.bodyFillColor = event.bodyFillColor;	
		} else {
			ef.bodyFillColor = userInfo.eventTextFillColor;	
		}
		
		if (event.bodyBold && event.bodyBold != '') {
			ef.bodyBold = event.bodyBold;
		} else {
			ef.bodyBold = userInfo.eventlessonTextBold;
		}
		
		if (event.bodyItalic && event.bodyItalic != '') {
			ef.bodyItalic = event.bodyItalic;
		} else {
			ef.bodyItalic = userInfo.eventTextItalic;
		}
		
		if (event.bodyUnderline && event.bodyUnderline != '') {
			ef.bodyUnderline = event.bodyUnderline;
		} else {
			ef.bodyUnderline = userInfo.eventTextUnderline;
		}
		
		ef.bodyBold = ef.bodyBold == 'Y' ? 'bold' : 'normal';
		ef.bodyItalic = ef.bodyItalic == 'Y' ? 'italic' : 'normal';
		ef.bodyUnderline = ef.bodyUnderline == 'Y' ? 'underline' : 'normal';
		
		return ef;
	}
	
	function loadDayEvent(data,x,viewType) {
		
		var eventDatastoreId = data.eventId != 0 ? data.eventId + '-' + data.currentDate.replace(/\W/g, '') : 0;
		var eventFormat = getEventFormat(data);
		
		var padLeft = "";
		var headAlign = "center";
		if (userInfo.classHeadCentered == "N") { 
			headAlign = "left";
		}

		var privateFlag = "N";
		if (data.privateFlag == true) {privateFlag = "Y";}

		var eventTitle2 = "";
		if (data.eventTitle != null) {eventTitle2 = data.eventTitle;}
		
		var eventTitle = "Event";
		if (eventTitle2 != "") {
			eventTitle = eventTitle2;
		}
		
		var timeString = '';
		if (data.startTime != null && data.startTime != '') {timeString = data.startTime;}
		if (data.endTime != null && data.endTime != '')     {timeString = timeString + '-' + data.endTime;}
		var eventHeadTime = timeString.split(' ').join('').toLowerCase();
		
		var eventHeadInfo = '';
		if (userInfo.classHeadOrder == "1") {
			eventHeadInfo = '<span class="allNames"' + padLeft + '>' + eventTitle + ' </span><span class="allTimes">' + eventHeadTime + '</span>';
		} else {
			eventHeadInfo = '<span class="allTimes"' + padLeft + '>' + eventHeadTime + ' </span><span class="allNames">' + eventTitle + '</span>';
		}

		var eventDoInfo = '';
		var tds = '<td class="head' + eventDatastoreId + '" style="display:none;">';
		var tde = '</td>';
		var googleLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/g-plus-icon.png" style="vertical-align:top; margin:3px 1px 3px 1px;"></div>';
		var actionLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:' + cursorType + ';" class="lessonDoIt" id="edid' + eventDatastoreId + '"><img border="0" src="images/downarrow-icon.png" style="vertical-align:top; margin:4px 1px 4px 1px;"></div>';
		
		if (userMode == "T") {
			if (eventDatastoreId == 0) {
				eventDoInfo = '<td>' + googleLS + tde;
			} else {
				eventDoInfo = tds + actionLS + tde;
			}
		} else {
			eventDoInfo = '<td></td>';
		}
		
		var ls = '';
		if (eventDatastoreId == 0) {
			ls = '<div class="event" style="cursor:' + cursorType + '; border-color:' + data.eventColor + ';" id="' + eventDatastoreId + '" data-teacher="' + data.teacherId + '">';
		} else {
			ls = '<div class="event" style="cursor:' + cursorType + '; border-color:' + eventFormat.titleFillColor + ';" id="' + eventDatastoreId + '" data-teacher="' + data.teacherId + '">';
		}

		var eL = 'font-weight: '+ eventFormat.titleBold +'; font-style: '+ eventFormat.titleItalic +'; text-decoration: '+ eventFormat.titleUnderline +';';
		var eT = 'font-weight: '+ eventFormat.bodyBold +'; font-style: '+ eventFormat.bodyItalic +'; text-decoration: '+ eventFormat.bodyUnderline +';';
		
		if (eventDatastoreId == 0) {
			ls = ls + '<div class="lessonHead" style="'+eL+'background-color:' + data.eventColor + '; border-color:' + data.eventColor + '; font-family:'+ eventFormat.titleFontFamily +'; font-size: '+ eventFormat.titleFontSize +'pt; color:#FFFFFF;">';
		} else {
			ls = ls + '<div class="lessonHead" style="'+eL+'background-color:' + eventFormat.titleFillColor + '; border-color:' + eventFormat.titleFillColor + '; font-family:'+ eventFormat.titleFontFamily +'; font-size: '+ eventFormat.titleFontSize +'pt; color:'+eventFormat.titleFontColor+';">';
		}
		
		ls = ls + '<table style="border-collapse:collapse; width:100%;"><tr valign="top"><td style="width:100%;">';
		
		ls = ls + '<div class="eventHeadDoIt" id="ehid' + eventDatastoreId + '" style="width:100%; cursor:' + cursorType + '; text-align:' + headAlign + ';">' + eventHeadInfo + '</div>';
		
		ls = ls + '</td>' + eventDoInfo + '</tr></table></div>';
		
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'D' + viewType + '">' + data.currentDate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'A' + viewType + '">' + formatDateToShow(data.eventDate) + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'T' + viewType + '">' + formatDateToShow(data.endDate) + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'R' + viewType + '">' + data.repeats + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EPF' + viewType + '">' + privateFlag + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EST' + viewType + '">' + data.startTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EET' + viewType + '">' + data.endTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ET' + viewType + '">' + eventTitle2 + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ES">' + data.schoolId + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'C' + viewType + '">' + data.noCycle + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'F' + viewType + '"></p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'NED' + viewType + '"></p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ED' + viewType + '"></p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EDS' + viewType + '"></p>';

		if ($.trim(data.eventText) != '') {
			ls = ls + '<div class="eventHS HE' + eventDatastoreId + '" style="' + eT + ' background-color:'+ eventFormat.bodyFillColor +'; font-family:' + eventFormat.bodyFontFamily + '; font-size:' + eventFormat.bodyFontSize + 'pt; color:' + eventFormat.bodyFontColor + '; padding:3px;" id="' + eventDatastoreId + 'E' + viewType +'" googleId="' + data.googleId + '">' + data.eventText + '</div>';
		}
		
		if (data.noSchool == true) {
			ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S' + viewType + '">(No School)</p>';
		} else {
			ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S' + viewType + '"></p>';			
		}
		
		ls = ls + '</div>';

		if (viewType == "W") {
			$(displayDay[x]).append(ls);
		} else {
			$(displayCell[x]).append(ls);
		} 
		
		data.format = eventFormat;
		appendEventAttachments(data, '#' + eventDatastoreId + 'E' + viewType);
		$('#' + eventDatastoreId + 'EDS' + viewType).data(data);
		
		if (data.eventText == null || data.eventText == undefined || data.eventText == "") {
			if (eventDatastoreId == 0) {
				ls = 'div[googleId="'+ data.googleId +'"]';
				$(ls).hide();
			} else {
				ls = '#' + eventDatastoreId + 'E' + viewType;
				$(ls).hide();
				ls = '.HE' + eventDatastoreId;
				$(ls).hide();
			}
		}
		
	}

	function loadDayEventEqual(data,x,y) {
		
		var eventDatastoreId = data.eventId != 0 ? data.eventId + '-' + data.currentDate.replace(/\W/g, '') : 0;
		var eventFormat = getEventFormat(data);
		
		var x1 = x + 1;
		var cellName = '#x' + x1 +'y' + y;
		var viewType = "E";

		var padLeft = "";
		var headAlign = "center";
		if (userInfo.classHeadCentered == "N") { 
			headAlign = "left";
		}

		var privateFlag = "N";
		if (data.privateFlag == true) {privateFlag = "Y";}

		var eventTitle2 = "";
		if (data.eventTitle != null) {eventTitle2 = data.eventTitle;}
		
		var eventTitle = "Event";
		if (eventTitle2 != "") {
			eventTitle = eventTitle2;
		}
		
		var timeString = '';
		if (data.startTime != null && data.startTime != '') {timeString = data.startTime;}
		if (data.endTime != null && data.endTime != '')     {timeString = timeString + '-' + data.endTime;}
		var eventHeadTime = timeString.split(' ').join('').toLowerCase();
		
		var eventHeadInfo = '';
		if (userInfo.classHeadOrder == "1") {
			eventHeadInfo = '<span class="allNames"' + padLeft + '>' + eventTitle + ' </span><span class="allTimes">' + eventHeadTime + '</span>';
		} else {
			eventHeadInfo = '<span class="allTimes"' + padLeft + '>' + eventHeadTime + ' </span><span class="allNames">' + eventTitle + '</span>';
		}

		var eventDoInfo = '';
		var tds = '<td class="head' + eventDatastoreId + '" style="display:none;">';
		var tde = '</td>';
		var googleLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/g-plus-icon.png" style="vertical-align:top; margin:3px 1px 3px 1px;"></div>';
		var actionLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:' + cursorType + ';" class="lessonDoIt" id="edid' + eventDatastoreId + '"><img border="0" src="images/downarrow-icon.png" style="vertical-align:top; margin:4px 1px 4px 1px;"></div>';
		
		//load event font styles
		var eL = 'font-weight: '+ eventFormat.titleBold +'; font-style: '+ eventFormat.titleItalic +'; text-decoration: '+ eventFormat.titleUnderline +';';
		var eT = 'font-weight: '+ eventFormat.bodyBold +'; font-style: '+ eventFormat.bodyItalic +'; text-decoration: '+ eventFormat.bodyUnderline +';';
		
		if (userMode == "T") {
			if (eventDatastoreId == 0) {
				eventDoInfo = '<td>' + googleLS + tde;
			} else {
				eventDoInfo = tds + actionLS + tde;
			}
		} else {
			eventDoInfo = '<td></td>';
		}
		
		var ls = '<div class="event1" style="cursor:' + cursorType + ';" id="E' + eventDatastoreId + '">';

		if (eventDatastoreId == 0) {
			ls = ls + '<div class="lessonHead" style="'+eL+'background-color:' + data.eventColor + '; border-color:' + data.eventColor + '; font-family:'+ eventFormat.titleFontFamily +'; font-size: '+ eventFormat.titleFontSize +'pt; color:#FFFFFF;">';
		} else {
			ls = ls + '<div class="lessonHead" style="'+eL+'background-color:' + eventFormat.titleFillColor + '; border-color:' + eventFormat.titleFillColor + '; font-family:'+ eventFormat.titleFontFamily +'; font-size: '+ eventFormat.titleFontSize +'pt; color:'+eventFormat.titleFontColor+';">';
		}
		
		ls = ls + '<table style="border-collapse:collapse; width:100%;"><tr valign="top"><td style="width:100%;">';
		
		ls = ls + '<div class="eventHeadDoIt" id="ehid' + eventDatastoreId + '" style="width:100%; cursor:' + cursorType + '; text-align:' + headAlign + ';">' + eventHeadInfo + '</div>';
		
		ls = ls + '</td>' + eventDoInfo + '</tr></table></div>';
		
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'D' + viewType + '">' + data.currentDate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'A' + viewType + '">' + formatDateToShow(data.eventDate) + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'T' + viewType + '">' + formatDateToShow(data.endDate) + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'R' + viewType + '">' + data.repeats + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EPF' + viewType + '">' + privateFlag + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EST' + viewType + '">' + data.startTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EET' + viewType + '">' + data.endTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ET' + viewType + '">' + eventTitle2 + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'ES">' + data.schoolId + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'C' + viewType + '">' + data.noCycle + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + eventDatastoreId + 'EDS' + viewType + '"></p>';

		if ($.trim(data.eventText) != '') {
			ls = ls + '<div class="eventHS HE' + eventDatastoreId + '" style="' + eT + 'font-family:' + eventFormat.bodyFontFamily + '; font-size:' + eventFormat.bodyFontSize + 'pt; color:' + eventFormat.bodyFontColor + '; background-color:' + eventFormat.bodyFillColor + '; padding:3px;" id="' + eventDatastoreId + 'E' + viewType +'" googleId="' + data.googleId +'">' + data.eventText + '</div>';
		}
		
		if (data.noSchool == true) {
			ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S' + viewType + '">(No School)</p>';
		} else {
			ls = ls + '<p style="display:none;" id="' + eventDatastoreId + 'S' + viewType + '"></p>';			
		}
		
		ls = ls + '</div>';

		$(cellName).html(ls);
		
		data.format = eventFormat;
		appendEventAttachments(data, '#' + eventDatastoreId + 'E' + viewType);
		$('#' + eventDatastoreId + 'EDS' + viewType).data(data);

		$(cellName).css({'border':'1px solid #B5B5B5'});
		
		$(cellName).addClass('event2');
		
		if (data.eventText == null || data.eventText == undefined || data.eventText == "") {
			if (eventDatastoreId == 0) {
				ls = 'div[googleId="'+ data.googleId +'"]';
				$(ls).hide();
			} else {
				ls = '#' + eventDatastoreId + 'E' + viewType;
				$(ls).hide();
				ls = '.HE' + eventDatastoreId;
				$(ls).hide();
			}
		}
		
	}
	
	function getAttachmentFormat() {
		return {
			title : {
				'font-weight' : userInfo.attachmentsLabelBold == 'Y' ? 'bold' : 'normal',
				'font-style' : userInfo.attachmentsLabelItalic == 'Y' ? 'italic' : 'normal',
				'text-decoration' : userInfo.attachmentsLabelUnderline == 'Y' ? 'underline' : 'normal',
				'background-color' :  userInfo.attachmentsLabelFillColor,
				'font-family' : fontTypes[userInfo.attachmentsFont],
				'font-size' : userInfo.attachmentsSize + 'pt',
				'color' :  userInfo.attachmentsColor
			},
			
			body : {
				'font-weight' : userInfo.attachmentsTextBold == 'Y' ? 'bold' : 'normal',
				'font-style' : userInfo.attachmentsTextItalic == 'Y' ? 'italic' : 'normal',
				'text-decoration' : userInfo.attachmentsTextUnderline == 'Y' ? 'underline' : 'normal',
				'background-color' :  userInfo.attachmentsTextFillColor,
				'font-family' : fontTypes[userInfo.attachmentsTextFont],
				'font-size' : userInfo.attachmentsTextSize + 'pt',
				'color' :  userInfo.attachmentsTextColor,
				'padding' : '3px'
			}
		};
	}
	
	function appendEventAttachments(data, selector) {
		var eventAttachments = data.attachments;
		if (eventAttachments && eventAttachments.length > 0) {
			var attachmentFormat = getAttachmentFormat();
			var $attachmentMain = $('<div/>').css(attachmentFormat.title).addClass('eventHS');
			
			var $attachmentBorder = $('<div/>').css({
				'border-top-width' : '1px', 
				'border-top-style' : 'solid', 
				'border-top-color' : data.format.titleFillColor
			}).html('Attachments:');
			
			var $attachmentContainer = $('<div/>').css(attachmentFormat.body);
			
			$.each(eventAttachments, function(){
				$attachmentContainer
					.append($('<div/>').css('padding-left', '3px')
						.append($('<a/>').attr({
							target : '_blank',
							href : this.url
						}).text(this.name).click(function(e){ 
							e.stopPropagation(); 
						}))
				);
			});
			
			$attachmentMain.append($attachmentBorder).append($attachmentContainer);
			$(selector).after($('<div/>').append($attachmentMain));
		}
		
	}
	
	function loadDayLesson(data,x,hideDate,viewType,dayDate) {
		
		data.sequence = formatDateToSequence(dayDate) + "Z" + data.extraLesson;
		
		var ls = "";
		
		var startTime = '';
		var endTime = '';
		
		if ($.trim(data.customStart) != '' || $.trim(data.customEnd) != '') {
			startTime = $.trim(data.customStart);
			endTime = $.trim(data.customEnd);
		} else {
			startTime = $.trim(data.startTime);
			endTime = $.trim(data.endTime);
		}

		var timeString = '';
		if (startTime != null && startTime != '') {timeString = startTime;}
		if (endTime != null && endTime != '')     {timeString = timeString + '-' + endTime;}
		var lessonHeadTime = timeString.split(' ').join('').toLowerCase();

		var padLeft = "";
		var headAlign = "center";
		if (userInfo.classHeadCentered == "N") { 
//			padLeft = ' style="padding-left:3px;" ';
			headAlign = "left";
		}
		
		var lessonHeadInfo = '';
		if (userInfo.classHeadOrder == "1") {
			lessonHeadInfo = '<span class="allNames"' + padLeft + '>' + data.className + ' </span><span class="allTimes" style="white-space:nowrap;">' + lessonHeadTime + '</span>';
		} else {
			lessonHeadInfo = '<span class="allTimes"' + padLeft + '>' + lessonHeadTime + ' </span><span style="padding-left:3px;" class="allNames">' + data.className + '</span>';
		}

		var lessonDoInfo = '';
		var tds = '<td class="head' + data.classId + 'X' + data.sequence + '" style="display:none; vertical-align:top;">';
		var tde = '</td>';
		var lockLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/lock-icon.png" style="vertical-align:top; margin:1px 3px 1px 3px;"></div>';
		var replicaLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/r-icon.png" style="vertical-align:top; margin:3px 3px 3px 4px;"></div>';
		var moveLS = '<div class="dragIt" style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:move;"><img border="0" src="images/move-icon.png" style="vertical-align:top; margin:1px;"></div>';
		var actionLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:' + cursorType + '; " class="lessonDoIt" id="ldid' + data.classId + 'X' + data.sequence + '"><img style="vertical-align:top; margin-top:4px; margin-left:1px;" border="0" src="images/downarrow-icon.png"></div>';
		
		//load class font styles
		var cL = 'font-weight:'+(data.classLabelBold=="Y"?'bold':'normal')+'; font-style:'+(data.classLabelItalic=="Y"?'italic':'normal')+'; text-decoration:'+(data.classLabelUnderline=="Y"?'underline':'none')+';';

		if (userMode != "T") {
			lessonDoInfo = '<td></td>';
		} else if (data.collaborateSubjectId != 0) {
			if (data.collaborateType == 2) {
				lessonDoInfo = tds + replicaLS + tde + tds + actionLS + tde;
			} else {
				lessonDoInfo = tds + replicaLS + tde + tds + tde;
			}
		} else {
			if (data.lessonLock == "Y") {
				lessonDoInfo = tds + lockLS + tde + tds + actionLS + tde;
			} else {
				lessonDoInfo = tds + moveLS + tde + tds + actionLS + tde;
			}
		}
		
		// check if class color is hex
		var tempClassColor = (data.color<=45?colors1[data.color]:data.color);
		if (userMode != "T" || data.lessonLock == "Y" || data.collaborateSubjectId != 0) {
			ls = '<div class="lesson class' + data.classId + '" style="border-color:' + tempClassColor + ';" id="' + data.classId + 'X' + data.sequence + '" data-teacher="' + data.teacherId +  '">';
		} else {
			ls = '<div class="draggable lesson class' + data.classId + '" style="border-color:' + tempClassColor + ';" id="' + data.classId + 'X' + data.sequence + '" data-teacher="' + data.teacherId + '">';
		}

		// get head style
		var lHFont = (data.titleFont==null?'Arial,Helvetica,sans-serif':fontTypes[data.titleFont]);
		var lHSize = (data.titleSize==null?10:data.titleSize);
		var lHColor = (data.titleColor==null?'white':data.titleColor);
		
		ls = ls + '<div class="lessonHead" style="background-color:' + tempClassColor + '; border-color:' + tempClassColor + ';">';
		ls = ls + '<table style="'+cL+' border-collapse:collapse; color:'+ lHColor +'; font-family:' + lHFont + '; font-size:' + lHSize + 'pt; width:100%;"><tr valign="top"><td style="width:100%;"><div class="lessonHeadDoIt" id="lhid' + data.classId + 'X' + data.sequence + '" style="width:100%; cursor:' + cursorType + '; text-align:' + headAlign + ';">' + lessonHeadInfo + '</div></td>' + lessonDoInfo + '</tr></table>';
		
		ls = ls + '</div>';
		
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'D">' + hideDate + '</p>';
		
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'CN">' + data.className + '</p>';

		ls = ls + '<div class="lessonHeight" style="height:100px; overflow-y:auto;">';
		ls = ls + '<div class="lessonContent" id="lsid' + data.classId + 'X' + data.sequence + '" style="height:100%;">';
		
		ls = ls + loadHiddenFields(data, viewType);
		
		ls = ls + '<div class="allUnits" style="float:left;"><div class="leUnit shared' + getSharedLine(data) + 'LUN" id="' + data.classId + data.sequence + 'LUN' + viewType + '" style="background-color:' + (data.color<=45?colors1[data.color]:data.color) + '; color:white; padding-top:1px; padding-bottom:1px; padding-right:3px; padding-left:3px; margin:3px;">' + data.unitNum + '</div></div>';
		
		ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data) + 'LTI" id="' + data.classId + data.sequence + 'LTI' + viewType + '"' + lessonTitleStyle + '>' + data.lessonTitle + '</div></div><div style="clear:both;"></div>';

		ls = ls + '<div class="plansHS">' + loadLessonSections(data, viewType) + '</div>';

		ls = ls + '</div></div></div>';

		if (viewType == "W") {
			$(displayDay[x]).append(ls);
		} else {
			$(displayCell[x]).append(ls);
		} 
		
		hideEmptySections(data);

		addTemplateClass(data);

	}
	
	function loadDayLessonEqual(data,x,hideDate,y,dayDate) {
		
		data.sequence = formatDateToSequence(dayDate) + "Z" + data.extraLesson;
		
		var ls = "";

		var startTime = '';
		var endTime = '';

		var x1 = x + 1;
		var cellName = '#x' + x1 +'y' + y;

		if ($.trim(data.customStart) != '' || $.trim(data.customEnd) != '') {
			startTime = $.trim(data.customStart);
			endTime = $.trim(data.customEnd);
		} else {
			startTime = $.trim(data.startTime);
			endTime = $.trim(data.endTime);
		}

		var timeString = '';
		if (startTime != null && startTime != '') {timeString = startTime;}
		if (endTime != null && endTime != '')     {timeString = timeString + '-' + endTime;}
		var lessonHeadTime = timeString.split(' ').join('').toLowerCase();

		var padLeft = "";
		var headAlign = "center";
		if (userInfo.classHeadCentered == "N") { 
//			padLeft = ' style="padding-left:3px;" ';
			headAlign = "left";
		}
		
		var lessonHeadInfo = '';
		if (userInfo.classHeadOrder == "1") {
			lessonHeadInfo = '<span style="padding-left:3px;" class="allNames"' + padLeft + '>' + data.className + ' </span><span class="allTimes">' + lessonHeadTime + '</span>';
		} else {
			lessonHeadInfo = '<span class="allTimes"' + padLeft + '>' + lessonHeadTime + ' </span><span style="padding-left:3px;" class="allNames">' + data.className + '</span>';
		}

		var lessonDoInfo = '';
		var tds = '<td class="head' + data.classId + 'X' + data.sequence + '" style="display:none;">';
		var tde = '</td>';
		var lockLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/lock-icon.png" style="vertical-align:top; margin:1px 3px 1px 3px;"></div>';
		var replicaLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px;"><img border="0" src="images/r-icon.png" style="vertical-align:top; margin:3px 3px 3px 4px;"></div>';
		var moveLS = '<div class="dragIt" style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:move;"><img border="0" src="images/move-icon.png" style="vertical-align:top; margin:1px;"></div>';
		var actionLS = '<div style="background-color:white; height:15px; width:15px; border-radius:2px; margin:2px; cursor:' + cursorType + '; " class="lessonDoIt" id="ldid' + data.classId + 'X' + data.sequence + '"><img style="vertical-align:top; margin-top:4px; margin-left:1px;" border="0" src="images/downarrow-icon.png"></div>';
		
		//load class font styles
		var cL = 'font-weight:'+(data.classLabelBold=="Y"?'bold':'normal')+'; font-style:'+(data.classLabelItalic=="Y"?'italic':'normal')+'; text-decoration:'+(data.classLabelUnderline=="Y"?'underline':'none')+';';

		if (userMode != "T") {
			lessonDoInfo = '<td></td>';
		} else if (data.collaborateSubjectId != 0) {
			if (data.collaborateType == 2) {
				lessonDoInfo = tds + replicaLS + tde + tds + actionLS + tde;
			} else {
				lessonDoInfo = tds + replicaLS + tde + tds + tde;
			}
		} else {
			if (data.lessonLock == "Y") {
				lessonDoInfo = tds + lockLS + tde + tds + actionLS + tde;
			} else {
				lessonDoInfo = tds + moveLS + tde + tds + actionLS + tde;
			}
		}
		
		// check if class color is hex
		var tempClassColor = (data.color<=45?colors1[data.color]:data.color);
		if (userMode != "T" || data.lessonLock == "Y" || data.collaborateSubjectId != 0) {
			ls = '<div class="lessonCell class' + data.classId + '" style="border-color:' + tempClassColor + ';" id="' + data.classId + 'X' + data.sequence + '">';
		} else {
			ls = '<div class="draggable lessonCell class' + data.classId + '" style="border-color:' + tempClassColor + ';" id="' + data.classId + 'X' + data.sequence + '">';
		}

		// get head style
		var lHFont = (data.titleFont==null?'Arial,Helvetica,sans-serif':fontTypes[data.titleFont]);
		var lHSize = (data.titleSize==null?10:data.titleSize);
		var lHColor = (data.titleColor==null?'white':data.titleColor);
		
		ls = ls + '<div class="lessonHead" style="background-color:' + tempClassColor + '; border-color:' + tempClassColor + ';">';
		
		ls = ls + '<table style="'+cL+' border-collapse:collapse; color:'+ lHColor +'; font-size:'+ lHSize +'pt; font-family:' + lHFont + '; width:100%;"><tr valign="top"><td style="width:100%;"><div class="lessonHeadDoIt" id="lhid' + data.classId + 'X' + data.sequence + '" style="width:100%; cursor:' + cursorType + '; text-align:' + headAlign + ';">' + lessonHeadInfo + '</div></td>' + lessonDoInfo + '</tr></table>';
		
		ls = ls + '</div>';
		
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'D">' + hideDate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'CN">' + data.className + '</p>';

		ls = ls + '<div class="lessonHeight" style="height:100px; overflow-y:auto;">';
		ls = ls + '<div class="lessonContent" id="lsid' + data.classId + 'X' + data.sequence + '" style="height:100%;">';
		
		ls = ls + loadHiddenFields(data, "E");

		ls = ls + '<div class="allUnits" style="float:left;"><div class="leUnit shared' + getSharedLine(data) + 'LUN" id="' + data.classId + data.sequence + 'LUN' + 'E' + '" style="background-color:' + (data.color<=45?colors1[data.color]:data.color) + '; color:white; padding-top:1px; padding-bottom:1px; padding-right:3px; padding-left:3px; margin:3px;">' + data.unitNum + '</div></div>';
		
		ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data) + 'LTI" id="' + data.classId + data.sequence + 'LTI' + 'E' + '"' + lessonTitleStyle + '>' + data.lessonTitle + '</div></div><div style="clear:both;"></div>';
		
		ls = ls + '<div class="plansHS">' + loadLessonSections(data, "E") + '</div>';

		ls = ls + '</div></div></div>';
		
		$(cellName).html(ls);
		
		$(cellName).css({'border':'1px solid #B5B5B5'});
		
		$(cellName).addClass('subject'+data.classId);
		
		hideEmptySections(data);

		addTemplateClass(data);

	}

	$('#copyOptions').click(function() {
		
		changeSpinCount = true;
		
		if ($('#copyLabel').val() == "All") {
			$('#copyTab1').prop("checked",false);
			$('#copyTab2').prop("checked",false);
			$('#copyTab3').prop("checked",false);
			$('#copyTab4').prop("checked",false);
			$('#copyTab5').prop("checked",false);
			$('#copyTab6').prop("checked",false);
			$('#copyTab7').prop("checked",false);
			$('#copyTab8').prop("checked",false);
			$('#copyTab9').prop("checked",false);
			$('#copyTab0').prop("checked",false);
			$('#copyTabA').prop("checked",false);
		}
		
		if ($('#copyList').is(':visible')) {
			$('#copyList').hide();
		} else {
			$('#copyList').css({'top':$(this).offset().top+27,'left':$(this).offset().left}).show();
		}

	});

	$('.copyItem').click(function() {
		changeSpinCount = true;
	});
	
	$('.copyCB').click(function() {

		changeSpinCount = true;
		
		copyCount = 0;
		
		if ($('#copyTab1').prop("checked")) {copyCount += 1;}
		if ($('#copyTab2').prop("checked")) {copyCount += 1;}
		if ($('#copyTab3').prop("checked")) {copyCount += 1;}
		if ($('#copyTab4').prop("checked")) {copyCount += 1;}
		if ($('#copyTab5').prop("checked")) {copyCount += 1;}
		if ($('#copyTab6').prop("checked")) {copyCount += 1;}
		if ($('#copyTab7').prop("checked")) {copyCount += 1;}
		if ($('#copyTab8').prop("checked")) {copyCount += 1;}
		if ($('#copyTab9').prop("checked")) {copyCount += 1;}
		if ($('#copyTab0').prop("checked")) {copyCount += 1;}
		if ($('#copyTabA').prop("checked")) {copyCount += 1;}
		
		if (copyCount == 0) {
			$('#copyLabel').val("All");
		} else {
			$('#copyLabel').val(copyCount);
		}
		
	});
	
	$('#copyAll').click(function() {
		
		changeSpinCount = true;
		
		$('#copyLabel').val("All");
		$('#copyList').hide();
		
		$('#copyTab1').prop("checked",true);
		$('#copyTab2').prop("checked",true);
		$('#copyTab3').prop("checked",true);
		$('#copyTab4').prop("checked",true);
		$('#copyTab5').prop("checked",true);
		$('#copyTab6').prop("checked",true);
		$('#copyTab7').prop("checked",true);
		$('#copyTab8').prop("checked",true);
		$('#copyTab9').prop("checked",true);
		$('#copyTab0').prop("checked",true);
		$('#copyTabA').prop("checked",true);
		
		aCopy();
		
	});

	$('#copyDone').click(function() {
		
		changeSpinCount = true;

		$('#copyList').hide();
		
		if ($('#copyLabel').val() == "All") {
			$('#copyTab1').prop("checked",true);
			$('#copyTab2').prop("checked",true);
			$('#copyTab3').prop("checked",true);
			$('#copyTab4').prop("checked",true);
			$('#copyTab5').prop("checked",true);
			$('#copyTab6').prop("checked",true);
			$('#copyTab7').prop("checked",true);
			$('#copyTab8').prop("checked",true);
			$('#copyTab9').prop("checked",true);
			$('#copyTab0').prop("checked",true);
			$('#copyTabA').prop("checked",true);
		}

		aCopy();
		
	});

	$('#aCopy').click(function() {
		aCopy();
	});

	function aCopy() {

		if (lessonLoaded == "N") {loadLesson(currentId);}

		copyLessonTitle = $('#lessonTitle').val();
		copyLessonText = $('#lessonText').val();
		copyHomeworkText = $('#homeworkText').val();
		copyNotesText = $('#notesText').val();
		copyTab4Text = $('#tab4Text').val();
		copyTab5Text = $('#tab5Text').val();
		copyTab6Text = $('#tab6Text').val();

		copyStrategies = null;
		if (strategies != null && strategies.length > 0) {
			copyStrategies = new Array();
			for (var x=0; x<strategies.length; x++) {
				copyStrategies[x] = new Object();
				copyStrategies[x].id = strategies[x].id;
				copyStrategies[x].code = strategies[x].code;
				copyStrategies[x].title = strategies[x].title;
			}
		}

		copyStandards = null;
		if (standards != null && standards.length > 0) {
			copyStandards = new Array();
			for (var x=0; x<standards.length; x++) {
				copyStandards[x] = new Object();
				copyStandards[x].id = standards[x].id;
				copyStandards[x].desc = standards[x].desc;
				copyStandards[x].dbId = standards[x].dbId;
			}
		}

		copyMyStandards = null;
		if (myStandards != null && myStandards.length > 0) {
			copyMyStandards = new Array();
			for (var y=0; y<myStandards.length; y++) {
				copyMyStandards[y] = new Object();
				copyMyStandards[y].id = myStandards[y].id;
				copyMyStandards[y].desc = myStandards[y].desc;
				copyMyStandards[y].dbId = myStandards[y].dbId;
			}
		}

		copySchoolStandards = null;
		if (schoolStandards != null && schoolStandards.length > 0) {
			copySchoolStandards = new Array();
			for (var y=0; y<schoolStandards.length; y++) {
				copySchoolStandards[y] = new Object();
				copySchoolStandards[y].id = schoolStandards[y].id;
				copySchoolStandards[y].desc = schoolStandards[y].desc;
				copySchoolStandards[y].dbId = schoolStandards[y].dbId;
			}
		}

		copyAttachments = null;
		if (attachments != null && attachments.length > 0) {
			copyAttachments = new Array();
			var arrayPos = 0;
			for (var x=0; x<attachments.length; x++) {
				if (attachments[x].type == "lesson") {
					copyAttachments[arrayPos] = new Object();
					copyAttachments[arrayPos].filename = attachments[x].filename;
					copyAttachments[arrayPos].privateFlag = attachments[x].privateFlag;
					copyAttachments[arrayPos].url = attachments[x].url;
					arrayPos++;
				}
			}
		}
		
		copyReady = true;
		
	} 
	
	$('#aPaste').click(function() {

		if (copyReady == false) {
			showErrorBox('You must copy a lesson before you can paste.');
		} else {
			if (lessonLoaded == "N") {loadLesson(currentId);}
			
			var hasData = false;
			if ($('#copyTab1').prop("checked") && $.trim($('#lessonText').val()) != '') {hasData = true;}
			if ($('#copyTab2').prop("checked") && $.trim($('#homeworkText').val()) != '') {hasData = true;}
			if ($('#copyTab3').prop("checked") && $.trim($('#notesText').val()) != '') {hasData = true;}
			if ($('#copyTab4').prop("checked") && $.trim($('#tab4Text').val()) != '') {hasData = true;}
			if ($('#copyTab5').prop("checked") && $.trim($('#tab5Text').val()) != '') {hasData = true;}
			if ($('#copyTab6').prop("checked") && $.trim($('#tab6Text').val()) != '') {hasData = true;}
			if ($('#copyTab7').prop("checked") && myStandards != null) {hasData = true;}
			if ($('#copyTab8').prop("checked") && standards != null) {hasData = true;}
			if ($('#copyTab9').prop("checked") && schoolStandards != null) {hasData = true;}
			if ($('#copyTab0').prop("checked") && attachments != null) {hasData = true;}
			if ($('#copyTabA').prop("checked") && strategies != null) {hasData = true;}
			
			if (hasData == false) {
				copyLesson();
				applyLesson();
			} else if (confirm('This will overwrite your existing lesson information. Are you sure you want to paste?')) {
				copyLesson();
				applyLesson();
			}
		}
		
	});

	function copyLesson() {
		
		if ($('#copyLabel').val() == "All") {$('#lessonTitle').val(copyLessonTitle);}
		
		if ($('#copyTab1').prop("checked")) {$('#lessonText').val(copyLessonText);}
		if ($('#copyTab2').prop("checked")) {$('#homeworkText').val(copyHomeworkText);}
		if ($('#copyTab3').prop("checked")) {$('#notesText').val(copyNotesText);}
		if ($('#copyTab4').prop("checked")) {$('#tab4Text').val(copyTab4Text);}
		if ($('#copyTab5').prop("checked")) {$('#tab5Text').val(copyTab5Text);}
		if ($('#copyTab6').prop("checked")) {$('#tab6Text').val(copyTab6Text);}

		if ($('#copyTabA').prop("checked")) {
			strategies = null;
			if (copyStrategies != null && copyStrategies.length > 0) {
				strategies = new Array();
				for (var x=0; x<copyStrategies.length; x++) {
					strategies[x] = new Object();
					strategies[x].id = copyStrategies[x].id;
					strategies[x].code = copyStrategies[x].code;
					strategies[x].title = copyStrategies[x].title;
				}
			}
		}

		if ($('#copyTab7').prop("checked")) {
			myStandards = null;
			if (copyMyStandards != null && copyMyStandards.length > 0) {
				myStandards = new Array();
				for (var y=0; y<copyMyStandards.length; y++) {
					myStandards[y] = new Object();
					myStandards[y].id = copyMyStandards[y].id;
					myStandards[y].desc = copyMyStandards[y].desc;
					myStandards[y].dbId = copyMyStandards[y].dbId;
				}
			}
		}

		if ($('#copyTab8').prop("checked")) {
			standards = null;
			if (copyStandards != null && copyStandards.length > 0) {
				standards = new Array();
				for (var x=0; x<copyStandards.length; x++) {
					standards[x] = new Object();
					standards[x].id = copyStandards[x].id;
					standards[x].desc = copyStandards[x].desc;
					standards[x].dbId = copyStandards[x].dbId;
				}
			}
		}
		
		if ($('#copyTab9').prop("checked")) {
			schoolStandards = null;
			if (copySchoolStandards != null && copySchoolStandards.length > 0) {
				schoolStandards = new Array();
				for (var y=0; y<copySchoolStandards.length; y++) {
					schoolStandards[y] = new Object();
					schoolStandards[y].id = copySchoolStandards[y].id;
					schoolStandards[y].desc = copySchoolStandards[y].desc;
					schoolStandards[y].dbId = copySchoolStandards[y].dbId;
				}
			}
		}
		
		if ($('#copyTab0').prop("checked")) {
			attachments = null;
			if (copyAttachments != null && copyAttachments.length > 0) {
				attachments = new Array();
				for (var x=0; x<copyAttachments.length; x++) {
					attachments[x] = new Object();
					attachments[x].filename = copyAttachments[x].filename;
					attachments[x].privateFlag = copyAttachments[x].privateFlag;
					attachments[x].url = copyAttachments[x].url;
					attachments[x].type = "lesson";
				}
			}
		}
		
	}
	
	$('#aBump').click(function() {
		if (lessonLoaded == "N") {loadLesson(currentId);}
		bumpLesson();
	});

	$('#aBack').click(function() {
		if (lessonLoaded == "N") {loadLesson(currentId);}
		bumpBackLesson();
	});
	
	$('#aExtend').click(function() {
		if (lessonLoaded == "N") {loadLesson(currentId);}
		extendLesson();
	});

	$('#aStan').click(function() {
		if (lessonLoaded == "N") {loadLesson(currentId);}
		extendStandards();
	});

	
	$('#aDelete').click(function() {
		if (searchYearId != "" && searchYearId != userInfo.yearId) {
			showErrorBox('You can only delete lessons in the current school year');
		} else {
			if (lessonLoaded == "N") {loadLesson(currentId);}
			if ($('#lessonLock').prop('checked')) {
				// if lesson is locked, then do not shift lessons
				deleteLesson("N");
			} else {
				showBox('#lessonDeleteBox', 30);
			}
		}		
	});
	
	function setPlanbookLogo() {
		
		var lMonth = startMonday.getMonth() + 1;
		var lDay = startMonday.getDate();

		if (lMonth == 1 && lDay <= 6)
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // New
																					// Year's
																					// Day
		else if (lMonth == 2 && (lDay >= 8 && lDay <= 14))
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // Valentine's
																					// Day
		else if (lMonth == 3 && (lDay >= 11 && lDay <=18))
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // St.
																					// Patrick's
																					// Day
		else if ((lMonth == 4 && lDay <= 7))
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // April
																					// Showers
		else if (lMonth == 4 && (lDay >= 17 && lDay <= 23))
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // Earth
																					// Day
		else if (lMonth == 5 && lDay <= 7)
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // Teacher
																					// Appreciation
		else if (lMonth == 10 && (lDay >= 20 && lDay <= 31))
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // Halloween
		else if (lMonth == 11 && (lDay >= 20 && lDay <= 30))	
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');} // Thanksgiving
																					// Day
		else if (lMonth == 12 && (lDay >= 15 && lDay <= 31))
			{$('#mainLogo').html('<img border="0" src="images/planbook-dec.png">');} // Christmas
																					// Day
		else 
			{$('#mainLogo').html('<img border="0" src="images/planbook.png">');}	
	
	}	
	
	$('#addYearButton').click(function() {
		showAddYear();
	});

	function showAddYear() {
		
		hideAll();

		clearNotification('#yearErrorMsg');
		$('#addFirstDay').val('');
		$('#addLastDay').val('');
		$('#addYearName').val('');
		
		$('#importYearName').html(userInfo.yearName);

		$('#addYear').show();
	}
	
	$('#applyYear').click(function() {

		var valError = false;
		clearNotification('#yearErrorMsg');
		$('.doButton').show();
		
		$('#').hide();
		$('#cancelYear4').hide();
		
		var fDay = formatDateToSave($('#addFirstDay').val());
		var lDay = formatDateToSave($('#addLastDay').val());
		var yName = $.trim($('#addYearName').val());
		
		if (lDay == "") {
			valError = true;
			showNotification('#yearErrorMsg', 'Enter a Last Day of Year');
		} else {
			if (valDate(lDay) == false) {
				valError = true;
				showNotification('#yearErrorMsg', 'Enter a valid Last Day of Year');
			}
		}
	
		if (fDay == "") {
			valError = true;
			showNotification('#yearErrorMsg', 'Enter a First Day of Year');
		} else {
			if (valDate(fDay) == false) {
				valError = true;
				showNotification('#yearErrorMsg', 'Enter a valid First Day of Year');
			}
		}
	
		if (valError == false) {
			var result = compareDates(fDay, lDay);
			if (result != 0) {
				valError = true;
				if (result == 1) {
					showNotification('#yearErrorMsg', 'First Day must come before Last Day');
				} else {
					showNotification('#yearErrorMsg', 'First Day to Last Day date range cannot exceed one year');
				}
			}		
		}	
		
		if (yName == "") {
			valError = true;
			showNotification('#yearErrorMsg', 'Enter a name for School Year');
		}

		if (valError == false) {
			for (var x=0; x<yearNames.length; x++) {
				if (yName == yearNames[x]) {
					valError = true;
					showNotification('#yearErrorMsg', 'School Year Name has already been used');
				}
			}
		}
		
		if (valError == false) {
			if (paymentNeeded == false) {
				$('#addYear').hide();
				if (userInfo.classLength == 0 || userInfo.yearId == 0) {
					var fDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave($('#addFirstDay').val()));
					var lDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave($('#addLastDay').val()));
					
					$('#holidayBody').html('');
					holidayCount = 0;
					for (var x=0; x<calArray.length; x++) {
						if (calArray[x].eDate >= fDay && calArray[x].eDate <= lDay) {
							var ls = '<tr><td><input type="checkbox" id="hol' + holidayCount + '" value="Y"><span id="holTitle' + holidayCount + '" style="margin-left:4px;">' + calArray[x].eTitle + '</span>, <span id="holDate' + holidayCount + '">' +  formatDateToShow($.datepicker.formatDate('mm/dd/yy', calArray[x].eDate)) + '</span></td></tr>';
							$('#holidayBody').append(ls);
							$('#hol'+holidayCount).prop("checked",true);
							holidayCount++;
						}
					}
					
					$('#addYear3').show();
					$('#applyYear3').show();
					$('#cancelYear3').show();
					$('#addYear3Title').show();

				} else {
					$('#importLessons').prop('checked',false);
					$('#importDays').prop('checked',false);
					$('#importTimes').prop('checked',false);
					$('#importTemplates').prop('checked',false);
					$('#importUnits').prop('checked',false);
					$('#importAssignments').prop('checked',false);
					$('#importAssessments').prop('checked',false);
					$('#addYear2').show();
				}
			} else {
				showExpiredMsg();
			}
		}
		
	});

	$('#applyYear2').click(function() {

		$('#addYear2').hide();
		
		var fDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave($('#addFirstDay').val()));
		var lDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave($('#addLastDay').val()));
		
		$('#holidayBody').html('');
		holidayCount = 0;
		for (var x=0; x<calArray.length; x++) {
			if (calArray[x].eDate >= fDay && calArray[x].eDate <= lDay) {
				var ls = '<tr><td><input type="checkbox" id="hol' + holidayCount + '" value="Y"><span id="holTitle' + holidayCount + '" style="margin-left:4px;">' + calArray[x].eTitle + '</span>, <span id="holDate' + holidayCount + '">' +  formatDateToShow($.datepicker.formatDate('mm/dd/yy', calArray[x].eDate)) + '</span></td></tr>';
				$('#holidayBody').append(ls);
				$('#hol'+holidayCount).prop("checked",true);
				holidayCount++;
			}
		}
		
		$('#addYear3').show();
		$('#applyYear3').show();
		$('#cancelYear3').show();
		$('#addYear3Title').show();

	});

	$('#applyYear3').click(function() {

		var valError = false;
		clearNotification('#year3ErrorMsg');
		
		addYearInfo = new Object();
		addYearInfo.classIds = new Array();
		addYearInfo.title = new Array();
		addYearInfo.start = new Array();
		addYearInfo.end = new Array();
		
		addYearInfo.firstDay = formatDateToSave($('#addFirstDay').val());
		addYearInfo.lastDay = formatDateToSave($('#addLastDay').val());
		addYearInfo.yearName = $.trim($('#addYearName').val());
		
		if ($('#importLessons').prop('checked')) {addYearInfo.importLessons = "Y";} else {addYearInfo.importLessons = "N";}
		if ($('#importDays').prop('checked')) {addYearInfo.importDays = "Y";} else {addYearInfo.importDays = "N";}
		if ($('#importTimes').prop('checked')) {addYearInfo.importTimes = "Y";} else {addYearInfo.importTimes = "N";}
		if ($('#importTemplates').prop('checked')) {addYearInfo.importTemplates = "Y";} else {addYearInfo.importTemplates = "N";}
		if ($('#importUnits').prop('checked')) {addYearInfo.importUnits = "Y";} else {addYearInfo.importUnits = "N";}
		if ($('#importAssignments').prop('checked')) {addYearInfo.importAssignments = "Y";} else {addYearInfo.importAssignments = "N";}
		if ($('#importAssessments').prop('checked')) {addYearInfo.importAssessments = "Y";} else {addYearInfo.importAssessments = "N";}

		var idCtr = 0;
		for (var z=0; z<classId.length; z++) {
			var ls = '#addYearClass' + z;
			if ($(ls).prop('checked')) {
				addYearInfo.classIds[idCtr] = classId[z];
				idCtr++;
			}
		}			

		addYearInfo.title = new Array();
		addYearInfo.start = new Array();
		addYearInfo.end = new Array();
       	var newPos = 0
		
		for (var x=0; x<holidayCount; x++) {

			var holCheck = '#hol' + x;
			var holTitle = '#holTitle' + x;
			var holDate  = '#holDate' + x;

			if ($(holCheck).prop("checked")) {
				addYearInfo.title[newPos] = $(holTitle).html();
				addYearInfo.start[newPos] = formatDateToSave($(holDate).html());
				addYearInfo.end[newPos]   = formatDateToSave($(holDate).html());
				newPos++
			}
		
		}
       	
		for (var x=0; x<noSchoolCount; x++) {

			var nameNoSchool = '#nameNoSchool' + x;
			var startNoSchool = '#startNoSchool' + x;
			var endNoSchool = '#endNoSchool' + x;

			// need to validate it first
			var startNS = formatDateToSave($(startNoSchool).val());
			var endNS = formatDateToSave($(endNoSchool).val());
			
			if (startNS != "") {
				
				if (valDate(startNS) == false) {
					valError = true;
					showNotification('#year3ErrorMsg', 'Plase enter a valid Start Date');
				}

				if (endNS == "") {
					endNS = startNS
				} else if (valDate(endNS) == false) {
					valError = true;
					showNotification('#year3ErrorMsg', 'Plase enter a valid End Date');
				}

				if (valError == false) {
					var result = compareDates(startNS, endNS);
					if (result != 0) {
						valError = true;
			 			if (result == 1) {
			 				showNotification('#year3ErrorMsg', 'Start Date must come before End Date');
			 			} else {
			 				showNotification('#year3ErrorMsg', 'Date range cannot exceed one year');
			 			}
					}		
				}	
				
				if (valError == false) {
					addYearInfo.title[newPos] = $.trim($(nameNoSchool).val());
					addYearInfo.start[newPos] = startNS;
					addYearInfo.end[newPos]   = endNS;
					newPos++
				}
			}
		}

		if (valError == false) {
			if (paymentNeeded == false) {
				haveEvents = false;
				haveTemplates = false;
				haveAssignments = false;
				haveAssessments = false;
				haveUnits = false;
				haveStudents = false;
				haveCommentTo = false;

				action = "newYear";
				firstTime = true;
				showLoading();
				$.getJSON('addTerm', addYearInfo, loadSettings);
			} else {
				showExpiredMsg();
			}
		}
		
	});
	
	$('#applyWelcome6').click(function(){
		
		var valError = false;
		clearNotification('#year3ErrorMsg');

		userInfo.holidayTitle = new Array();
		userInfo.holidayStart = new Array();
		userInfo.holidayEnd = new Array();

		var newPos = 0
		
		for (var x=0; x<noSchoolCount; x++) {

			var nameNoSchool = '#nameNoSchool' + x;
			var startNoSchool = '#startNoSchool' + x;
			var endNoSchool = '#endNoSchool' + x;

			// need to validate it first
			var startNS = formatDateToSave($(startNoSchool).val());
			var endNS = formatDateToSave($(endNoSchool).val());
			
			if (startNS != "") {
				
				if (valDate(startNS) == false) {
					valError = true;
					showNotification('#year3ErrorMsg', 'Plase enter a valid Start Date');
				}

				if (endNS == "") {
					endNS = startNS
				} else if (valDate(endNS) == false) {
					valError = true;
					showNotification('#year3ErrorMsg', 'Plase enter a valid End Date');
				}

				if (valError == false) {
					var result = compareDates(startNS, endNS);
					if (result != 0) {
						valError = true;
			 			if (result == 1) {
			 				showNotification('#year3ErrorMsg', 'Start Date must come before End Date');
			 			} else {
			 				showNotification('#year3ErrorMsg', 'Date range cannot exceed one year');
			 			}
					}		
				}	
				
				if (valError == false) {
					userInfo.holidayTitle[newPos] = $.trim($(nameNoSchool).val());
					userInfo.holidayStart[newPos] = startNS;
					userInfo.holidayEnd[newPos]   = endNS;
					newPos++
				}
			}
		}
		
		for (var x=0; x<holidayCount; x++) {

			var holCheck = '#hol' + x;
			var holTitle = '#holTitle' + x;
			var holDate  = '#holDate' + x;

			if ($(holCheck).prop("checked")) {
				userInfo.holidayTitle[newPos] = $(holTitle).html();
				userInfo.holidayStart[newPos] = formatDateToSave($(holDate).html());
				userInfo.holidayEnd[newPos]   = formatDateToSave($(holDate).html());
				newPos++
			}
		
		}
		
		if (valError == false) {
			$('#addYear3').hide();
			addNewUser();
		}
		
	});

	$('#cancelYear').click(function() {
		if (userInfo.yearId === 0) {
			showErrorBox('Please add a School Year.');
		} else {
			showSchoolYear();
		}
	});

	$('#cancelYear2').click(function() {
		$('#addYear2').hide();
		$('#addYear').show();
	});

	$('#cancelYear3').click(function() {
		$('#addYear3').hide();
		$('#addYear2').show();
	});
	
	$('#cancelWelcome6').click(function() {
		$('#addYear3').hide();
		$('#welcome5').show();
	});
	
	$('#switchYearButton').click(function() {
		hideAll();
		$('.yearRow td').css({'background-color':'white'});
		currentYear = '';
		clearNotification('#changeYearErrorMsg');
		$('#changeYear').show();
		$('#applyChangeYear').show();
		$('#cancelChangeYear').show();
		$('#addNewYear').hide();
	});

	$('#applyChangeYear').click(function() {

		clearNotification('#changeYearErrorMsg');
		
		if (currentYear == '') {
			showNotification('#changeYearErrorMsg', 'Please select a School Year');
		} else {

			haveEvents = false;
			haveTemplates = false;
			haveAssignments = false;
			haveAssessments = false;
			haveUnits = false;
			haveStudents = false;
			haveCommentTo = false;

			action = "changeYear";
			firstTime = true;
			showLoading();
			$.getJSON('changeTerm', 'yearId='+currentYear, loadSettings);
		}
		
	});

	$('#cancelChangeYear').click(function() {
		showSchoolYear();
	});

	$('.yearRow').live('click', function() {
		$('.yearRow td').css({'background-color':'white'});
		var ls = '#' + this.id + ' td';
		$(ls).css({'background-color':'#DBDFE8'});
		currentYear = this.id;
	});

	$('#addStrategiesButton').click(function() {
		showPickStrategies();
	});

	function showPickStrategies() {
		
		showBox('#pickStrategiesBox', 0);
		
		$('.selectStrategy').html('');
		
		tempStrategies = null;
		if (strategies != null && strategies.length > 0) {
			tempStrategies = new Array();
			for (var x=0; x<strategies.length; x++) {
				tempStrategies[x] = new Object();
				tempStrategies[x].id = strategies[x].id;
				tempStrategies[x].title = strategies[x].title;
				tempStrategies[x].code = strategies[x].code;
				$('#'+tempStrategies[x].id+'0').html('<img src="images/apply.png">');
			}
		}
		
	}	
	
	$('#addStandardsButton').click(function() {
		loadCurrentStandards(currentClassId);
		showSharedStandards();
	});
		
	$('#templateStandardsButton').click(function() {
		clearNotification('#editTemplateErrorMsg');
		showSharedStandards();
	});
	
	$('#addUnitStandard').click(function() {
		showSharedStandards();
		var $standardsBox = $('#addStandardsBox');
		$standardsBox.css({top:($standardsBox.offset().top + 15)+'px', left:($standardsBox.offset().left + 15)+'px'});
	});
		
	$('#addAssignmentStandards').click(function() {
		showSharedStandards();
		var $standardsBox = $('#addStandardsBox');
		$standardsBox.css({top:($standardsBox.offset().top + 15)+'px', left:($standardsBox.offset().left + 15)+'px'});
	});
	
	$('#addAssessmentStandards').click(function() {
		showSharedStandards();
		var $standardsBox = $('#addStandardsBox');
		$standardsBox.css({top:($standardsBox.offset().top + 15)+'px', left:($standardsBox.offset().left + 15)+'px'});
	});
	
	function showSharedStandards() {
		
		showBox('#addStandardsBox', 0);
		
		$('.sRowPart').css({'background-color':'white'});

		tempStandards = null;
		if (standards != null && standards.length > 0) {
			tempStandards = new Array();
			for (var x=0; x<standards.length; x++) {
				tempStandards[x] = new Object();
				tempStandards[x].id = standards[x].id;
				tempStandards[x].desc = standards[x].desc;
				tempStandards[x].dbId = standards[x].dbId;

				$('#'+tempStandards[x].dbId+'I').css({'background-color':'#E8EEF7'});
				$('#'+tempStandards[x].dbId+'D').css({'background-color':'#E8EEF7'});
			}
		}
		
		if (statesSelected == null || statesSelected.length == 0) {
			showStateStandardsBox();
		} else if (subjectsSelected == null || subjectsSelected.length == 0) {
			showSubjectStandardsBox();
		}
		
	}	

	$('#myStandardsButton').click(function() {

		showMyStandards();
		
	});
	
	$('#templateMyStandardsButton').click(function() {

		clearNotification('#editTemplateErrorMsg');
		showMyStandards();
		
	});
	
	function showMyStandards() {
		
		showBox('#myStandardsBox', 0);
		
		$('.mysRow').css({'background-color':'white'});

		tempMyStandards = null;
		if (myStandards != null && myStandards.length > 0) {
			tempMyStandards = new Array();
			for (var x=0; x<myStandards.length; x++) {
				tempMyStandards[x] = new Object();
				tempMyStandards[x].id = myStandards[x].id;
				tempMyStandards[x].desc = myStandards[x].desc;
				tempMyStandards[x].dbId = myStandards[x].dbId;

				var ls = '#' + myStandards[x].dbId;
				$(ls).css({'background-color':'#E8EEF7'});
			}
		}
		
	}

	$('#schoolStandardsButton').click(function() {

		showSchoolStandards();
		
	});
	
	$('#templateSchoolStandardsButton').click(function() {

		clearNotification('#editTemplateErrorMsg');
		showSchoolStandards();
		
	});
	
	function showSchoolStandards() {
		
		showBox('#schoolStandardsBox', 0);
		
		$('.mySchoolRow').css({'background-color':'white'});

		tempSchoolStandards = null;
		if (schoolStandards != null && schoolStandards.length > 0) {
			tempSchoolStandards = new Array();
			for (var x=0; x<schoolStandards.length; x++) {
				tempSchoolStandards[x] = new Object();
				tempSchoolStandards[x].id = schoolStandards[x].id;
				tempSchoolStandards[x].desc = schoolStandards[x].desc;
				tempSchoolStandards[x].dbId = schoolStandards[x].dbId;

				var ls = '#' + schoolStandards[x].dbId;
				$(ls).css({'background-color':'#E8EEF7'});
			}
		}
		
	}

	$('#createMyStandard').click(function() {

		action = "addMyStandard";
		clearNotification('#editStandardsErrorMsg');
		
		$('#myStandardId').val('');	
		$('#myStandardText').val('');
		
		$('#myListAction').hide();

		showBox('#editMyListBox', 10);
		
		$('#myStandardId').focus();	
		
	});

	function editMyList() {
		
		action = "updateMyStandard";
		clearNotification('#editStandardsErrorMsg');

		var ils = "#" + currentMyStandardId + "I";
		var dls = "#" + currentMyStandardId + "D";

		$('#myStandardId').val($(ils).html());	
		$('#myStandardText').val($(dls).html());
		
		showBox('#editMyListBox', 10);

		$('#myStandardId').focus();

	}

	$('#deleteMyList').click(function() {
		
		if (paymentNeeded == false) {
			if (confirm('This will also remove the standard from all lessons. Are you sure you want to delete?')) {

				jsonInfo = new Object ();
				jsonInfo.dbId = currentMyStandardId;
				jsonInfo.userMode = userMode;
				
				hideBox('#editMyListBox', 10);

				action = 'deleteMyStandard';
				showLoading();
				$.getJSON('deleteMyStandard', jsonInfo, loadMyStandards);

			}
		} else {
			showExpiredMsg();
		}
				
	});
	
	$('#applyStrategies').click(function() {

		saveLesson = true;
		
		strategies = null;

		$('#strategyBody').html('');
		
		if (tempStrategies != null && tempStrategies.length > 0) {
			strategies = new Array();
			for (var x=0; x<tempStrategies.length; x++) {
				strategies[x] = new Object();
				strategies[x].id = tempStrategies[x].id;
				strategies[x].code = tempStrategies[x].code;
				strategies[x].title = tempStrategies[x].title;
				var ls = '<tr><td class="slCell">' + strategies[x].code + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + strategies[x].title + '</td>';
				ls = ls + '<td class="scCell"><div class="removeStrategy buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="removeStrategy' + x + '"><img src="images/trash.png"></div></td></tr>';
				$('#strategyBody').append(ls);
			}
		}
 
		if (strategies != null && strategies.length != 0) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="100px" height="1"></td><td></td><td></td></tr>';
			$('#strategyBody').append(ls);
		}
		
		$('#pickStrategiesBox').hide();

	});

	$('#applyStandards').click(function() {

		saveLesson = true;
		
		standards = null;

		var standardBody = '';

		if (standardType == 'Lesson') {
			standardBody = '#saBody';
		} else if (standardType == 'Template') {
			standardBody = '#tsaBody';
		} else if (standardType == 'Unit') {
			standardBody = '#unitStandardsBody';
		} else if (standardType == 'Assignment') {
			standardBody = '#asgStandardsBody';
		} else if (standardType == 'Assessment') {
			standardBody = '#asmStandardsBody';
		}
		
		$(standardBody).html('');
		
		if (tempStandards != null && tempStandards.length > 0) {
			standards = new Array();
			for (var x=0; x<tempStandards.length; x++) {
				standards[x] = new Object();
				standards[x].id = tempStandards[x].id;
				standards[x].desc = tempStandards[x].desc;
				standards[x].dbId = tempStandards[x].dbId;
				var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
		}
 
		if (standards != null && standards.length != 0) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="100px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}
		
		$('#addStandardsBox').hide();
		
//		if (standardType == 'Unit') {
//			updateUnitStandards();
//		}

	});

	$('#applyMyStandards').click(function() {

		saveLesson = true;
		
		myStandards = null;

		var standardBody = '';

		if (standardType == 'Lesson') {
			standardBody = '#msaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		$(standardBody).html('');
		
		if (tempMyStandards != null && tempMyStandards.length > 0) {
			myStandards = new Array();
			for (var y=0; y<tempMyStandards.length; y++) {
				myStandards[y] = new Object();
				myStandards[y].id = tempMyStandards[y].id;
				myStandards[y].desc = tempMyStandards[y].desc;
				myStandards[y].dbId = tempMyStandards[y].dbId;
				var ls = '<tr><td class="slCell">' + myStandards[y].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + myStandards[y].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeMyStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
		}

		if (myStandards != null && myStandards.length != 0) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}
		
		$('#myStandardsBox').hide();

	});

	$('#applySchoolStandards').click(function() {

		saveLesson = true;
		
		schoolStandards = null;

		var standardBody = '';

		if (standardType == 'Lesson') {
			standardBody = '#ssaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		$(standardBody).html('');
		
		if (tempSchoolStandards != null && tempSchoolStandards.length > 0) {
			schoolStandards = new Array();
			for (var y=0; y<tempSchoolStandards.length; y++) {
				schoolStandards[y] = new Object();
				schoolStandards[y].id = tempSchoolStandards[y].id;
				schoolStandards[y].desc = tempSchoolStandards[y].desc;
				schoolStandards[y].dbId = tempSchoolStandards[y].dbId;
				var ls = '<tr><td class="slCell">' + schoolStandards[y].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + schoolStandards[y].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeSchoolStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
		}

		if (schoolStandards != null && schoolStandards.length != 0) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}
		
		$('#schoolStandardsBox').hide();

	});
	
	$('#cancelStrategies').click(function() {
		$('#pickStrategiesBox').hide();
	});

	$('#cancelStandards').click(function() {
		$('#addStandardsBox').hide();
	});

	$('#closeStandards').click(function() {
		$('#addStandardsBox').hide();
	});

	$('#cancelMyStandards').click(function() {
		$('#myStandardsBox').hide();
	});

	$('#closeMyStandards').click(function() {
		$('#myStandardsBox').hide();
	});

	$('#cancelSchoolStandards').click(function() {
		$('#schoolStandardsBox').hide();
	});

	$('#closeSchoolStandards').click(function() {
		$('#schoolStandardsBox').hide();
	});
	
	$('#cancelEditStandards').click(function() {
		hideBox('#editMyListBox', 10);
	});

	$('#closeEditStandards').click(function() {
		hideBox('#editMyListBox', 10);
	});

	$('#applyEditStandards').click(function() {

		var valError = false;
		clearNotification('#editStandardsErrorMsg');

		var myStanId = $.trim($('#myStandardId').val());
		var myStanText = $.trim($('#myStandardText').val());

		if (myStanId == "") {
			valError = true;
			showNotification('#editStandardsErrorMsg', 'Please enter an ID for your My List item');
		}
			
		if (myStanText == "") {
			valError = true;
			showNotification('#editStandardsErrorMsg', 'Please enter a description for your My List item');
		}
		
		if (valError == false) {

			var myStandardInfo = new Object ();
			myStandardInfo.sI = myStanId;
			myStandardInfo.sD = myStanText;
			
			myStandardInfo.userMode = userMode;
			if (userMode == "A") {
				myStandardInfo.schoolId = userInfo.schoolId;
			} else {
				myStandardInfo.schoolId = 0;
			}
			
			if (paymentNeeded == false) {
				showLoading();
				if (action == "addMyStandard") {
					$.post('addMyStandard', myStandardInfo, loadMyStandards, "json");
				} else {
					myStandardInfo.dbId = currentMyStandardId;
					$.post('updateMyStandard', myStandardInfo, loadMyStandards, "json");
				}
				hideBox('#editMyListBox', 10);
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('#addTemplateButton').click(function() {
		addTemplate();
	});
		
	$('#addTemplate2').click(function() {
		addTemplate();
	});
		
	function addTemplate() {

		$('#templateAction').hide();
		
		currentTemplateId = 0;
		action = "addTemplate";
		clearNotification('#editTemplateErrorMsg');

		$('#templateClass').val($('#templateClass').find('option').first().val());
		$('#templateWhen').val('E');	
//		$('#templateType').val('L');
		$('#templateText').val('');
		currentStandardsText = '';
		currentMyStandardsText = '';
		currentSchoolStandardsText = '';

		setClassStartEnd($('#templateClass').val());
		$('#templateStart').val(formatDateToShow(currentClassStart));	
		$('#templateEnd').val(formatDateToShow(currentClassEnd));
		$('#useClassStart').prop('checked',true);
		$('#templateStart').prop("disabled", true);
		$('#useClassEnd').prop('checked',true);
		$('#templateEnd').prop("disabled", true);

		$('#templateTextBox').show();
		$('#templateStandardsBox').hide();

		showBox('#editTemplateBox', 10);
		
		$('#templateText').focus();	
		
	}

	function editTemplate() {
		
		$('#templateAction').show();

		action = "updateTemplate";
		clearNotification('#editTemplateErrorMsg');

		var ils = "#" + currentTemplateId + "I";
		var wls = "#" + currentTemplateId + "W";
		var yls = "#" + currentTemplateId + "Y";
		var sls = "#" + currentTemplateId + "S";
		var dls = "#" + currentTemplateId + "D";
		var tls = "#" + currentTemplateId + "T";

		var type = $(yls).html();
		if      (type == userInfo.lessonLabel)          {type = "L";}
		else if (type == userInfo.tab2Label)            {type = "H";}
		else if (type == userInfo.tab3Label)            {type = "N";}
		else if (type == userInfo.tab4Label)            {type = "4";}
		else if (type == userInfo.tab5Label)            {type = "5";}
		else if (type == userInfo.tab6Label)            {type = "6";}
		else if (type == userInfo.sharedStandardsLabel) {type = "S";}
		else if (type == userInfo.schoolStandardsLabel) {type = "SS";}
		else if (type == userInfo.myStandardsLabel)     {type = "MS";}

		var when = $(wls).html().substring(0,1);
		
		if ($(wls).html() == "Thursday") {when = 'R';}
		if ($(wls).html() == "Sunday") {when = 'U';}

		$('#templateClass').val($(ils).html());	
		$('#templateWhen').val(when);	
		$('#templateType').val(type);
		$('#templateStart').val($(sls).html());	
		$('#templateEnd').val($(dls).html());

		if ($('#templateType').val() == 'S' || $('#templateType').val() == 'MS' || $('#templateType').val() == 'SS') {
			standardType = 'Template';
			
			$('#templateStandardsButton').hide();
			$('#templateMyStandardsButton').hide();
			$('#templateSchoolStandardsButton').hide();
			if ($('#templateType').val() == 'S') {
				$('#templateStandardsButton').show();
				currentStandardsText = tls;
				loadStandardsText();
			} else if ($('#templateType').val() == 'MS') {
				$('#templateMyStandardsButton').show();
				currentMyStandardsText = tls;
				loadMyStandardsText();
			} else {
				$('#templateSchoolStandardsButton').show();
				currentSchoolStandardsText = tls;
				loadSchoolStandardsText();
			}		

			$('#templateTextBox').hide();
			$('#templateStandardsBox').show();

		} else {
			$('#templateText').val($(tls).html());
			$('#templateTextBox').show();
			$('#templateStandardsBox').hide();
		}

		setClassStartEnd($(ils).html());
		
		if (formatDateToSave($(sls).html()) == currentClassStart) {
			$('#useClassStart').prop('checked',true);
			$('#templateStart').prop("disabled", true);
		} else {
			$('#useClassStart').prop('checked',false);
			$('#templateStart').prop("disabled", false);
		}
		
		if (formatDateToSave($(dls).html()) == currentClassEnd) {
			$('#useClassEnd').prop('checked',true);
			$('#templateEnd').prop("disabled", true);
		} else {
			$('#useClassEnd').prop('checked',false);
			$('#templateEnd').prop("disabled", false);
		}
		
		showBox('#editTemplateBox', 10);

		$('#templateText').focus();
		
	}

	$('#addTeacherButton').click(function() {

		action = "addTeacher";
		clearNotification('#editTeacherErrorMsg');

		$('#editTeacherType').val("T");	
		$('#editTeacherEmail').val("");	
		$('#editTeacherFirst').val("");
		$('#editTeacherLast').val("");	

		showBox('#editTeacherBox', 10);

		$('#editTeacherEmail').focus();
		
	});
	
	$('#editTeacherButton').click(function() {
		
		action = "updateTeacher";
		clearNotification('#editTeacherErrorMsg');

		$('#editTeacherType').val($("#" + editTeacherId + "T").html());	
		$('#editTeacherEmail').val($("#" + editTeacherId + "E").html());	
		$('#editTeacherFirst').val($("#" + editTeacherId + "F").html());
		$('#editTeacherLast').val($("#" + editTeacherId + "L").html());	

		showBox('#editTeacherBox', 10);

		$('#editTeacherEmail').focus();
		
	});

	
	function setClassStartEnd(tempClassId) {

		for (var z=0; z < classId.length; z++) {
			if (classId[z] == tempClassId) {
				currentClassStart = classStart[z];
				currentClassEnd   = classEnd[z];
			}
		}
	
	}

	$('#templateClass').change(function(){ 

		setClassStartEnd($('#templateClass').val());
		$('#templateStart').val(formatDateToShow(currentClassStart));	
		$('#templateEnd').val(formatDateToShow(currentClassEnd));
		$('#useClassStart').prop('checked',true);
		$('#templateStart').prop("disabled", true);
		$('#useClassEnd').prop('checked',true);
		$('#templateEnd').prop("disabled", true);
		
	}); 
	
	
	$('#templateType').change(function(){ 
		if ($('#templateType').val() == 'S' || $('#templateType').val() == 'MS' || $('#templateType').val() == 'SS') {
			standardType = 'Template';
			
			if ($('#templateType').val() == 'S') {
				loadStandardsText();
			} else if ($('#templateType').val() == 'MS') {
				loadMyStandardsText(); 
			} else {
				loadSchoolStandardsText(); 
			}
			
			$('#templateTextBox').hide();
			$('#templateStandardsBox').show();
		
			$('#templateStandardsButton').hide();
			$('#templateMyStandardsButton').hide();
			$('#templateSchoolStandardsButton').hide();
			if ($('#templateType').val() == 'S') {
				$('#templateStandardsButton').show();
			} else if ($('#templateType').val() == 'MS') {
				$('#templateMyStandardsButton').show();
			} else {
				$('#templateSchoolStandardsButton').show();
			}		

		} else {
			$('#templateTextBox').show();
			$('#templateStandardsBox').hide();
		}
	}); 
	
	$('#deleteTemplate').live('click', function() {
		
		var templateInfo        = new Object ();
		templateInfo.templateId = currentTemplateId.substr(4);

		if (paymentNeeded == false) {
			action = 'deleteTemplate';
			showLoading();
			$.getJSON('deleteTemplate', templateInfo, loadTemplates);
		} else {
			showExpiredMsg();
		}
				
	});
	
	$('#removeTeacherButton').live('click', function() {
		
		var jsonInfo = new Object ();
		jsonInfo.teacherId = editTeacherId.substr(4);
		jsonInfo.schoolId = userInfo.schoolId;

		if (paymentNeeded == false) {
			action = 'removeTeacher';
			showLoading();
			$.getJSON('removeTeacher', jsonInfo, loadTeacherList);
		} else {
			showExpiredMsg();
		}
				
	});

	$('#resetTeacherButton').live('click', function() {
		
		var jsonInfo = new Object ();
		jsonInfo.teacherId = editTeacherId.substr(4);
		jsonInfo.lastName = $("#" + editTeacherId + "L").html();
		
		if (paymentNeeded == false) {
			action = 'resetTeacher';
			showLoading();
			$.getJSON('resetTeacher', jsonInfo, teacherReset);
		} else {
			showExpiredMsg();
		}
				
	});

	function teacherReset(data) {
		
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			showAction();
		}
		
	}
	
	$('#cancelEditTemplate').click(function() {
		hideBox('#editTemplateBox', 10);
	});

	$('#closeEditTemplate').click(function() {
		hideBox('#editTemplateBox', 10);
	});

	$('#applyEditTemplate').click(function() {

		var valError = false;
		clearNotification('#editTemplateErrorMsg');

		var templateText = $.trim($('#templateText').val());

		if ($('#templateType').val() == 'S') {
			templateText = "";
			if (standards == null || standards.length == 0) {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please select a standard for your template');
			}
		} else if ($('#templateType').val() == 'MS') {
			templateText = "";
			if (myStandards == null || myStandards.length == 0) {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please select an item for your template');
			}
		} else if ($('#templateType').val() == 'SS') {
			templateText = "";
			if (schoolStandards == null || schoolStandards.length == 0) {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please select an item for your template');
			}
		} else {
			if (templateText == "") {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please enter text for your template');
			}
		}
		
		var tStart = formatDateToSave($.trim($('#templateStart').val()));
		var tEnd   = formatDateToSave($.trim($('#templateEnd').val()));

		// validate start date
		if (valError == false) {
			if (tStart == "") {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please enter a Start Date');
			} else {
	 	 		if (valDate(tStart) == false) {
	 	 			valError = true;
	 	 			showNotification('#editTemplateErrorMsg', 'Please enter a valid Start Date');
	 	 		}
	 		}
		}
		
		// validate end date
		if (valError == false) {
			if (tEnd == "") {
				valError = true;
				showNotification('#editTemplateErrorMsg', 'Please enter an End Date');
			} else {
	 	 		if (valDate(tEnd) == false) {
	 	 			valError = true;
	 	 			showNotification('#editTemplateErrorMsg', 'Please enter a valid End Date');
	 	 		}
	 		}
		}

		// confirm start date before end date
		if (valError == false) {
			var result = compareDates(tStart, tEnd);
			if (result != 0) {
				valError = true;
 	 			if (result == 1) {
	 				showNotification('#editTemplateErrorMsg', 'Start Date must be before End Date');
	 			} else {
	 				showNotification('#editTemplateErrorMsg', 'Date range cannot exceed one year');
	 			}
			}		
		}
		
		// confirm template start date is not before class start date
		if (valError == false) {
			var result = compareDates(currentClassStart, tStart);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#editTemplateErrorMsg', 'Template Start Date cannot be before Class Start Date');
	 			} else {
	 				showNotification('#editTemplateErrorMsg', 'Class Start Date to Template Start Date cannot exceed one year');
	 			}
			}		
		}

		// confirm template end date is not after class end date
		if (valError == false) {
			var result = compareDates(tEnd, currentClassEnd);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#editTemplateErrorMsg', 'Template End Date cannot be after Class End Date');
	 			} else {
	 				showNotification('#editTemplateErrorMsg', 'Template End Date to Class End Date cannot exceed one year');
	 			}
			}		
		}
		
		if (valError == false) {

			var templateInfo     = new Object ();
			templateInfo.classId = $('#templateClass').val();	
			templateInfo.when    = $('#templateWhen').val();
			templateInfo.type    = $('#templateType').val();
			templateInfo.text    = templateText;
			templateInfo.start   = tStart;
			templateInfo.end     = tEnd;

			templateInfo.standardDBIds = new Array();
			templateInfo.myStandardDBIds = new Array();
			templateInfo.schoolStandardDBIds = new Array();
			
			if (templateInfo.type == "S") {
				for (var x=0; x<standards.length; x++) {
					templateInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}

			if (templateInfo.type == "MS") {
				for (var x=0; x<myStandards.length; x++) {
					templateInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
				}
			}
			
			if (templateInfo.type == "SS") {
				for (var x=0; x<schoolStandards.length; x++) {
					templateInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
				}
			}

			if (paymentNeeded == false) {
				showLoading();
				if (currentTemplateId == 0) {
					$.post('addTemplate', templateInfo, loadTemplates, "json");
				} else {
					templateInfo.templateId = currentTemplateId.substr(4);
					$.post('updateTemplate', templateInfo, loadTemplates, "json");
				}
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('#strategyGroup').change(function(){ 
		userInfo.currentStrategyGroup = $('#strategyGroup').val();
		getStrategies();
	}); 

	$('#grade').change(function(){ 
		searchShowAll = false;
		userInfo.currentGrade = $('#grade').val();
		getStandards();
	}); 
		
	$('#state').change(function(){
		searchShowAll = false;
		userInfo.currentState = $('#state').val();
		getStandards();
	}); 

	$('#subject').change(function(){ 
		searchShowAll = false;
		userInfo.currentSubject = $('#subject').val();
		getStandards();
	});

	$('#applyAllSearch').click(function(){ 
		$('#searchString').val("");
		searchShowAll = false;
		userInfo.currentSubject = $('#subject').val();
		getStandards();
	});
	
	function getStrategies() {
		if (firstTime == false) {showLoading();}
		action = 'getStrategies';
		$.getJSON('getStrategies', 'group='+userInfo.currentStrategyGroup, loadStrategies);
	}

	function loadStrategies(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.strategies.length != null) {

			$('#pickStrategyBody').html('');
			for (var x=0; x<data.strategies.length; x++) {
				var id = 'pickStrategy' + data.strategies[x].strategyId;
				var ls = '<tr class="pickStrategy pickStrategy' + data.strategies[x].category + '" id="' + id + '" style="cursor:pointer; background-color:#FFFFFF;">';
				ls = ls + '<td class="slCell selectStrategy" id="' + id + '0"></td>';
				ls = ls + '<td class="scCell" id="' + id + '1">' + data.strategies[x].code + '</td>';
				ls = ls + '<td class="srCell" id="' + id + '2">' + data.strategies[x].title + '</td>';
				ls = ls + '</tr>';
				$('#pickStrategyBody').append(ls);
			}

			if (tempStrategies != null && tempStrategies.length > 0) {
				for (var x=0; x<tempStrategies.length; x++) {
					$('#'+tempStrategies[x].id+'0').html('<img src="images/apply.png">');
				}
			}
		}
	}
	
	function getStandards() {

		if (firstTime == false) {showLoading();}

		sInfo = new Object();
		sInfo.currentGrade = userInfo.currentGrade;
		sInfo.currentState = (userInfo.currentState == null?"CC":userInfo.currentState); 
		sInfo.currentSubject = (userInfo.currentSubject == null?"L":userInfo.currentSubject);
		sInfo.currentClassId = currentClassId;

		action = 'getStandards';

		$.getJSON('getStandards', sInfo, loadStandards);
	}

	function loadStandards(data) {
		
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else if (data.standards.length != null) {
			var ls;
			$('#sBody').html('');

			for (var x=0; x<data.standards.length; x++) {

				var id = data.standards[x].dbId;

				ls = '<tr class="sRow ' + data.standards[x].subject + ' ' + data.standards[x].category + data.standards[x].subject + '" id="id' + id + '">';
				ls = ls + '<td class="sRowPart slCell" id="id' + id + 'I">' + data.standards[x].sI + '</td>';
				ls = ls + '<td class="sRowPart srCell" id="id' + id + 'D">' + data.standards[x].sD + '</td>';
				ls = ls + '</tr>';

				$('#sBody').append(ls);
			}

			if (tempStandards != null && tempStandards.length > 0) {
				for (var x=0; x<tempStandards.length; x++) {
					$('#'+tempStandards[x].dbId+'I').css({'background-color':'#E8EEF7'});
					$('#'+tempStandards[x].dbId+'D').css({'background-color':'#E8EEF7'});
				}
			}

			if (action == "getStandards") {
				
				$('#subjectListBody').html('');
				for(x=0; x<data.subjects.length;x++) {
					$('#subjectListBody').append('<tr><td class="subjectRow" id="subjectRow' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</td></tr>');
				}
				
				$('#gradeReportStandardSubject').html('<option value="0">All Subjects</option>');
				$('#reportSubject').html('<option value="VA2">View All</option>');
				$('#subject').html('');
				if (data.showSubjectIds != null) {
					for (var x=0; x<data.subjects.length; x++) {
						for (var z=0; z< data.showSubjectIds.length; z++) {
							if (data.showSubjectIds[z] == data.subjects[x].subjectId) {
								$('#subject').append('<option value="' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</option>');
								$('#reportSubject').append('<option value="' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</option>');
								$('#gradeReportStandardSubject').append('<option value="' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</option>');
							}
						}
					}
				}
				
				subjectsSelected = new Array();
				if (data.showSubjectIds != null && data.showSubjectIds.length > 0) {
					for (var x=0; x<data.showSubjectIds.length; x++) {
						subjectsSelected[x] = data.showSubjectIds[x];
					}
				} else {
					if ($('#addStandardsBox').css('display') != 'none') {showSubjectStandardsBox();}
				}
				
				var pos = 0;
				for (var z=0;z<classId.length;z++) {
					if (classId[z]==currentClassId) {
						pos = z;
					}
				}

				userInfo.currentState = data.currentState;
				userInfo.currentGrade = data.currentGrade;
				userInfo.currentSubject = data.currentSubject;
				
				currentStandards[pos].subject = userInfo.currentSubject;
				currentStandards[pos].grade = userInfo.currentGrade;
				currentStandards[pos].state = userInfo.currentState;
				
				$('#grade').val(userInfo.currentGrade);
				$('#state').val(userInfo.currentState);
				$('#subject').val(userInfo.currentSubject);

				$('#gradeReportStandardGrade').val(userInfo.currentGrade);
				$('#gradeReportStandardState').val(userInfo.currentState);
				$('#gradeReportStandardSubject').val(userInfo.currentSubject);
				
				sCategoryId	= new Array();
				sCategoryDesc = new Array();
				sCategoryType = new Array();

				grCategoryId	= new Array();
				grCategoryDesc = new Array();
				grCategoryType = new Array();
				
				for (var x=0; x<data.categories.length; x++) {
					sCategoryId[x] = data.categories[x].categoryId;
					sCategoryDesc[x] = data.categories[x].categoryDesc;
					sCategoryType[x] = data.categories[x].subject;
					grCategoryId[x] = data.categories[x].categoryId;
					grCategoryDesc[x] = data.categories[x].categoryDesc;
					grCategoryType[x] = data.categories[x].subject;
				}
				
				setCategoryDropdown();
				
			}
		}
	}

	function setCategoryDropdown() {
		
		var subject = $('#subject').val();
		
		$('#category').html('<option value="VA">View All</option>');
		$('#reportCategory').html('<option value="VA">View All</option>');
		$('#gradeReportStandardCategory').html('<option value="0">All Categories</option>');

		for (var x=0; x<sCategoryId.length; x++) {
			if (sCategoryType[x] == subject) {
				$('#category').append('<option value= "' + sCategoryId[x] + '">' + sCategoryDesc[x] + '</option>');
				$('#reportCategory').append('<option value= "' + sCategoryId[x] + '">' + sCategoryDesc[x] + '</option>');
				$('#gradeReportStandardCategory').append('<option value= "' + sCategoryId[x] + '">' + sCategoryDesc[x] + '</option>');
			}
		}

		$('#category').val('VA');
		$('#reportCategory').val('VA');
		$('#gradeReportStandardCategory').val('0');
		
		setStandardsList();
	}

	$('#category').change(function(){ 
		searchShowAll = false;
		setStandardsList();
	});

	function setStandardsList() {

		var subject = $('#subject').val();
		var category = $('#category').val();
		var showRows = '';

		if (category == 'VA') {
			showRows = '.' + subject;
		} else {
			showRows = '.' + category + subject;
		}

		if (searchShowAll == false) {
			$('.sRow').hide();
			$(showRows).show();
		} else {
			$('.sRow').show();
		} 
		
	}

	$('.pickStrategy').live('click', function() {

		if (tempStrategies == null) {
			tempStrategies = new Array();
			tempStrategies[0] = new Object();
			tempStrategies[0].id = this.id;
			tempStrategies[0].code = $('#'+this.id+'1').html();
			tempStrategies[0].title = $('#'+this.id+'2').html();
			$('#'+this.id+'0').html('<img src="images/apply.png">');
		} else {
			var found = false;
			var x = 0;
			while (x < tempStrategies.length && found == false) {
				if (tempStrategies[x].id == this.id) {
					$('#'+this.id+'0').html('');
					found = true;
					tempStrategies.splice(x, 1);
				} else {
					x++;
				}
			}
			if (found == false) {
				var	newPos = tempStrategies.length;
				tempStrategies[newPos] = new Object();
				tempStrategies[newPos].id = this.id;
				tempStrategies[newPos].code = $('#'+this.id+'1').html();
				tempStrategies[newPos].title = $('#'+this.id+'2').html();
				$('#'+this.id+'0').html('<img src="images/apply.png">');
			}
		}
		
	});
	
	$('.sRow').live('click', function() {

		var selectStandard = this.id;

		if (tempStandards == null) {
			tempStandards = new Array();
			tempStandards[0] = new Object();
			var ls = '#' + selectStandard;
			var dls = ls + 'D';
			var ils = ls + 'I';
			tempStandards[0].desc = $(dls).html();
			tempStandards[0].id = $(ils).html();
			tempStandards[0].dbId = selectStandard;
			
			$('#'+tempStandards[0].dbId+'I').css({'background-color':'#E8EEF7'});
			$('#'+tempStandards[0].dbId+'D').css({'background-color':'#E8EEF7'});

		
		} else {
			var found = false;
			var x = 0;
			while (x<tempStandards.length && found==false) {

				if (tempStandards[x].dbId == selectStandard) {

					$('#'+tempStandards[x].dbId+'I').css({'background-color':'white'});
					$('#'+tempStandards[x].dbId+'D').css({'background-color':'white'});

					found = true;
					tempStandards.splice(x, 1);
				} else {
					x++;
				}

			}
			if (found == false) {
				var	newPos = tempStandards.length;
				tempStandards[newPos] = new Object();
				var ls = '#' + selectStandard;
				var dls = ls + 'D';
				var ils = ls + "I";
				tempStandards[newPos].desc = $(dls).html();
				tempStandards[newPos].id = $(ils).html();
				tempStandards[newPos].dbId = selectStandard;

				$('#'+tempStandards[newPos].dbId+'I').css({'background-color':'#E8EEF7'});
				$('#'+tempStandards[newPos].dbId+'D').css({'background-color':'#E8EEF7'});
			}
		}
		
	});

	$('.mysRow').live('click', function() {

		var selectStandard = this.id;

		if (tempMyStandards == null) {
			tempMyStandards = new Array();
			tempMyStandards[0] = new Object();
			var ls = '#' + selectStandard;
			var dls = ls + 'D';
			var ils = ls + 'I';
			tempMyStandards[0].desc = $(dls).html();
			tempMyStandards[0].id = $(ils).html();
			tempMyStandards[0].dbId = selectStandard;
			$(this).css({'background-color':'#E8EEF7'});
		} else {
			var found = false;
			var x = 0;
			while (x<tempMyStandards.length && found==false) {
				
				if (tempMyStandards[x].dbId == selectStandard) {
					$(this).css({'background-color':'white'});
					found = true;
					tempMyStandards.splice(x, 1);
				} else {
					x++;
				}
				
			}
			if (found == false) {
				var	newPos = tempMyStandards.length;
				tempMyStandards[newPos] = new Object();
				var ls = '#' + selectStandard;
				var dls = ls + 'D';
				var ils = ls + "I";
				tempMyStandards[newPos].desc = $(dls).html();
				tempMyStandards[newPos].id = $(ils).html();
				tempMyStandards[newPos].dbId = selectStandard;
				$(this).css({'background-color':'#E8EEF7'});
			}
		}
		
	});

	$('.mySchoolRow').live('click', function() {

		var selectStandard = this.id;

		if (tempSchoolStandards == null) {
			tempSchoolStandards = new Array();
			tempSchoolStandards[0] = new Object();
			var ls = '#' + selectStandard;
			var dls = ls + 'D';
			var ils = ls + 'I';
			tempSchoolStandards[0].desc = $(dls).html();
			tempSchoolStandards[0].id = $(ils).html();
			tempSchoolStandards[0].dbId = selectStandard;
			$(this).css({'background-color':'#E8EEF7'});
		} else {
			var found = false;
			var x = 0;
			while (x<tempSchoolStandards.length && found==false) {
				
				if (tempSchoolStandards[x].dbId == selectStandard) {
					$(this).css({'background-color':'white'});
					found = true;
					tempSchoolStandards.splice(x, 1);
				} else {
					x++;
				}
				
			}
			if (found == false) {
				var	newPos = tempSchoolStandards.length;
				tempSchoolStandards[newPos] = new Object();
				var ls = '#' + selectStandard;
				var dls = ls + 'D';
				var ils = ls + "I";
				tempSchoolStandards[newPos].desc = $(dls).html();
				tempSchoolStandards[newPos].id = $(ils).html();
				tempSchoolStandards[newPos].dbId = selectStandard;
				$(this).css({'background-color':'#E8EEF7'});
			}
		}
		
	});

	$('.removeStrategy').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substring(14);
		var stanPos = parseInt(temp2,10);

		strategies.splice(stanPos, 1);
		
		$('#strategyBody').html('');
		
		if (strategies != null && strategies.length > 0) {
			for (x=0; x<strategies.length; x++) {
				var ls = '<tr><td class="slCell">' + strategies[x].code + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + strategies[x].title + '</td>';
				ls = ls + '<td class="scCell"><div class="removeStrategy buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="removeStrategy' + x + '"><img src="images/trash.png"></div></td></tr>';
				$('#strategyBody').append(ls);
			}
		}

	});

	$('.removeStan').live('click', function() {
		
		var standardBody = '';
		
		if (standardType == 'Lesson') {
			standardBody = '#saBody';
		} else if (standardType == 'Template') {
			standardBody = '#tsaBody';
		} else if (standardType == 'Assignment') {
			standardBody = '#asgStandardsBody';
		} else if (standardType == 'Assessment') {
			standardBody = '#asmStandardsBody';
		} else if (standardType == 'Unit') {
			standardBody = '#unitStandardsBody';
		}
		
		var temp1 = this.id;
		var temp2 = temp1.substring(4);
		var stanPos = parseInt(temp2,10);

		standards.splice(stanPos, 1);
		
		$(standardBody).html('');
		
		if (standards != null && standards.length > 0) {
			for (var x=0; x<standards.length; x++) {
				var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}

	});
	
	$('.removeMyStan').live('click', function() {
		
		var standardBody = '';
		
		if (standardType == 'Lesson') {
			standardBody = '#msaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		var temp1 = this.id;
		var temp2 = temp1.substring(4);
		var stanPos = parseInt(temp2,10);

		myStandards.splice(stanPos, 1);
		
		$(standardBody).html('');
		
		if (myStandards != null && myStandards.length > 0) {
			for (var y=0; y<myStandards.length; y++) {
				var ls = '<tr><td class="slCell">' + myStandards[y].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + myStandards[y].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeMyStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}
		
	});
	
	$('.removeSchoolStan').live('click', function() {
		
		var standardBody = '';
		if (standardType == 'Lesson') {
			standardBody = '#ssaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		var temp1 = this.id;
		var temp2 = temp1.substring(4);
		var stanPos = parseInt(temp2,10);

		schoolStandards.splice(stanPos, 1);
		
		$(standardBody).html('');
		
		if (schoolStandards != null && schoolStandards.length > 0) {
			for (var y=0; y<schoolStandards.length; y++) {
				var ls = '<tr><td class="slCell">' + schoolStandards[y].id + '</td>';
				ls = ls + '<td class="srCell" style="border-right:0px;">' + schoolStandards[y].desc + '</td>';
				ls = ls + '<td class="scCell"><div class="removeSchoolStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
				$(standardBody).append(ls);
			}
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}
		
	});

	function getStrategiesText() {
		var strategiesText = '';
		if (strategies != null) {
			for (var x=0; x<strategies.length; x++) {
				var id = strategies[x].id;
				var ls = '<div class="allStrategies" style="padding-left:3px;">';
				ls = ls + '<div id="' + id + '" style="float:left; margin-right:5px;">' + strategies[x].code + '</div>';
				ls = ls + '<div id="'+ id +'desc" style="margin-bottom:5px;">' + strategies[x].title + '</div>';
				ls = ls + '</div>';
				strategiesText = strategiesText + ls;
				
			}
		}
		return strategiesText;
	}

	function getStandardsText() {

		var standardsText = '';
		var ls = '';		

		if (standards != null) {
			for (var x=0; x<standards.length; x++) {
				var id = standards[x].dbId;
				ls = '<div style="padding-left:3px;"><div id="' + id + '" class="allStIDs" style="float:left; margin-right:5px;">' + standards[x].id + '</div><div class="allStText" style="margin-bottom:5px;" id="'+ id +'desc">' + standards[x].desc + '</div></div>';
				standardsText = standardsText + ls;
				
			}
		}

		return standardsText;
		
	}
	
	function getMyStandardsText() {

		var standardsText = '';
		var ls = '';		

		if (myStandards != null) {
			for (var y=0; y<myStandards.length; y++) {
				var id = myStandards[y].dbId;
				ls = '<div style="padding-left:3px;"><div id="' + id + '" class="allStIDs" style="float:left; margin-right:5px;">' + myStandards[y].id + '</div>&nbsp;<div class="allStText" style="float:left;margin-bottom:5px;" id="'+ id +'desc">' + myStandards[y].desc + '</div><div style="clear:both;"></div></div>';
				standardsText = standardsText + ls;
			}
		}

		return standardsText;
		
	}

	function getSchoolStandardsText() {

		var standardsText = '';
		var ls = '';		
	
		if (schoolStandards != null) {
			for (var y=0; y<schoolStandards.length; y++) {
				var id = schoolStandards[y].dbId;
				ls = '<div style="padding-left:3px;"><div id="' + id + '" class="allStIDs" style="float:left; margin-right:5px;">' + schoolStandards[y].id + '</div><div class="allStText" style="margin-bottom:5px;" id="' + id + 'desc">' + schoolStandards[y].desc + '</div></div>';
				standardsText = standardsText + ls;
			}
		}

		return standardsText;
		
	}
	
	function getMyStandards() {
		if (firstTime == false) {showLoading();}
		$.getJSON('getMyStandards', 'userMode='+userMode, loadMyStandards);
	}

	function loadMyStandards(data) {

		hideLoading();
		$('#mysBody').html('');
		$('#standardBody').html('');
		
		var fromHeight = $(window).height() - 220;
		if (fromHeight < 200) {fromHeight = 200;}
		$('#listMyStandardBox').css({'height':fromHeight+'px'});

		if (data.standards != null && data.standards.length > 0) {
			var ls = '';
			for (var x=0; x<data.standards.length; x++) {

				var id = data.standards[x].dbId;

				// build table to select my standards from within a lesson
				ls = '<tr class="mysRow" style="cursor:pointer;" id="mzid' + id + '">';
				ls = ls + '<td style="padding:5px; text-align:center; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8;" id="mzid' + id + 'I">' + data.standards[x].sI + '</td>';
				ls = ls + '<td style="padding:5px; text-align:center; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;"><div id="mzid' + id + 'D">' + data.standards[x].sD + '</div></td>';
				ls = ls + '</tr>';
				$('#mysBody').append(ls);
				
				// build table to manage (add, edit, delete) my standards
				ls = '<tr class="pickRow myStandardRow" style="cursor:pointer;" id="' + id + '">';
				ls = ls + '<td class="slCell" id="' + id + 'I">' + data.standards[x].sI + '</td>';
				ls = ls + '<td class="srCell" id="' + id + 'D">' + data.standards[x].sD + '</td>';
				ls = ls + '</tr>';
				$('#standardBody').append(ls);
				
			}

			ls = '<tr><td><img src="spacer.gif" width="120px" height="1"></td><td><img src="spacer.gif" width="350px" height="1"></td></tr>';
			$('#standardBody').append(ls);
			
			
			$('#mysTable').show();
			$('#myStandardMsg').html('Click on each standard to select.');
			
		} else {
			$('#mysTable').hide();
			$('#myStandardMsg').html('You currrently have no My List items.');
		}
		if (action == "addMyStandard" || action == "updateMyStandard" || action == "deleteMyStandard") {
			showAction();
		}
	}

	function getSchoolStandards() {
		if (firstTime == false) {showLoading();}
		$.getJSON('getSchoolStandards', 'user=user', loadSchoolStandards);
	}

	function loadSchoolStandards(data) {

		hideLoading();
		$('#mySchoolBody').html('');
		if (data.standards != null && data.standards.length > 0) {
			var ls = '';
			for (var x=0; x<data.standards.length; x++) {

				var id = data.standards[x].dbId;

				// build table to select my standards from within a lesson
				ls = '<tr class="mySchoolRow" style="cursor:pointer;" id="myid' + id + '">';
				ls = ls + '<td style="padding:5px; text-align:center; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8;" id="myid' + id + 'I">' + data.standards[x].sI + '</td>';
				ls = ls + '<td style="padding:5px; text-align:center; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;"><div id="myid' + id + 'D">' + data.standards[x].sD + '</div></td>';
				ls = ls + '</tr>';
				$('#mySchoolBody').append(ls);
				
			}

			$('#mySchoolTable').show();
			$('#schoolStandardMsg').html('Click on each item to select.');
			
		} else {
			$('#mySchoolTable').hide();
			$('#schoolStandardMsg').html('You currrently have no School Items.');
		}
	}

	
	function getTemplates() {
		showLoading();
		action = "getTemplates";
		$.getJSON('getTemplates', 'classId=all', loadTemplates);
	}

	function loadTemplates(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listTemplateBox').css({'height':fromHeight+'px'});

			haveTemplates = true;
			$('#templateBody').html('');
			hideBox('#editTemplateBox', 10);

			if (data.templates != null && data.templates.length > 0) {
				var ls;
				for (var x=0; x<data.templates.length; x++) {

					var id = data.templates[x].id;

					var type = data.templates[x].type;
					if (type == "L")       {type = userInfo.lessonLabel;}
					else if (type == "H")  {type = userInfo.tab2Label;}
					else if (type == "N")  {type = userInfo.tab3Label;}
					else if (type == "4")  {type = userInfo.tab4Label;}
					else if (type == "5")  {type = userInfo.tab5Label;}
					else if (type == "6")  {type = userInfo.tab6Label;}
					else if (type == "S")  {type = userInfo.sharedStandardsLabel;}
					else if (type == "SS") {type = userInfo.schoolStandardsLabel;}
					else if (type == "MS") {type = userInfo.myStandardsLabel;}
		
					var when = data.templates[x].when;
					if (when == "E") {when = "Everyday";}
					else if (when == "M") {when = "Monday";}
					else if (when == "T") {when = "Tuesday";}
					else if (when == "W") {when = "Wednesday";}
					else if (when == "R") {when = "Thursday";}
					else if (when == "F") {when = "Friday";}
					else if (when == "S") {when = "Saturday";}
					else if (when == "U") {when = "Sunday";}
					
					ls = '<tr class="pickRow templateRow template' + data.templates[x].classId + '" style="cursor:pointer;" id="tpid' + id + '">';
					
					var templateClassName = "";
					for (var z=0; z<classCount; z++) {
						if (data.templates[x].classId == classId[z]) {
							templateClassName = classNames[z];
							break;
						}
					}

					// data.templates[x].color = 5;
					data.templates[x].color = $('#pc'+data.templates[x].classId).css('background-color');
					
					ls = ls + '<td style="background-color:'+ data.templates[x].color + '; border:1px solid '+data.templates[x].color+'; border-top-width:0; border-bottom-color:white;"></td>';
					ls = ls + '<td class="slCell" style="text-align:left;" id="tpid' + id + 'C"><div>' + templateClassName + '</div><p class="hiddenInfo" id="tpid' + id + 'I">' + data.templates[x].classId + '</p></td>';
					ls = ls + '<td class="scCell" id="tpid' + id + 'W">' + when  + '</td>';
					ls = ls + '<td class="scCell" id="tpid' + id + 'Y">' + type  + '</td>';
					ls = ls + '<td class="scCell" id="tpid' + id + 'S">' + formatDateToShow(data.templates[x].start) + '</td>';
					ls = ls + '<td class="scCell" id="tpid' + id + 'D">' + formatDateToShow(data.templates[x].end)   + '</td>';

					if (data.templates[x].type == "S") {
						loadStandardArrays(data.templates[x].standards);
						ls = ls + '<td class="srCell" id="tpid' + id + 'T" style="display:none;">' + getStandardsText()  + '</td>';
					} else if (data.templates[x].type == "MS") {
						loadMyStandardArrays(data.templates[x].myStandards);
						ls = ls + '<td class="srCell" id="tpid' + id + 'T" style="display:none;">' + getMyStandardsText()  + '</td>';
					} else if (data.templates[x].type == "SS") {
						loadSchoolStandardArrays(data.templates[x].schoolStandards);
						ls = ls + '<td class="srCell" id="tpid' + id + 'T" style="display:none;">' + getSchoolStandardsText()  + '</td>';
					} else {
						ls = ls + '<td class="srCell" id="tpid' + id + 'T" style="display:none;">' + data.templates[x].text  + '</td>';
					}

					ls = ls + '</tr>';

					$('#templateBody').append(ls);
				}
				ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td><td><img src="spacer.gif" width="180px" height="1"></td><td><img src="spacer.gif" width="80px" height="1"></td><td><img src="spacer.gif" width="80px" height="1"></td><td><img src="spacer.gif" width="80px" height="1"></td><td><img src="spacer.gif" width="80px" height="1"></td><td><img src="spacer.gif" width="300px" height="1"></td></tr>';
				$('#templateBody').append(ls);
				$('#templateHead').show();
				$('#templateMsg').html('Create, edit, or delete templates.');
				$('.hiddenInfo').hide();
			} else {
				$('#templateHead').hide();
				$('#templateMsg').html('Use the "Create Template" button to create a template.');
			}

			if (action != "getTemplates") {
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				haveSearch = false;
			}

			if (window.location.hash == '#template') {
				showTemplates();
			} else {
				hideBox("#editTemplateBox", 10);
				getLessons();
			}
			showAction();
			
		}		
	
	}

	function showTeachers() {
		hideAll();
		$('#teacherView').show();
	}

	function showStandards() {
		hideAll();
		$('#standardView').show();
	}

	function getLessons() {

		if  (lessonView == "week" || lessonView == "day") {
			if (haveWeeks == false) {
				requestWeeks = new Object();
				requestWeeks.monday = gMonday;
				requestWeeks.userMode = userMode;
				requestWeeks.teacherId = currentTeacherId;
				requestWeeks.yearId = currentYearId;
				if (firstTime == true) {requestWeeks.firstTime = "Y";} else {requestWeeks.firstTime = "N";}	
				showLoading();
				if (userMode == "S") {
					studentData.monday = gMonday;
					studentData.viewType = "W";
					$.getJSON('launchStudent', studentData, loadStudentWeeks);
				} else {
					$.getJSON('getLessonsEvents', requestWeeks, loadWeeks);
				}
			}
		} else {
			requestClass = new Object();
			requestClass.lessonView = lessonView;
			requestClass.userMode = userMode;
			requestClass.teacherId = currentTeacherId;
			requestClass.yearId = currentYearId;
			if (lessonView == "month") {
				requestClass.monday = mMonth + "/01/" + mYear; 
				if (haveMonth == false) {
					showLoading();
					if (userMode == "S") {
						studentData.monday = requestClass.monday;
						studentData.viewType = "M";
						$.getJSON('launchStudent', studentData, loadStudentMonth);
					} else {
						$.getJSON('getMonthLessons', requestClass, loadMonth);
					}
				}
			} else {
				requestClass.classId = currentClassId;
				if (haveList == false) {
					showLoading();
					$.getJSON('getClassLessons', requestClass, loadList);
				}
			}
		}
	}
	
	function loadStudentWeeks(data) {
		$('#weekLessonBox').data(data);
		loadWeeks(data);
		filterStudentPlans();
	}
	
	function loadStudentMonth(data) {
		$('#monthBox').data(data);
		loadMonth(data);
		filterStudentPlans();
	}
	
	function filterStudentPlans() {
		var selectedTeacher = $('#studentList').data('selected');
		if (selectedTeacher != 0) {
			$('.event, .lesson').each(function() {
				if ($(this).data('teacher') != selectedTeacher) {
					$(this).hide();
				} else{
					$(this).show();
				}
			});
		} else {
			$('.event, .lesson').show();
		}
	}

	$('#copyMonday').click(function() {

		var valError = false;
		clearNotification('#classErrorMsg');
		
		if (cDays > 0) {
			
			var day1Start = $.trim($('#dayStart0').val());
			var day1End = $.trim($('#dayEnd0').val());
			
			if (day1Start != "") {
				if (valTime(day1Start) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Day 1 Start Time');
				}
			}

			if (day1End != "") {
				if (valTime(day1End) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Day 1 End Time');
				}
			}

			if (valError == false) {
				var ds, de;
				for (var x=1; x<cDays; x++) {
					ds = '#dayStart' + x;
					de = '#dayEnd' + x;
					$(ds).val(day1Start);
					$(de).val(day1End);
				}
			}
		
		} else {
			
			var monStart = $.trim($('#mondayStart').val());
			var monEnd = $.trim($('#mondayEnd').val());
			var monStart2 = $.trim($('#mondayStart2').val());
			var monEnd2 = $.trim($('#mondayEnd2').val());
			
			if (monStart != "") {
				if (valTime(monStart) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Monday Start Time');
				}
			}

			if (monEnd != "") {
				if (valTime(monEnd) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Monday End Time');
				}
			}

			if (monStart2 != "") {
				if (valTime(monStart2) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Week 2 Monday Start Time');
				}
			}

			if (monEnd2 != "") {
				if (valTime(monEnd2) == false) {
					valError = true;
					showNotification('#classErrorMsg', 'Please enter a valid Week 2 Monday End Time');
				}
			}
			if (valError == false) {
				$('#tuesdayStart').val(monStart);
				$('#tuesdayEnd').val(monEnd);
				$('#wednesdayStart').val(monStart);
				$('#wednesdayEnd').val(monEnd);
				$('#thursdayStart').val(monStart);
				$('#thursdayEnd').val(monEnd);
				$('#fridayStart').val(monStart);
				$('#fridayEnd').val(monEnd);
				$('#sundayStart').val(monStart);
				$('#sundayEnd').val(monEnd);
				$('#saturdayStart').val(monStart);
				$('#saturdayEnd').val(monEnd);
				$('#tuesdayStart2').val(monStart2);
				$('#tuesdayEnd2').val(monEnd2);
				$('#wednesdayStart2').val(monStart2);
				$('#wednesdayEnd2').val(monEnd2);
				$('#thursdayStart2').val(monStart2);
				$('#thursdayEnd2').val(monEnd2);
				$('#fridayStart2').val(monStart2);
				$('#fridayEnd2').val(monEnd2);
				$('#sundayStart2').val(monStart2);
				$('#sundayEnd2').val(monEnd2);
				$('#saturdayStart2').val(monStart2);
				$('#saturdayEnd2').val(monEnd2);
			}
		
		}		
		
		return false;
		
	});

	function getCurrentMonth() {
		
		var monthString;
		
		switch (mMonth) {
			case 1: monthString = "January"; break;
			case 2: monthString = "February"; break;
			case 3: monthString = "March"; break;
			case 4: monthString = "April"; break;
			case 5: monthString = "May"; break;
			case 6: monthString = "June"; break;
			case 7: monthString = "July"; break;
			case 8: monthString = "August"; break;
			case 9: monthString = "September"; break;
			case 10: monthString = "October"; break;
			case 11: monthString = "November"; break;
			case 12: monthString = "December"; break;
			default: monthString = "January";
		}
	
		monthString += " " + mYear;
		
		return monthString;
		
	}

	$('#useSchoolStart').click(function() {

		if ($('#useSchoolStart').prop('checked')) {
			$('#classStartDate').val(formatDateToShow(userInfo.firstDay));
			$('#classStartDate').prop("disabled", true);
		}
		else
		{
			$('#classStartDate').prop("disabled", false);
		}

	});
	
	$('#useSchoolEnd').click(function() {

		if ($('#useSchoolEnd').prop('checked')) {
			$('#classEndDate').val(formatDateToShow(userInfo.lastDay));
			$('#classEndDate').prop("disabled", true);
		}
		else
		{
			$('#classEndDate').prop("disabled", false);
		}

	});


	$('#useClassStart').click(function() {

		if ($('#useClassStart').prop('checked')) {
			$('#templateStart').val(formatDateToShow(currentClassStart));
			$('#templateStart').prop("disabled", true);
		}
		else
		{
			$('#templateStart').prop("disabled", false);
		}

	});
	
	$('#useClassEnd').click(function() {

		if ($('#useClassEnd').prop('checked')) {
			$('#templateEnd').val(formatDateToShow(currentClassEnd));
			$('#templateEnd').prop("disabled", true);
		}
		else
		{
			$('#templateEnd').prop("disabled", false);
		}

	});
	
	function loadStrategiesText() {

		$('#strategyBody').html('');

		strategies = null;
		
		if (currentStrategiesText != "") {

			var fType = "ID";
			var text = "";
			var ls = '';
			var x = 0;
			strategies = new Array();

			$(currentStrategiesText).children().each(function(){
				
				$(this).children().each(function(){
	
					text = $(this).html();
					
					if (fType == "ID") {
						strategies[x] = new Object();
						strategies[x].id = this.id;
						strategies[x].code = text;
						fType = "DESC";
					} else {
						strategies[x].title = text;
						x++;
						fType = "ID";
					}
					
				});
			});

			if (x != 0) {
				for (x=0; x<strategies.length; x++) {
					var ls = '<tr><td class="slCell">' + strategies[x].code + '</td>';
					ls = ls + '<td class="srCell" style="border-right:0px;">' + strategies[x].title + '</td>';
					ls = ls + '<td class="scCell"><div class="removeStrategy buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="removeStrategy' + x + '"><img src="images/trash.png"></div></td></tr>';
					$('#strategyBody').append(ls);
				}
			} else {
				strategies = null;
			}
		
		}
		
		if (strategies != null) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$('#strategyBody').append(ls);
		}

	}

	function loadStandardsText() {

		var standardBody = '';
		
		if (standardType == 'Lesson') {
			standardBody = '#saBody';
		} else if (standardType == 'Template') {
			standardBody = '#tsaBody';
		} else if (standardType == 'Assignment') {
			standardBody = '#asgStandardsBody';
		} else if (standardType == 'Assessment') {
			standardBody = '#asmStandardsBody';
		} else if (standardType == 'Unit') {
			standardBody = '#unitStandardsBody';
		}
		
		$(standardBody).html('');

		standards = null;
		
		if (currentStandardsText != "") {

			var fType = "ID";
			var text = "";
			var ls = '';
			var x = 0;
			standards = new Array();

			$(currentStandardsText).children().each(function(){
				
				$(this).children().each(function(){
	
					text = $(this).html();
					
					if (fType == "ID") {
						standards[x] = new Object();
						standards[x].dbId = this.id;
						standards[x].id = text;
						fType = "DESC";
					} else {
						standards[x].desc = text;
						x++;
						fType = "ID";
					}
					
				});
			});

			if (x != 0) {
				for (x=0; x<standards.length; x++) {
					var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
					ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
					ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
					$(standardBody).append(ls);
				}
			} else {
				standards = null;
			}
		
		}
		
		if (standards != null) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}

	}

	function loadMyStandardsText() {

		var standardBody = '';
		
		if (standardType == 'Lesson') {
			standardBody = '#msaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		$(standardBody).html('');

		myStandards = null;
		
		if (currentMyStandardsText != "") {

			var fType = "ID";
			var text = "";
			var ls = '';
			var x = 0;

			myStandards = new Array();
			
			$(currentMyStandardsText).children().each(function(){
				
				$(this).children().each(function(){
	
					text = $(this).html();
					
					if (fType == "ID") {
						myStandards[x] = new Object();
						myStandards[x].dbId = this.id;
						myStandards[x].id = text;
						fType = "DESC";
					} else if (fType == "DESC") {
						myStandards[x].desc = text;
						x++;
						fType = "CLEAR";
					} else {
						fType = "ID";
					}
					
				});
			});

			if (x != 0) {
				for (var y=0; y<myStandards.length; y++) {
					var ls = '<tr><td class="slCell">' + myStandards[y].id + '</td>';
					ls = ls + '<td class="srCell" style="border-right:0px;">' + myStandards[y].desc + '</td>';
					ls = ls + '<td class="scCell"><div class="removeMyStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
					$(standardBody).append(ls);
				}
			} else {
				myStandards = null;
			}
			
		}

		if (myStandards != null) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}

	}

	function loadSchoolStandardsText() {

		var standardBody = '';
		
		if (standardType == 'Lesson') {
			standardBody = '#ssaBody';
		} else {
			standardBody = '#tsaBody';
		}
		
		$(standardBody).html('');

		schoolStandards = null;
		
		if (currentSchoolStandardsText != "") {

			var fType = "ID";
			var text = "";
			var ls = '';
			var x = 0;

			schoolStandards = new Array();
			
			$(currentSchoolStandardsText).children().each(function(){
				
				$(this).children().each(function(){
	
					text = $(this).html();
					
					if (fType == "ID") {
						schoolStandards[x] = new Object();
						schoolStandards[x].dbId = this.id;
						schoolStandards[x].id = text;
						fType = "DESC";
					} else {
						schoolStandards[x].desc = text;
						x++;
						fType = "ID";
					}
					
				});
			});

			if (x != 0) {
				for (var y=0; y<schoolStandards.length; y++) {
					var ls = '<tr><td class="slCell">' + schoolStandards[y].id + '</td>';
					ls = ls + '<td class="srCell" style="border-right:0px;">' + schoolStandards[y].desc + '</td>';
					ls = ls + '<td class="scCell"><div class="removeSchoolStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + y + '"><img src="images/trash.png"></div></td></tr>';
					$(standardBody).append(ls);
				}
			} else {
				schoolStandards = null;
			}
			
		}

		if (schoolStandards != null) {
			var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
			$(standardBody).append(ls);
		}

	}

	function loadStrategiesArrays(data) {
		strategies = new Array();
		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				strategies[x] = new Object();
				strategies[x].id = "pickStrategy" + data[x].strategyId;
				strategies[x].code = data[x].code;
				strategies[x].title = data[x].title;
			}
		} else {
			strategies = null;
		}
	}

	function loadStandardArrays(data) {
		
		standards = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				standards[x] = new Object();
				standards[x].dbId = "id" + data[x].dbId;
				standards[x].id   = data[x].id;
				standards[x].desc = data[x].desc;
			}
		} else {
			standards = null;
		}
		
	}

	function loadMyStandardArrays(data) {
		
		myStandards = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				myStandards[x] = new Object();
				myStandards[x].dbId = "mzid" + data[x].dbId;
				myStandards[x].id   = data[x].id;
				myStandards[x].desc = data[x].desc;
			}
		} else {
			myStandards = null;
		}
		
	}

	function loadSchoolStandardArrays(data) {
		
		schoolStandards = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				schoolStandards[x] = new Object();
				schoolStandards[x].dbId = "myid" + data[x].dbId;
				schoolStandards[x].id   = data[x].id;
				schoolStandards[x].desc = data[x].desc;
			}
		} else {
			schoolStandards = null;
		}
		
	}

	function checkLessonText(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'LT').html() == "N" || oldLesson != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'LT').html("N");
			$('#'+currentClassId+currentSequence+'LWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'LMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'LLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'LEH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'LSH').removeClass("allTemplates");
		}
		return textField;
	}
	
	function checkHomeworkText(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'HT').html() == "N" || oldHomework != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'HT').html("N");
			$('#'+currentClassId+currentSequence+'HWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'HMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'HLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'HEH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'HSH').removeClass("allTemplates");
		}
		return textField;
	}

	function checkNotesText(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'NT').html() == "N" || oldNotes != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'NT').html("N");
			$('#'+currentClassId+currentSequence+'NWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'NMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'NLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'NEH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'NSH').removeClass("allTemplates");
		}
		return textField;
	}

	function checkTab4Text(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'4T').html() == "N" || oldTab4 != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'4T').html("N");
			$('#'+currentClassId+currentSequence+'4WH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'4MH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'4LH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'4EH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'4SH').removeClass("allTemplates");
		}
		return textField;
	}

	function checkTab5Text(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'5T').html() == "N" || oldTab5 != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'5T').html("N");
			$('#'+currentClassId+currentSequence+'5WH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'5MH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'5LH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'5EH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'5SH').removeClass("allTemplates");
		}
		return textField;
	}

	function checkTab6Text(currentText) {
		var textField = "";
		if ($('#'+currentClassId+currentSequence+'6NT').html() == "N" || oldTab6 != currentText) {
			textField = currentText;
			$('#'+currentClassId+currentSequence+'6T').html("N");
			$('#'+currentClassId+currentSequence+'6WH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'6MH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'6LH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'6EH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'6SH').removeClass("allTemplates");
		}
		return textField;
	}

	function checkStandardsText() {

		// if no prior standards data, return true
		if (oldStandardDBIds == null) {
			return true;
		}

		standardDBIds = new Array();

		var standardsChange = false;
		
		if ((standards == null && oldStandardDBIds != null) || (standards != null && oldStandardDBIds == null)) {
			standardsChange = true;
		} else if (standards != null && oldStandardDBIds != null) {
			for (var x=0; x<standards.length; x++) {
				standardDBIds[x] = standards[x].dbId;
			}
			if(oldStandardDBIds.sort().join(',') !== standardDBIds.sort().join(',')) {
			    standardsChange = true;
			}
		}
		
		if (standardsChange == true) {
			$('#'+currentClassId+currentSequence+'ST').html("N");
			$('#'+currentClassId+currentSequence+'SWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SEH').removeClass("allTemplates");
			return true;
		} else {
			return false;
		}

	}
	
	function checkMyStandardsText() {

		// if no prior standards data, return true
		if (oldMyStandardDBIds == null) {
			return true;
		}

		myStandardDBIds = new Array();

		var myStandardsChange = false;
		
		if ((myStandards == null && oldMyStandardDBIds != null) || (myStandards != null && oldMyStandardDBIds == null)) {
			myStandardsChange = true;
		} else if (myStandards != null && oldMyStandardDBIds != null) {
			for (var x=0; x<myStandards.length; x++) {
				myStandardDBIds[x] = myStandards[x].dbId;
			}
			if(oldMyStandardDBIds.sort().join(',') !== myStandardDBIds.sort().join(',')) {
			    myStandardsChange = true;
			}
		}
		
		if (myStandardsChange == true) {
			$('#'+currentClassId+currentSequence+'MST').html("N");
			$('#'+currentClassId+currentSequence+'MSWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'MSMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'MSLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'MSEH').removeClass("allTemplates");
			return true;
		} else {
			return false;
		}

	}

	function checkSchoolStandardsText() {

		// if no prior standards data, return true
		if (oldSchoolStandardDBIds == null) {
			return true;
		}

		schoolStandardDBIds = new Array();

		var schoolStandardsChange = false;
		
		if ((schoolStandards == null && oldSchoolStandardDBIds != null) || (schoolStandards != null && oldSchoolStandardDBIds == null)) {
			schoolStandardsChange = true;
		} else if (schoolStandards != null && oldSchoolStandardDBIds != null) {
			for (var x=0; x<schoolStandards.length; x++) {
				schoolStandardDBIds[x] = schoolStandards[x].dbId;
			}
			if(oldSchoolStandardDBIds.sort().join(',') !== schoolStandardDBIds.sort().join(',')) {
			    schoolStandardsChange = true;
			}
		}
		
		if (schoolStandardsChange == true) {
			$('#'+currentClassId+currentSequence+'SST').html("N");
			$('#'+currentClassId+currentSequence+'SSWH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SSMH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SSLH').removeClass("allTemplates");
			$('#'+currentClassId+currentSequence+'SSEH').removeClass("allTemplates");
			return true;
		} else {
			return false;
		}

	}
	
	function showProgressBar() {
		if ($('#loadBackground').length == 0) {
			var width = parseInt($(document).width()),
				height = parseInt($(document).height());
			$('body').append('<div id="loadBackground" class="load_background" style="width:'+width+'px;height:'+height+'px;"></div>');
		}
		
		$('#progressBar').css('width', '0%');
		showBox('#progressBarContainer', 50);
	}
	
	function hideProgressBar() {
		if ($('#loadBackground').length > 0) {
			$('#loadBackground').remove();
		}
		$('#progressBarContainer').hide();		
	}
	
	function showLoading(timeout) {
		if ($('#loadBackground').length == 0) {
			var width = parseInt($(document).width()),
				height = parseInt($(document).height());
			$('body').append('<div id="loadBackground" class="load_background" style="width:'+width+'px;height:'+height+'px;"></div>');
		}
		
		showBox('#load', 50);
		
		if (!timeout || timeout > -1) {
			if (!timeout) {
				timeout = 65000;
			}
			loadingTimerId = setTimeout(function() {
				hideLoading();
				showErrorBox('Your request has timed out.  If the problem continues, please close and then restart your internet browser to establish a new connection with our application servers.');
			}, timeout);
		} 
	}
	
	function hideLoading() {
		if (loadingTimerId) {
			clearTimeout(loadingTimerId);
		}
		
		if ($('#loadBackground').length > 0) {
			$('#loadBackground').remove();
		}
		$('#load').hide();		
	}
	
	$('#purchaseButton').click(function() {

		clearNotification('#paymentErrorMsg');
		$('#ccType').val(0);
		$('#ccNumber').val("");
		$('#ccMonth').val(0);
		$('#ccYear').val(0);
		$('#ccSecurity').val("");

		hideAll();
		$('#purchaseBox').show();

	});

	$('#purchaseButton2').click(function() {
	
		clearNotification('#paymentErrorMsg');
		$('#ccType').val(0);
		$('#ccNumber').val("");
		$('#ccMonth').val(0);
		$('#ccYear').val(0);
		$('#ccSecurity').val("");


		hideBox('#expireMsg', 30);
		hideBox('#editEventBox', 10);
		hideBox('#editLessonBox', 10);
		
		hideAll();
		$('#purchaseBox').show();
	
		return false;
	
	});
	
	$('#purchaseButton3').click(function() {
		
		clearNotification('#paymentErrorMsg');
		$('#ccType').val(0);
		$('#ccNumber').val("");
		$('#ccMonth').val(0);
		$('#ccYear').val(0);
		$('#ccSecurity').val("");

		hideBox('#expiringMsg', 30);
		hideBox('#editEventBox', 10);
		hideBox('#editLessonBox', 10);
		
		hideAll();
		$('#purchaseBox').show();
	
		return false;
	
	});
	
	$('#cancelPurchase').click(function() {
		action = "";
		showPlans();
	});

	$('#ccSecurityMsg').click(function() {

		showErrorBox('The 3 digit code on the back of your credit card. For American Express, it is the 4 digit code on the front of the card.');
		
		return false;

	});

	$('#applyPurchase').click(function() {

		var valError = false;
		clearNotification('#paymentErrorMsg');

		var ccType = $('#ccType').val();
		var ccNumber = $.trim($('#ccNumber').val());
		var ccMonth = $('#ccMonth').val();
		var ccYear = $('#ccYear').val();
		var ccSecurity = $.trim($('#ccSecurity').val());
		var ccName = $.trim($('#ccName').val());
		var ccAmount = "";
		var numYears = 0;

		if (ccSecurity == "") {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please enter a Security Code');
		}
		
		if (ccMonth == 0) {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please enter an Expiration Month');
		}

		if (ccYear == 0) {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please enter an Expiration Year');
		}
		
		if (ccNumber == "") {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please enter a Card Number');
		}

		if (ccName == "") {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please enter Name on Card');
		}

		if (ccType == 0) {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please select a Card Type');
		}

		if ($('input[name="paymentOption"]')[0].checked == true) {
			ccAmount = "12.00";
			numYears = 1;
		} else if ($('input[name="paymentOption"]')[1].checked == true) { 
			ccAmount = "22.00";
			numYears = 2;
		} else if ($('input[name="paymentOption"]')[2].checked == true) {
			ccAmount = "30.00";
			numYears = 3;
		} else {
			valError = true;
			showNotification('#paymentErrorMsg', 'Please select a Subscription Plan');

		}
		
		if (valError == false) {
			ccInfo = new Object();
			ccInfo.ccType      = ccType;
			ccInfo.ccName      = ccName;	
			ccInfo.ccNumber    = ccNumber;
			ccInfo.ccExpire    = "".concat(ccMonth, ccYear);
			ccInfo.ccSecurity  = ccSecurity;
			ccInfo.ccAmount    = ccAmount;
			ccInfo.numYears    = numYears;
			ccInfo.numTeachers = 1;
			
			showLoading();
			$.getJSON('checkLogin', {}, function(data){
				if (data.notLoggedIn == "true") {
					hideLoading();
					showLogin();
				} else if (data.error == "true") {
					hideLoading();
					showErrorMsg();
				} else {
					$.post('makePayment', ccInfo, paymentMade, "json");
				}
			});
		}

	});

	function paymentMade(data) {

		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showNotification('#paymentErrorMsg', data.respMsg);
		} else {

			paymentNeeded = false;

			userInfo.paidThroughDate = data.paidThroughDate;
			$('#paidThroughDate').html(userInfo.paidThroughDate);
			
			$('#extend1').html(data.extend1);
			$('#extend2').html(data.extend2);
			$('#extend3').html(data.extend3);

			loadPayments(data.payments);
			
			$('#purchaseBox').hide();
			$('#editAccountBox').show();
			
			lastPaymentId = data.payments[0].paymentId;
			action = "makePayment";
			showPlans();
			
		}
		
	}
	
	$('.classItem').live('click', function() {
		if (fromCheckBox == true) {
			fromCheckBox = false;
		} else {
			if (this.id == "allClasses" || this.id == "noClasses") {
				for (var z=0; z<classCount; z++) {
					var CBcId = '#CBcId' + classId[z];
					var hsClassId = '.class' + classId[z];
					if (this.id == "allClasses") {
						$(CBcId).prop('checked',true);
						showClassLessons(hsClassId);
					} else {
						$(CBcId).prop('checked',false);
						hideClassLessons(hsClassId);
					}
				}
				if (this.id == "allClasses") {
					showClassCount = classCount;
					$('#viewClassLabel').html("All Classes");
				} else {
					showClassCount = 0;
					$('#viewClassLabel').html("No Classes");
				}
			} else {
				var CBcId = '#CB' + this.id;
				var hsClassId = '.class' +  this.id.substring(3);
				if ($(CBcId).prop('checked')) {
					$(CBcId).prop('checked',false);
					hideClassLessons(hsClassId);
					showClassCount--;
					if (showClassCount == 0) {
						$('#viewClassLabel').html("No Classes");
					} else {
						if (showClassCount == 1) {
							$('#viewClassLabel').html("1 Class");
						} else {
							$('#viewClassLabel').html(showClassCount + " Classes");
						}
					}
				} else {
					$(CBcId).prop('checked',true);
					showClassLessons(hsClassId);
					showClassCount++;
					if (showClassCount == classCount) {
						$('#viewClassLabel').html("All Classes");
					} else {
						if (showClassCount == 1) {
							$('#viewClassLabel').html("1 Class");
						} else {
							$('#viewClassLabel').html(showClassCount + " Classes");
						}
					}
				}
			}
		}
		changeViewList = true;
	});
	
	$('.CBclassItem').live('click', function() {
		var hsClassId = '.class' +  this.id.substring(5);

		if ($(this).prop('checked')) {
			showClassLessons(hsClassId);
			showClassCount++;
			if (showClassCount == classCount) {
				$('#viewClassLabel').html("All Classes");
			} else {
				if (showClassCount == 1) {
					$('#viewClassLabel').html("1 Class");
				} else {
					$('#viewClassLabel').html(showClassCount + " Classes");
				}
			}
		} else {
			hideClassLessons(hsClassId);
			showClassCount--;
			if (showClassCount == 0) {
				$('#viewClassLabel').html("No Classes");
			} else {
				if (showClassCount == 1) {
					$('#viewClassLabel').html("1 Class");
				} else {
					$('#viewClassLabel').html(showClassCount + " Classes");
				}
			}
		}
		fromCheckBox = true;
	});

	$('#viewButton').click(function(e) {

		if ($('#viewList').css('display') == 'none') {
			hideLists();
			if (userMode == "S") {
				$('#viewList').css({'top':$(this).offset().top+40,'left':$(this).offset().left-214}).show();
			} else {
				$('#viewList').css({'top':$(this).offset().top+40,'left':$(this).offset().left-301}).show();
			}
			$('#pickListTop2').css({'top':$(this).offset().top+32,'left':$(this).offset().left+$(this).width()-25}).show();
		} else {
			$('#viewList').hide();
			$('#pickListTop2').hide();
		} 
		
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
	});
	
	$('#modeButton').click(function(e) {

		if ($('#modeList').css('display') == 'none') {
			hideLists();
			$('#modeList').css({'top':$(this).offset().top+28,'left':$(this).offset().left}).show();
		} else {
			$('#modeList').hide();
		}

		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}

	});

	$('#gotoButton').click(function(e) {

		if ($('#gotoList').css('display') == 'none') {
			hideLists();
			if (userMode == "T") {
				$('#gotoList').css({'top':$(this).offset().top+40,'left':$(this).offset().left-382}).show();
			} else {
				$('#gotoList').css({'top':$(this).offset().top+40,'left':$(this).offset().left-272}).show();
			}
			$('#pickListTop').css({'top':$(this).offset().top+32,'left':$(this).offset().left+$(this).width()-25}).show();
		} else {
			$('#gotoList').hide();
			$('#pickListTop').hide();
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
	});

	$('#adminButton').click(function(e) {
		
		if ($('#adminList').css('display') == 'none') {
			hideLists();
			$('#adminList').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+37,'left':$(this).offset().left+15}).show();
		} else {
			$('#adminList').hide();
			$('#pickListTop').hide();
		}

		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
		
	});

	$('#adminYearButton').click(function(e) {
		
		if ($('#adminYearList').css('display') == 'none') {
			hideLists();
			$('#adminYearList').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+37,'left':$(this).offset().left+15}).show();
		} else {
			$('#adminYearList').hide();
			$('#pickListTop').hide();
		}

		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
		
	});
	
	$('#studentButton').click(function(e) {
		
		if ($('#studentList').css('display') == 'none') {
			hideLists();
			$('#studentList').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+37,'left':$(this).offset().left+15}).show();
		} else {
			$('#studentList').hide();
			$('#pickListTop').hide();
		}

		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
		
	});
	
	$('#gradePeriodButton').click(function(e) {
		
		if ($('#gradePeriodList').css('display') == 'none') {
			hideLists();
			$('#gradePeriodList').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+37,'left':$(this).offset().left+15}).show();
		} else {
			$('#gradePeriodList').hide();
			$('#pickListTop').hide();
		}

		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
		
	});
	
	
	
	$('#nameButton').click(function(e) {
		
		if (studentData.studentId != null && studentData.studentId != 0) {
			if ($('#studentNameList').css('display') == 'none') {
				hideLists();
				$('#studentNameList').css({'top':$(this).offset().top+40,'left':$(this).offset().left+$(this).width()-105}).show();
				$('#pickListTop').css({'top':$(this).offset().top+32,'left':$(this).offset().left+$(this).width()-25}).show();
			} else {
				$('#studentNameList').hide();
				$('#pickListTop').hide();
			}
		} else {
			if ($('#nameList').css('display') == 'none') {
				hideLists();
				$('#nameList').css({'top':$(this).offset().top+40,'left':$(this).offset().left+$(this).width()-280}).show();
				$('#pickListTop').css({'top':$(this).offset().top+32,'left':$(this).offset().left+$(this).width()-25}).show();
			} else {
				$('#nameList').hide();
				$('#pickListTop').hide();
			}
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
	});

	$('#yearButton').click(function(e) {
		if ($('#yearList').css('display') == 'none') {
			hideLists();
			$('#yearList').css({'top':$(this).offset().top+40,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+32,'left':$(this).offset().left+15}).show();
		} else {
			$('#yearList').hide();
			$('#pickListTop').hide();
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
	});

	$('#moreButton').click(function(e) {
		if ($('#addList').css('display') == 'none') {
			hideLists();
			$('#addList').css({'top':$(this).offset().top+40,'left':$(this).offset().left}).show();
			$('#pickListTop').css({'top':$(this).offset().top+32,'left':$(this).offset().left+25}).show();
		} else {
			$('#addList').hide();
			$('#pickListTop').hide();
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}
	});
	
	$('.studentItem').live('click', function(e) {
		var data = $(this).data();
		var selected = $('#studentList').data('selected');
		if (selected != data.teacherId) {
			$('#studentLabel').html($(this).html());
			$('#studentList').data('selected', data.teacherId);
			loadGradePeriods(data);
			if ($('#studentGradesView2').is(':visible')) {
				initStudentGradesView();
			} else {
				if (!haveStudentPlans) {
					haveStudentPlans = true;
					haveWeeks = false;
					haveMonth = false;
					getLessons();
				} else {
					setStudentData(data);
					if  (lessonView == "week" || lessonView == "day") {
						data.days = $('#weekLessonBox').data().days;
						loadWeeks(data);
					} else {
						data.days = $('#monthBox').data().days;
						loadMonth(data);
					}
					filterStudentPlans();
				}
			}
		}
	});
	
	function setStudentData(data){
		var studentData = $('#studentDisplayName').data();
		data.studentFirstName = studentData.studentFirstName;
		data.studentLastName = studentData.studentLastName;
		data.newCommentT = studentData.newCommentT;
	}
	
	function loadGradePeriods(data) {
		var gradePeriods = data.gradePeriods;
		$('#gradePeriodList').html('');
		$('#gradePeriodLabel').html('All Periods');
		$('#gradePeriodList').data('selected', 0);
		delete studentData.gradePeriodId;
		delete studentData.gradePeriodStart;
		delete studentData.gradePeriodEnd;
		
		if (gradePeriods && gradePeriods.length > 0) {
			$('#gradePeriodList').append($('<div class="gradePeriodItem" id="gradePeriodItem0">').data({gradePeriodId : 0, name : 'All Periods'}).text('All Periods'));
			$.each(gradePeriods, function() {
				$('#gradePeriodList').append($('<div>').data(this).addClass('gradePeriodItem').attr('id', 'gradePeriodItem' + this.gradePeriodId).append(this.name));
			});
			$('#gradePeriodButton').show();
		} else {
			$('#gradePeriodButton').hide();
		}
	}
	
	$('.adminItem').live('click', function(e) {	

		$('#adminLabel').html($('#tIDN'+this.id.substring(3)).html());

		var teacherNum = this.id.substring(3);
		var newTeacherId = teacherList[teacherNum].teacherId;
		var newYearId = teacherList[teacherNum].yearId;

		if (currentTeacherId != newTeacherId) {
			
			haveComments = false;
			currentTeacherId = newTeacherId;
			currentYearId = newYearId;
			
			addUserModeToCache(userMode, currentTeacherId, currentYearId);
			
			loadAdminYears(teacherNum);

			requestClassList = new Object();
			requestClassList.userMode  = userMode;
			requestClassList.yearId    = newYearId;
			requestClassList.teacherId = currentTeacherId;
			
			$('#reportStart').val(formatDateToShow(teacherList[teacherNum].firstDay));
			$('#reportEnd').val(formatDateToShow(teacherList[teacherNum].lastDay));
			
			action = "getClassList";

			showLoading();
			$.getJSON('getClasses2', requestClassList, loadClassList);
		
		}
		
	});
	
	$('.adminYearItem').live('click', function(e) {	

		var tPos = 0;
		for (var x=0; x<teacherList.length; x++) {
			if (teacherList[x].teacherId == currentTeacherId) {
				tPos = x;
				break;
			}
		}
		
		var yPos = this.id.substring(13);

		if (currentYearId != teacherList[tPos].years[yPos].yearId) {
			
			currentYearId = teacherList[tPos].years[yPos].yearId;
			
			teacherList[tPos].yearId = teacherList[tPos].years[yPos].yearId;
			teacherList[tPos].firstDay = teacherList[tPos].years[yPos].firstDay;
			teacherList[tPos].lastDay = teacherList[tPos].years[yPos].lastDay;
		
			$('#adminYearLabel').html(teacherList[tPos].years[yPos].yearName);
			if (teacherList[tPos].years[yPos].active == true) {
				$('#adminYearButton').css({'background-color':'#FFFFFF'});
			} else {
				$('#adminYearButton').css({'background-color':'#FFC7CE'});
			}

			$('#reportStart').val(formatDateToShow(teacherList[tPos].firstDay));
			$('#reportEnd').val(formatDateToShow(teacherList[tPos].lastDay));

			requestClassList = new Object();
			requestClassList.userMode  = userMode;
			requestClassList.yearId    = currentYearId;
			requestClassList.teacherId = currentTeacherId;
			
			addUserModeToCache(userMode, currentTeacherId, currentYearId);
			
			action = "getClassList";

			showLoading();
			$.getJSON('getClasses2', requestClassList, loadClassList);
		
		}
		
	});

	$('.partItem').live('click', function(e) {
		if (fromCheckBox == true) {
			fromCheckBox = false;
		} else {
			if (this.id == "allItems" || this.id == "noItems") {
				for (var z=0; z<itemCount; z++) {
					var CBpId = '#CB' + partId[z];
					var hsPartId = '.' + partId[z];
					if (this.id == "allItems") {
						$(CBpId).prop('checked',true);
						showPart(hsPartId);
					} else {
						$(CBpId).prop('checked',false);
						hidePart(hsPartId);
					}
				}
			} else {
				var CBpId = '#CB' + this.id;
				var hsPartId = '.' +  this.id;
				if ($(CBpId).prop('checked')) {
					$(CBpId).prop('checked',false);
					hidePart(hsPartId);
				} else {
					$(CBpId).prop('checked',true);
					showPart(hsPartId);
				}
			}
		}
		if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}
		changeViewList = true;
	});
	
	$('.CBpartItem').live('click', function() {
		var hsPartId = '.' +  this.id.substring(2);
		if ($(this).prop('checked')) {
			showPart(hsPartId);
		} else {
			hidePart(hsPartId);
		}
		if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}
		fromCheckBox = true;
	});
	
	$('.yearItem').live('click', function() {
		if (this.id == "yearAdd") {
			currentView = "School Year";
			showAddYear();
		} else {

			haveEvents = false;
			haveTemplates = false;
			haveAssignments = false;
			haveAssessments = false;
			haveUnits = false;
			haveStudents = false;
			haveCommentTo = false;

			action = "changeYear";
			firstTime = true;
			showLoading();
			$.getJSON('changeTerm', 'yearId='+this.id.substring(4), loadSettings);
		}
	});

	$('.gradePeriodItem').live('click', function() {
		var data = $(this).data();
		var selected = $('#gradePeriodList').data('selected');
		if (selected != data.gradePeriodId) {
			haveStudentPlans = false;
			$('#gradePeriodLabel').html(data.name);
			$('#gradePeriodList').data('selected', data.gradePeriodId);
			studentData.gradePeriodId = data.gradePeriodId;
			studentData.gradePeriodStart = data.startDate;
			studentData.gradePeriodEnd = data.endDate;
			haveWeeks = false;
			haveMonth = false;
			if ($('#studentGradesView2').is(':visible')) {
				initStudentGradesView();
			} else {
				if (data.gradePeriodId == 0) {
					showToday();
				} else {
					changeDate(data.startDate);
				}
			}
		}
	});
	
	function showBox(boxName, boxZindex) {
		
		var windowHt = parseInt($(window).height(),10);
		var boxHt = parseInt($(boxName).height(),10);
		var newTop = parseInt($(document).scrollTop(),10);
		if (windowHt < boxHt) {
			newTop = newTop + 5;
		} else {
			newTop = newTop + ((windowHt-boxHt)/2);
		}

		var windowWidth = parseInt($(document).width(),10);
		var boxWidth = parseInt($(boxName).width(),10);
		var newLeft = 0;
		if (windowWidth < boxWidth) {
			newLeft = newLeft + 5;
		} else {
			newLeft = newLeft + ((windowWidth - boxWidth)/2);
		}
		
		$(boxName).css({top:newTop+'px', left:newLeft+'px'}).show();

		var docWidth = parseInt($(document).width());
		var docHeight = parseInt($(document).height());
		
		if (boxZindex == 10) {
			$('#editBackground').css({height:docHeight+'px', width:docWidth+'px'}).show();
		} else if (boxZindex == 30) {
			$('#msgBackground').css({height:docHeight+'px', width:docWidth+'px'}).show();
		}
		
	}

	function hideBox(boxName, boxZindex) {
		
		if (boxZindex == 10) {
			$('#editBackground').hide();
		} else if (boxZindex == 30) {
			$('#msgBackground').hide();
		}

		$(boxName).hide();
		
	}

	function hideLists() {

		if (tutorOn == false) {$('#gotoList').hide();}
		if (tutorOn == false) {$('#addList').hide();}
		if (tutorOn == false) {$('#notesList').hide();}	

		if (changeSpinCount == false) {$('#lessonActions').hide(); $('#copyList').hide(); lessonDoIt2On = false;} else {changeSpinCount = false;}
		if (changeMonthYear == false) {$('#pickDate').hide();} else {changeMonthYear = false;}
		if (changeViewList == false) {$('#viewList').hide();} else {changeViewList = false;}

		if (changePickClass == false) {$('#pickClass').hide();} else {changePickClass = false;}
		if (changePickUnit == false) {$('#pickUnit').hide();} else {changePickUnit = false;}
		if (changePickGradeLevel == false) {$('#pickGradeLevel').hide();} else {changePickGradeLevel = false;}
		
		if (changePickPeriod == false) {$('#pickGradingPeriod').hide();} else {changePickPeriod = false;}
		if (changePickCopyTeacher == false) {$('#pickCopyTeacher').hide();} else {changePickCopyTeacher = false;}
		if (changePickCopyYear == false) {$('#pickCopyYear').hide();} else {changePickCopyYear = false;}
		if (changePickCopyClass == false) {$('#pickCopyClass').hide();} else {changePickCopyClass = false;}
		if (changePickToClass == false) {$('#pickToClass').hide();} else {changePickToClass = false;}
		if (bannerMenuOpen == false) {$('#bannerMenu').hide();} else {bannerMenuOpen = false;}

		$('.pickList').hide();

		$('#modeList').hide();
		$('#adminList').hide();
		$('#yearList').hide();
		$('#teacherOptionList').hide();
		$('#pickListTop').hide();
		$('#pickListTop2').hide();

	}

	function hideAll() {
		$('.dateButton').hide();
		$('.searchButton').hide();
		$('.oneColumn').hide();
		$('.weekOne').hide();
		$('.weekTwo').hide();
		$('.weekThree').hide();
		$('.w1').hide();
		$('.w2').hide();
		$('.w3').hide();
		$('#monthBox').hide();
		$('#listBox').hide();
		$('#planBox').hide();
		$('#standardsDesc').hide();
		$('.formatBoxes').hide();
	}

	function showAction() {

		switch (action) {
			case "bumpLesson"       : $('#statusMsg').html("Lesson bumped<span id='undo' style='margin-left:10px; text-decoration:underline; cursor:pointer;'>Undo</span>");       $('#statusMsg').show(); break;
			case "extendLesson"     : $('#statusMsg').html("Lesson extended<span id='undo' style='margin-left:10px; text-decoration:underline; cursor:pointer;'>Undo</span>");     $('#statusMsg').show(); break;
			case "deleteLesson"     : $('#statusMsg').html("Lesson deleted<span id='undo' style='margin-left:10px; text-decoration:underline; cursor:pointer;'>Undo</span>");      $('#statusMsg').show(); break;
			case "makePayment"      : $('#statusMsg').html("Payment received!<span style='cursor:pointer; margin-left:5px; color:blue; text-decoration:underline;' class='receipt' id='r" + lastPaymentId + "'>Print receipt</span>");   $('#statusMsg').show(); break;
			case "updateLesson"     : $('#statusMsg').html("Lesson updated");      $('#statusMsg').show(); break;
			case "newClass"         : $('#statusMsg').html("Class added");         $('#statusMsg').show(); break;
			case "updateClass"      : $('#statusMsg').html("Class updated");       $('#statusMsg').show(); break;
			case "deleteClass"      : $('#statusMsg').html("Class deleted");       $('#statusMsg').show(); break;
			case "importLessons"    : $('#statusMsg').html("Lessons copied");      $('#statusMsg').show(); break;
			case "importEvents"     : $('#statusMsg').html("Events imported");     $('#statusMsg').show(); break;
			case "exportLessons"    : $('#statusMsg').html("Lessons exported");    $('#statusMsg').show(); break;
			case "exportEvents"     : $('#statusMsg').html("Events exported");     $('#statusMsg').show(); break;
			case "newEvent"         : $('#statusMsg').html("Event added");         $('#statusMsg').show(); break;
			case "updateEvent"      : $('#statusMsg').html("Event updated");       $('#statusMsg').show(); break;
			case "deleteEvent"      : $('#statusMsg').html("Event deleted");       $('#statusMsg').show(); break;
			case "addMyStandard"    : $('#statusMsg').html("My List added");       $('#statusMsg').show(); break;
			case "updateMyStandard" : $('#statusMsg').html("My List updated");     $('#statusMsg').show(); break;
			case "deleteMyStandard" : $('#statusMsg').html("My List deleted");     $('#statusMsg').show(); break;
			case "addTemplate"      : $('#statusMsg').html("Template added");      $('#statusMsg').show(); break;
			case "updateTemplate"   : $('#statusMsg').html("Template updated");    $('#statusMsg').show(); break;
			case "deleteTemplate"   : $('#statusMsg').html("Template deleted");    $('#statusMsg').show(); break;
			case "updateAccount"    : $('#statusMsg').html("Account updated");     $('#statusMsg').show(); break;
			case "updateDisplay"    : $('#statusMsg').html("Settings updated");    $('#statusMsg').show(); break;
			case "updateSharing"    : $('#statusMsg').html("Sharing updated");     $('#statusMsg').show(); break;
			case "updateSchoolYear" : $('#statusMsg').html("School Year updated"); $('#statusMsg').show(); break;
			case "undoAction"       : $('#statusMsg').html("Action undone");       $('#statusMsg').show(); break;
			case "removeClassDay"   : $('#statusMsg').html("Class Day removed");   $('#statusMsg').show(); break;
			case "removeTeacher"    : $('#statusMsg').html("Teacher removed");     $('#statusMsg').show(); break;
			case "addTeacher"       : $('#statusMsg').html("Teacher added");       $('#statusMsg').show(); break;
			case "resetTeacher"     : $('#statusMsg').html("Password reset");      $('#statusMsg').show(); break;
			case "addAssignment"    : $('#statusMsg').html("Assignment added");    $('#statusMsg').show(); break;
			case "updateAssignment" : $('#statusMsg').html("Assignment updated");  $('#statusMsg').show(); break;
			case "deleteAssignment" : $('#statusMsg').html("Assignment deleted");  $('#statusMsg').show(); break;
			case "addAssessment"    : $('#statusMsg').html("Assessment added");    $('#statusMsg').show(); break;
			case "updateAssessment" : $('#statusMsg').html("Assessment updated");  $('#statusMsg').show(); break;
			case "deleteAssessment" : $('#statusMsg').html("Assessment deleted");  $('#statusMsg').show(); break;
			case "addUnit"          : $('#statusMsg').html("Unit added");          $('#statusMsg').show(); break;
			case "updateUnit"       : $('#statusMsg').html("Unit updated");        $('#statusMsg').show(); break;
			case "deleteUnit"       : $('#statusMsg').html("Unit deleted");        $('#statusMsg').show(); break;
			case "newStudent"       : $('#statusMsg').html("Student added");       $('#statusMsg').show(); break;
			case "updateStudent"    : $('#statusMsg').html("Student updated");     $('#statusMsg').show(); break;
			case "deleteStudent"    : $('#statusMsg').html("Student deleted");     $('#statusMsg').show(); break;
			case "updateGrades"     : $('#statusMsg').html("Student Grades updated");    $('#statusMsg').show(); break;
			case "updateWeights"    : $('#statusMsg').html("Score Weights updated");     $('#statusMsg').show(); break;
			case "updateView"       : $('#statusMsg').html("View Preferences updated");  $('#statusMsg').show(); break;
			case "newGradingPeriod"       : $('#statusMsg').html("Grading Period added");       $('#statusMsg').show(); break;
			case "updateGradingPeriod"    : $('#statusMsg').html("Grading Period updated");     $('#statusMsg').show(); break;
			case "deleteGradingPeriod"    : $('#statusMsg').html("Grading Period deleted");     $('#statusMsg').show(); break;
			default : $('#statusMsg').hide();
		}		
	}

	$('#undo').live('click', function() {

		if (undoAction == "B" || undoAction == "E") {

			undoInfo = new Object();
			undoInfo.classId = undoClassId;
			undoInfo.numDays = undoNumDays;
			undoInfo.customDate = undoDate;
			undoInfo.extraLesson = undoExtraLesson;
			undoInfo.shiftLessons = "Y";
			
			showLoading();
			$.getJSON('deleteLesson', undoInfo, undoComplete);
			
		} else {
			
			undoInfo = new Object();
			undoInfo.classId = undoClassId;
			undoInfo.customDate = undoDate;
			undoInfo.extraLesson = undoExtraLesson;
			undoInfo.numDays = undoNumDays;
			undoInfo.shiftLessons = undoShiftLessons;
			undoInfo.lessonIds = deletedLessons;

			if (undoAction == "BB") {
				undoInfo.bumpBack = "Y";
				undoInfo.shiftLessons = "Y";
			}
			
			showLoading();
			$.getJSON('undoDeleteLesson', undoInfo, undoComplete);
			
		}
	
	});
	
	function undoComplete(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				action = 'undoAction';

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				getLessons();
			}
		}
	}

	function showMessage(msg) {
		$('#statusMsg').html(msg);
		$('#statusMsg').show();
	}
	
	function hideMessage() {
		$('#statusMsg').hide();
	}
	
	function addTemplateClass(data) {
	
		if (userMode == "T") {

			var ids = '';
			if (data.lTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "LWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "LLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "LMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "LEH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "LSH";
				$(ids).addClass("allTemplates");
			}

			if (data.hTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "HWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "HLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "HMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "HEH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "HSH";
				$(ids).addClass("allTemplates");
			}

			if (data.nTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "NWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "NLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "NMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "NEH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "NSH";
				$(ids).addClass("allTemplates");
			}

			if (data.t4Template == "Y") {
				ids = "#" + data.classId + data.sequence + "4WH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "4LH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "4MH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "4EH";
				$(ids).addClass("allTemplates");
			}

			
			if (data.t5Template == "Y") {
				ids = "#" + data.classId + data.sequence + "5WH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "5LH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "5MH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "5EH";
				$(ids).addClass("allTemplates");
			}
			
			if (data.t6Template == "Y") {
				ids = "#" + data.classId + data.sequence + "6WH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "6LH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "6MH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "6EH";
				$(ids).addClass("allTemplates");
			}
			
			if (data.sTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "SWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SEH";
				$(ids).addClass("allTemplates");
			}
			
			if (data.msTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "MSWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "MSLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "MSMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "MSEH";
				$(ids).addClass("allTemplates");
			}
			
			if (data.ssTemplate == "Y") {
				ids = "#" + data.classId + data.sequence + "SSWH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SSLH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SSMH";
				$(ids).addClass("allTemplates");
				ids = "#" + data.classId + data.sequence + "SSEH";
				$(ids).addClass("allTemplates");
			}
			
		}

	}	
	
	function hideEmptySections(data) {
	
		if (data.unitId == 0 || data.unitNum == "" || data.unitNum == null) {
			fieldId = '#' + data.classId + data.sequence + 'LUNW';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LUNM';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LUNE';
			$(fieldId).hide();
		}
		
		if (data.lessonTitle == '') {
			fieldId = '#' + data.classId + data.sequence + 'LTIW';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LTIM';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LTIE';
			$(fieldId).hide();
		}

		if (data.lessonText == '' || userInfo.lessonEnabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'LWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'LUH';
			$(fieldId).hide();
		}
	
		if (data.homeworkText == '' || userInfo.tab2Enabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'HWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'HUH';
			$(fieldId).hide();
		}
	
		if (data.notesText == '' || userInfo.tab3Enabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'NWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'NUH';
			$(fieldId).hide();
		}
		
		if (data.tab4Text == '' || userInfo.tab4Enabled == "N") {
			fieldId = '#' + data.classId + data.sequence + '4WH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4LH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4MH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4TH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4FH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4EH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4SH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '4UH';
			$(fieldId).hide();
		}
	
		if (data.tab5Text == '' || userInfo.tab5Enabled == "N") {
			fieldId = '#' + data.classId + data.sequence + '5WH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5LH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5MH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5TH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5FH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5EH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5SH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '5UH';
			$(fieldId).hide();
		}
	
		if (data.tab6Text == '' || userInfo.tab6Enabled == "N") {
			fieldId = '#' + data.classId + data.sequence + '6WH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6LH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6MH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6TH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6FH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6EH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6SH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + '6UH';
			$(fieldId).hide();
		}
	
		if (getMyStandardsText() == '' || userInfo.myStandardsEnabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'MSWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'MSUH';
			$(fieldId).hide();
		}
	
		if (getSchoolStandardsText() == '' || userInfo.schoolStandardsEnabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'SSWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSUH';
			$(fieldId).hide();
		}
	
		if (getStrategiesText() == '' || userInfo.strategiesEnabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'STRWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STREH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STRUH';
			$(fieldId).hide();
		}
	
		if (getStandardsText() == '' || userInfo.sharedStandandsEnabled == "N") {
			fieldId = '#' + data.classId + data.sequence + 'SWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'STH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'SUH';
			$(fieldId).hide();
		}
	
		if (getAttachmentsText() == '') {
			fieldId = '#' + data.classId + data.sequence + 'AWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ALH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'AMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ATH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'AFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'AEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'AUH';
			$(fieldId).hide();
		}
	
		if (getAssignmentsText() == '') {
			fieldId = '#' + data.classId + data.sequence + 'ASGWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASGUH';
			$(fieldId).hide();
		}

		if (getAssessmentsText() == '') {
			fieldId = '#' + data.classId + data.sequence + 'ASMWH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMLH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMMH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMTH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMFH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMEH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMSH';
			$(fieldId).hide();
			fieldId = '#' + data.classId + data.sequence + 'ASMUH';
			$(fieldId).hide();
		}
		
		
	}
	
	function loadHiddenFields(data, viewType) {
	
		if (data.startTime == null) {data.startTime = "";}
		if (data.endTime == null) {data.endTime = "";}
		if (data.customStart == null) {data.customStart = "";}
		if (data.customEnd == null) {data.customEnd = "";}
		
		var ls = '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'NStart">' + data.startTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'ND">' + data.endTime + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'CS">' + data.customStart + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'CE">' + data.customEnd + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'SSID">' + data.collaborateSubjectId + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'SSTY">' + data.collaborateType + '</p>';

		var sharedLine = getSharedLine(data);
		
		ls = ls + '<p class="hiddenInfo shared' + sharedLine + 'ALD" id="' + data.classId + data.sequence + 'ALD' + viewType + '">' + data.lessonLock + '</p>';
		ls = ls + '<p class="hiddenInfo shared' + sharedLine + 'UT" id="' + data.classId + data.sequence + 'UT' + viewType + '">' + data.unitId + '</p>';
		ls = ls + '<p class="hiddenInfo shared' + sharedLine + 'CID" id="' + data.classId + data.sequence + 'CID' + viewType + '">' + data.classId + '</p>';

		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'LT">' + data.lTemplate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'HT">' + data.hTemplate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'NT">' + data.nTemplate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + '4T">' + data.t4Template + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + '5T">' + data.t5Template + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + '6T">' + data.t6Template + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'MST">' + data.msTemplate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'SST">' + data.ssTemplate + '</p>';
		ls = ls + '<p class="hiddenInfo" id="' + data.classId + data.sequence + 'ST">' + data.sTemplate + '</p>';
	
		return ls;
		
	}	
	
	function loadLessonSections(data, viewType) {
		
		var sharedLine = getSharedLine(data);
		
		var tempClassColor = (data.color<=45?colors1[data.color]:data.color);
		var labelLine = '<div style="border-top-width:1px; border-top-style:solid; border-top-color:' + tempClassColor + ';">';
		if (viewType == "L" || viewType == "F" || viewType == "T" || viewType == 'E' || viewType == "S") {
			labelLine = '<div style="margin-top:3px;">';
		}
		
		loadStrategiesArrays(data.strategies);
		loadMyStandardArrays(data.myStandards);
		loadSchoolStandardArrays(data.schoolStandards);
		loadStandardArrays(data.standards);
		
		//load font styles
		var tab1L = 'font-weight: '+(userInfo.lessonLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.lessonLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.lessonLabelUnderline=="Y"?'underline':'normal')+';';
		var tab1T = 'font-weight: '+(userInfo.lessonTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.lessonTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.lessonTextUnderline=="Y"?'underline':'normal')+';';
		var tab2L = 'font-weight: '+(userInfo.tab2LabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab2LabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab2LabelUnderline=="Y"?'underline':'normal')+';';
		var tab2T = 'font-weight: '+(userInfo.tab2TextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab2TextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab2TextUnderline=="Y"?'underline':'normal')+';';
		var tab3L = 'font-weight: '+(userInfo.tab3LabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab3LabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab3LabelUnderline=="Y"?'underline':'normal')+';';
		var tab3T = 'font-weight: '+(userInfo.tab3TextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab3TextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab3TextUnderline=="Y"?'underline':'normal')+';';
		var tab4L = 'font-weight: '+(userInfo.tab4LabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab4LabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab4LabelUnderline=="Y"?'underline':'normal')+';';
		var tab4T = 'font-weight: '+(userInfo.tab4TextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab4TextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab4TextUnderline=="Y"?'underline':'normal')+';';
		var tab5L = 'font-weight: '+(userInfo.tab5LabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab5LabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab5LabelUnderline=="Y"?'underline':'normal')+';';
		var tab5T = 'font-weight: '+(userInfo.tab5TextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab5TextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab5TextUnderline=="Y"?'underline':'normal')+';';
		var tab6L = 'font-weight: '+(userInfo.tab6LabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab6LabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab6LabelUnderline=="Y"?'underline':'normal')+';';
		var tab6T = 'font-weight: '+(userInfo.tab6TextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.tab6TextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.tab6TextUnderline=="Y"?'underline':'normal')+';';
		var tab9L = 'font-weight: '+(userInfo.sharedStandardsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.sharedStandardsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.sharedStandardsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab9T = 'font-weight: '+(userInfo.sharedStandardsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.sharedStandardsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.sharedStandardsTextUnderline=="Y"?'underline':'normal')+';';
		var tab7L = 'font-weight: '+(userInfo.myStandardsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.myStandardsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.myStandardsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab7T = 'font-weight: '+(userInfo.myStandardsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.myStandardsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.myStandardsTextUnderline=="Y"?'underline':'normal')+';';
		var tab8L = 'font-weight: '+(userInfo.schoolStandardsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.schoolStandardsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.schoolStandardsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab8T = 'font-weight: '+(userInfo.schoolStandardsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.schoolStandardsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.schoolStandardsTextUnderline=="Y"?'underline':'normal')+';';
		var tab10L = 'font-weight: '+(userInfo.attachmentsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.attachmentsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.attachmentsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab10T = 'font-weight: '+(userInfo.attachmentsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.attachmentsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.attachmentsTextUnderline=="Y"?'underline':'normal')+';';
		var tab11L = 'font-weight: '+(userInfo.assignmentsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.assignmentsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.assignmentsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab11T = 'font-weight: '+(userInfo.assignmentsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.assignmentsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.assignmentsTextUnderline=="Y"?'underline':'normal')+';';
		var tab12L = 'font-weight: '+(userInfo.assessmentsLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.assessmentsLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.assessmentsLabelUnderline=="Y"?'underline':'normal')+';';
		var tab12T = 'font-weight: '+(userInfo.assessmentsTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.assessmentsTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.assessmentsTextUnderline=="Y"?'underline':'normal')+';';
		var tab13L = 'font-weight: '+(userInfo.strategiesLabelBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.strategiesLabelItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.strategiesLabelUnderline=="Y"?'underline':'normal')+';';
		var tab13T = 'font-weight: '+(userInfo.strategiesTextBold == "Y"?'bold':'normal')+'; font-style: '+(userInfo.strategiesTextItalic=="Y"?'italic':'normal')+'; text-decoration: '+(userInfo.strategiesTextUnderline=="Y"?'underline':'normal')+';';
		
		// display lesson sections in order
		var lsO = 0;
		var ls = '';
		while (lsO<=10) {
			switch(lsO) {
				case userInfo.tab1Order:
					ls = ls + '<div class="allTab1"><div class="shared' + sharedLine + 'LH' + '" id="' + data.classId + data.sequence + 'L' + viewType + 'H" style="'+tab1L+' background-color: '+ userInfo.lessonLabelFillColor +'; font-family:' + fontTypes[userInfo.lessonFont] + '; font-size:' + userInfo.lessonSize + 'pt; color:' + userInfo.lessonColor + ';">';
					if (userInfo.lessonHide == "N") {
						ls = ls + labelLine + userInfo.lessonLabel + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'L' + '" id="' + data.classId + data.sequence + 'L' + viewType + '" style="'+tab1T+' background-color: '+ userInfo.lessonTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.lessonTextFont] + '; font-size:' + userInfo.lessonTextSize + 'pt; color:' + userInfo.lessonTextColor + ';">' + data.lessonText + '</div></div></div>';
					break;
				case userInfo.tab2Order:
					ls = ls + '<div class="allTab2"><div class="shared' + sharedLine + 'HH' + '" id="' + data.classId + data.sequence + 'H' + viewType + 'H" style="'+tab2L+' background-color: '+ userInfo.tab2LabelFillColor +'; font-family:' + fontTypes[userInfo.tab2Font] + '; font-size:' + userInfo.tab2Size + 'pt; color:' + userInfo.tab2Color + ';">';
					if (userInfo.tab2Hide == "N") {
						ls = ls + labelLine + userInfo.tab2Label + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'H' + '" id="' + data.classId + data.sequence + 'H' + viewType + '" style="'+tab2T+' background-color: '+ userInfo.tab2TextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.tab2TextFont] + '; font-size:' + userInfo.tab2TextSize + 'pt; color:' + userInfo.tab2TextColor + ';">' + data.homeworkText + '</div></div></div>';
					break;
				case userInfo.tab3Order:
					ls = ls + '<div class="allTab3"><div class="shared' + sharedLine + 'NH' + '" id="' + data.classId + data.sequence + 'N' + viewType + 'H" style="'+tab3L+' background-color: '+ userInfo.tab3LabelFillColor +'; font-family:' + fontTypes[userInfo.tab3Font] + '; font-size:' + userInfo.tab3Size + 'pt; color:' + userInfo.tab3Color + ';">';
					if (userInfo.tab3Hide == "N") {
						ls = ls + labelLine + userInfo.tab3Label + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'N' + '" id="' + data.classId + data.sequence + 'N' + viewType + '" style="'+tab3T+' background-color: '+ userInfo.tab3TextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.tab3TextFont] + '; font-size:' + userInfo.tab3TextSize + 'pt; color:' + userInfo.tab3TextColor + ';">' + data.notesText + '</div></div></div>';
					break;
				case userInfo.tab4Order:
					ls = ls + '<div class="allTab4"><div class="shared' + sharedLine + '4H' + '" id="' + data.classId + data.sequence + '4' + viewType + 'H" style="'+tab4L+' background-color: '+ userInfo.tab4LabelFillColor +'; font-family:' + fontTypes[userInfo.tab4Font] + '; font-size:' + userInfo.tab4Size + 'pt; color:' + userInfo.tab4Color + ';">';
					if (userInfo.tab4Hide == "N") {
						ls = ls + labelLine + userInfo.tab4Label + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + '4' + '" id="' + data.classId + data.sequence + '4' + viewType + '" style="'+tab4T+' background-color: '+ userInfo.tab4TextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.tab4TextFont] + '; font-size:' + userInfo.tab4TextSize + 'pt; color:' + userInfo.tab4TextColor + ';">' + data.tab4Text + '</div></div></div>';
					break;
				case userInfo.tab5Order:
					ls = ls + '<div class="allTab5"><div class="shared' + sharedLine + '5H' + '" id="' + data.classId + data.sequence + '5' + viewType + 'H" style="'+tab5L+' background-color: '+ userInfo.tab5LabelFillColor +'; font-family:' + fontTypes[userInfo.tab5Font] + '; font-size:' + userInfo.tab5Size + 'pt; color:' + userInfo.tab5Color + ';">';
					if (userInfo.tab5Hide == "N") {
						ls = ls + labelLine + userInfo.tab5Label + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + '5' + '" id="' + data.classId + data.sequence + '5' + viewType + '" style="'+tab5T+' background-color: '+ userInfo.tab5TextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.tab5TextFont] + '; font-size:' + userInfo.tab5TextSize + 'pt; color:' + userInfo.tab5TextColor + ';">' + data.tab5Text + '</div></div></div>';
					break;
				case userInfo.tab6Order:
					ls = ls + '<div class="allTab6"><div class="shared' + sharedLine + '6H' + '" id="' + data.classId + data.sequence + '6' + viewType + 'H" style="'+tab6L+' background-color: '+ userInfo.tab6LabelFillColor +'; font-family:' + fontTypes[userInfo.tab6Font] + '; font-size:' + userInfo.tab6Size + 'pt; color:' + userInfo.tab6Color + ';">';
					if (userInfo.tab6Hide == "N") {
						ls = ls + labelLine + userInfo.tab6Label + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + '6' + '" id="' + data.classId + data.sequence + '6' + viewType + '" style="'+tab6T+' background-color: '+ userInfo.tab6TextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.tab6TextFont] + '; font-size:' + userInfo.tab6TextSize + 'pt; color:' + userInfo.tab6TextColor + ';">' + data.tab6Text + '</div></div></div>';
					break;
				case userInfo.myStandardsOrder:
					ls = ls + '<div class="sHeader"><div class="shared' + sharedLine + 'MSH' + '" id="' + data.classId + data.sequence + 'MS' + viewType + 'H" style="'+tab7L+' background-color: '+ userInfo.myStandardsLabelFillColor +'; font-family:' + fontTypes[userInfo.myStandardsFont] + '; font-size:' + userInfo.myStandardsSize + 'pt; color:' + userInfo.myStandardsColor + ';">';
					if (userInfo.myStandardsHide == "N") {
						ls = ls + labelLine + userInfo.myStandardsLabel + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'MS' + '" id="' + data.classId + data.sequence + 'MS' + viewType + '" style="'+tab7T+' background-color: '+ userInfo.myStandardsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.myStandardsTextFont] + '; font-size:' + userInfo.myStandardsTextSize + 'pt; color:' + userInfo.myStandardsTextColor + ';">' + getMyStandardsText() + '</div></div></div>';
					break;
				case userInfo.schoolStandardsOrder:
					ls = ls + '<div class="sHeader"><div class="shared' + sharedLine + 'SSH' + '" id="' + data.classId + data.sequence + 'SS' + viewType + 'H" style="'+tab8L+' background-color: '+ userInfo.schoolStandardsLabelFillColor +'; font-family:' + fontTypes[userInfo.schoolStandardsFont] + '; font-size:' + userInfo.schoolStandardsSize + 'pt; color:' + userInfo.schoolStandardsColor + ';">';
					if (userInfo.schoolStandardsHide == "N") {
						ls = ls + labelLine + userInfo.schoolStandardsLabel + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'SS' + '" id="' + data.classId + data.sequence + 'SS' + viewType + '" style="'+tab8T+' background-color: '+ userInfo.schoolStandardsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.schoolStandardsTextFont] + '; font-size:' + userInfo.schoolStandardsTextSize + 'pt; color:' + userInfo.schoolStandardsTextColor + ';">' + getSchoolStandardsText() + '</div></div></div><div style="clear:both;"></div>';
					break;
				case userInfo.sharedStandardsOrder:
					ls = ls + '<div class="sHeader"><div class="shared' + sharedLine + 'SH' + '" id="' + data.classId + data.sequence + 'S' + viewType + 'H" style="'+tab9L+' background-color: '+ userInfo.sharedStandardsLabelFillColor +'; font-family:' + fontTypes[userInfo.sharedStandardsFont] + '; font-size:' + userInfo.sharedStandardsSize + 'pt; color:' + userInfo.sharedStandardsColor + ';">';
					if (userInfo.sharedStandardsHide == "N") {
						ls = ls + labelLine + userInfo.sharedStandardsLabel + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'S' + '" id="' + data.classId + data.sequence + 'S' + viewType + '" style="'+tab9T+' background-color: '+ userInfo.sharedStandardsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.sharedStandardsTextFont] + '; font-size:' + userInfo.sharedStandardsTextSize + 'pt; color:' + userInfo.sharedStandardsTextColor + ';">' + getStandardsText() + '</div></div></div><div style="clear:both;"></div>';
					break;
				case userInfo.strategiesOrder:
					ls = ls + '<div class="allStrategies"><div class="shared' + sharedLine + 'STRH' + '" id="' + data.classId + data.sequence + 'STR' + viewType + 'H" style="'+tab13L+' background-color: '+ userInfo.strategiesLabelFillColor +'; font-family:' + fontTypes[userInfo.strategiesFont] + '; font-size:' + userInfo.strategiesSize + 'pt; color:' + userInfo.strategiesColor + ';">';
					if (userInfo.strategiesHide == "N") {
						ls = ls + labelLine + userInfo.strategiesLabel + '</div>';
					} else {
						ls = ls + labelLine + '</div>';
					}
					ls = ls + '<div class="shared' + sharedLine + 'STR' + '" id="' + data.classId + data.sequence + 'STR' + viewType + '" style="'+tab13T+' background-color: '+ userInfo.strategiesTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.strategiesTextFont] + '; font-size:' + userInfo.strategiesTextSize + 'pt; color:' + userInfo.strategiesTextColor + ';">' + getStrategiesText() + '</div></div></div><div style="clear:both;"></div>';
					break;
			}
			lsO++;
		}
		
		loadAttachmentsArray(data.attachments);
		loadAttachmentsArrayOther(data.asgAttachments, "assignment");
		loadAttachmentsArrayOther(data.asmAttachments, "assessment");
		ls = ls + '<div class="allAttach"><div class="shared' + sharedLine + 'AH' + '" id="' + data.classId + data.sequence + 'A' + viewType + 'H" style="'+tab10L+' background-color: '+ userInfo.attachmentsLabelFillColor +'; font-family:' + fontTypes[userInfo.attachmentsFont] + '; font-size:' + userInfo.attachmentsSize + 'pt; color:' + userInfo.attachmentsColor + ';">';
		ls = ls + labelLine + 'Attachments' + ':</div>';
		ls = ls + '<div class="shared' + sharedLine + 'A' + '" id="' + data.classId + data.sequence + 'A' + viewType + '" style="'+tab10T+' background-color: '+ userInfo.attachmentsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.attachmentsTextFont] + '; font-size:' + userInfo.attachmentsTextSize + 'pt; color:' + userInfo.attachmentsTextColor + ';">' + getAttachmentsText() + '</div></div></div>';
		
		loadAssignmentsArray(data.assignments);
		ls = ls + '<div class="allAssign"><div class="shared' + sharedLine + 'ASGH' + '" id="' + data.classId + data.sequence + 'ASG' + viewType + 'H" style="'+tab11L+' background-color: '+ userInfo.assignmentsLabelFillColor +'; font-family:' + fontTypes[userInfo.assignmentsFont] + '; font-size:' + userInfo.assignmentsSize + 'pt; color:' + userInfo.assignmentsColor + ';">';
		ls = ls + labelLine + 'Assignments' + ':</div>';
		ls = ls + '<div class="shared' + sharedLine + 'ASG' + '" id="' + data.classId + data.sequence + 'ASG' + viewType + '" style="'+tab11T+' background-color: '+ userInfo.assignmentsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.assignmentsTextFont] + '; font-size:' + userInfo.assignmentsTextSize + 'pt; color:' + userInfo.assignmentsTextColor + ';">' + getAssignmentsText() + '</div></div></div>';

		loadAssessmentsArray(data.assessments);
		ls = ls + '<div class="allAssess"><div class="shared' + sharedLine + 'ASMH' + '" id="' + data.classId + data.sequence + 'ASM' + viewType + 'H" style="'+tab12L+' background-color: '+ userInfo.assessmentsLabelFillColor +'; font-family:' + fontTypes[userInfo.assessmentsFont] + '; font-size:' + userInfo.assessmentsSize + 'pt; color:' + userInfo.assessmentsColor + ';">';
		ls = ls + labelLine + 'Assessments' + ':</div>';
		ls = ls + '<div class="shared' + sharedLine + 'ASM' + '" id="' + data.classId + data.sequence + 'ASM' + viewType + '" style="'+tab12T+' background-color: '+ userInfo.assessmentsTextFillColor +'; padding:3px; font-family:' + fontTypes[userInfo.assessmentsTextFont] + '; font-size:' + userInfo.assessmentsTextSize + 'pt; color:' + userInfo.assessmentsTextColor + ';">' + getAssessmentsText() + '</div></div></div>';
		
		return ls;
	}
	
	function loadSectionLabels() {
		
		$('#CBallTab1Label').html(userInfo.lessonLabel);
		$('#CBallTab2Label').html(userInfo.tab2Label);
		$('#CBallTab3Label').html(userInfo.tab3Label);
		$('#CBallTab4Label').html(userInfo.tab4Label);
		$('#CBallTab5Label').html(userInfo.tab5Label);
		$('#CBallTab6Label').html(userInfo.tab6Label);
		$('#CBallStrategiesLabel').html("Strategies");
		
		$('#tab1Name').html(userInfo.lessonLabel);
		$('#tab2Name').html(userInfo.tab2Label);
		$('#tab3Name').html(userInfo.tab3Label);
		$('#tab4Name').html(userInfo.tab4Label);
		$('#tab5Name').html(userInfo.tab5Label);
		$('#tab6Name').html(userInfo.tab6Label);
		$('#tab7Name').html(userInfo.myStandardsLabel);
		$('#tab8Name').html(userInfo.sharedStandardsLabel);
		$('#tab9Name').html(userInfo.schoolStandardsLabel);
		$('#strategyTabName').html(userInfo.strategiesLabel);

		$('#copyTab1Label').html(userInfo.lessonLabel);
		$('#copyTab2Label').html(userInfo.tab2Label);
		$('#copyTab3Label').html(userInfo.tab3Label);
		$('#copyTab4Label').html(userInfo.tab4Label);
		$('#copyTab5Label').html(userInfo.tab5Label);
		$('#copyTab6Label').html(userInfo.tab6Label);
		$('#copyTab7Label').html(userInfo.myStandardsLabel);
		$('#copyTab8Label').html(userInfo.sharedStandardsLabel);
		$('#copyTab9Label').html(userInfo.schoolStandardsLabel);
		$('#copyTabALabel').html(userInfo.strategiesLabel);

		$('#editTab1Label').html(userInfo.lessonLabel);
		$('#editTab2Label').html(userInfo.tab2Label);
		$('#editTab3Label').html(userInfo.tab3Label);
		$('#editTab4Label').html(userInfo.tab4Label);
		$('#editTab5Label').html(userInfo.tab5Label);
		$('#editTab6Label').html(userInfo.tab6Label);
		$('#editTab7Label').html(userInfo.myStandardsLabel);
		$('#editTab8Label').html(userInfo.sharedStandardsLabel);
		$('#editStrategyLabel').html(userInfo.strategiesLabel);
		
		$('#chooseMyLabel').html(userInfo.myStandardsLabel);
		$('#chooseSharedLabel').html(userInfo.sharedStandardsLabel);
		$('#chooseSchoolLabel').html(userInfo.schoolStandardsLabel);
		$('#chooseStrategiesLabel').html(userInfo.strategiesLabel);

		$('#templateLessonOption').html(userInfo.lessonLabel);
		$('#templateHomeworkOption').html(userInfo.tab2Label);
		$('#templateNotesOption').html(userInfo.tab3Label);
		$('#templateTab4Option').html(userInfo.tab4Label);
		$('#templateTab5Option').html(userInfo.tab5Label);
		$('#templateTab6Option').html(userInfo.tab6Label);
		$('#templateMyStandardOption').html(userInfo.myStandardsLabel);
		$('#templateSchoolStandardOption').html(userInfo.schoolStandardsLabel);
		$('#templateStandardOption').html(userInfo.sharedStandardsLabel);

		$('#printLessonLabel').html(userInfo.lessonLabel);
		$('#printHomeworkLabel').html(userInfo.tab2Label);
		$('#printNotesLabel').html(userInfo.tab3Label);
		$('#printTab4Label').html(userInfo.tab4Label);
		$('#printTab5Label').html(userInfo.tab5Label);
		$('#printTab6Label').html(userInfo.tab6Label);
		$('#printStrategiesLabel').html(userInfo.strategiesLabel);

		$('#studentLessonLabel').html(userInfo.lessonLabel);
		$('#studentHomeworkLabel').html(userInfo.tab2Label);
		$('#studentNotesLabel').html(userInfo.tab3Label);
		$('#studentTab4Label').html(userInfo.tab4Label);
		$('#studentTab5Label').html(userInfo.tab5Label);
		$('#studentTab6Label').html(userInfo.tab6Label);
		$('#studentStrategiesLabel').html(userInfo.strategiesLabel);
		
		// set tab order list
		sortDisplayList(userInfo.tab1Order, 'editTab1', 'ul#lessonSections');
		sortDisplayList(userInfo.tab2Order, 'editTab2', 'ul#lessonSections');
		sortDisplayList(userInfo.tab3Order, 'editTab3', 'ul#lessonSections');
		sortDisplayList(userInfo.tab4Order, 'editTab4', 'ul#lessonSections');
		sortDisplayList(userInfo.tab5Order, 'editTab5', 'ul#lessonSections');
		sortDisplayList(userInfo.tab6Order, 'editTab6', 'ul#lessonSections');
		sortDisplayList(userInfo.myStandardsOrder, 'editMyStandardsTab', 'ul#lessonSections');
		sortDisplayList(userInfo.sharedStandardsOrder, 'editStandardsTab', 'ul#lessonSections');
		sortDisplayList(userInfo.schoolStandardsOrder, 'editSchoolStandardsTab', 'ul#lessonSections');
		sortDisplayList(userInfo.strategiesOrder, 'editStrategiesTab', 'ul#lessonSections');
		
		if (userInfo.lessonEnabled == "Y") {
			$('#editTab1').show();
			$('#allTab1').show();
			$('#templateLessonOption').show();
			$('#printLessonOption').show();
			$('#studentLessonOption').show();
			$('#copyT1').show();
		} else {
			$('#editTab1').hide();
			$('#allTab1').hide();
			$('#templateLessonOption').hide();
			$('#printLessonOption').hide();
			$('#studentLessonOption').hide();
			$('#copyT1').hide();
		}

		if (userInfo.tab2Enabled == "Y") {
			$('#editTab2').show();
			$('#allTab2').show();
			$('#templateHomeworkOption').show();
			$('#printHomeworkOption').show();
			$('#studentHomeworkOption').show();
			$('#copyT2').show();
		} else {
			$('#editTab2').hide();
			$('#allTab2').hide();
			$('#templateHomeworkOption').hide();
			$('#printHomeworkOption').hide();
			$('#studentHomeworkOption').hide();
			$('#copyT2').hide();
		}

		if (userInfo.tab3Enabled == "Y") {
			$('#editTab3').show();
			$('#allTab3').show();
			$('#templateNotesOption').show();
			$('#printNotesOption').show();
			$('#studentNotesOption').show();
			$('#copyT3').show();
		} else {
			$('#editTab3').hide();
			$('#allTab3').hide();
			$('#templateNotesOption').hide();
			$('#printNotesOption').hide();
			$('#studentNotesOption').hide();
			$('#copyT3').hide();
		}

		if (userInfo.tab4Enabled == "Y") {
			$('#editTab4').show();
			$('#allTab4').show();
			$('#templateTab4Option').show();
			$('#printTab4Option').show();
			$('#studentTab4Option').show();
			$('#copyT4').show();
		} else {
			$('#editTab4').hide();
			$('#allTab4').hide();
			$('#templateTab4Option').hide();
			$('#printTab4Option').hide();
			$('#studentTab4Option').hide();
			$('#copyT4').hide();
		}

		if (userInfo.tab5Enabled == "Y") {
			$('#editTab5').show();
			$('#allTab5').show();
			$('#templateTab5Option').show();
			$('#printTab5Option').show();
			$('#studentTab5Option').show();
			$('#copyT5').show();
		} else {
			$('#editTab5').hide();
			$('#allTab5').hide();
			$('#templateTab5Option').hide();
			$('#printTab5Option').hide();
			$('#studentTab5Option').hide();
			$('#copyT5').hide();
		}

		if (userInfo.tab6Enabled == "Y") {
			$('#editTab6').show();
			$('#allTab6').show();
			$('#templateTab6Option').show();
			$('#printTab6Option').show();
			$('#studentTab6Option').show();
			$('#copyT6').show();
		} else {
			$('#editTab6').hide();
			$('#allTab6').hide();
			$('#templateTab6Option').hide();
			$('#printTab6Option').hide();
			$('#studentTab6Option').hide();
			$('#copyT6').hide();
		}

		if (userInfo.strategiesEnabled == "Y") {
			$('#editStrategiesTab').show();
			$('#allStrategies').show();
			$('#printStrategiesOption').show();
			$('#studentStrategiesOption').show();
			$('#copyTA').show();
		} else {
			$('#editStrategiesTab').hide();
			$('#allStrategies').hide();
			$('#printStrategiesOption').hide();
			$('#studentStrategiesOption').hide();
			$('#copyTA').hide();
		}

		if (userInfo.myStandardsEnabled == "Y") {
			$('#editMyStandardsTab').show();
			$('#templateMyStandardOption').show();
			$('#copyT7').show();
			
		} else {
			$('#editMyStandardsTab').hide();
			$('#templateMyStandardOption').hide();
			$('#copyT7').hide();
		}

		if (userInfo.sharedStandardsEnabled == "Y") {
			$('#editStandardsTab').show();
			$('#templateStandardOption').show();
			$('#copyT8').show();
		} else {
			$('#editStandardsTab').hide();
			$('#templateStandardOption').hide();
			$('#copyT8').hide();
		}

		if (userInfo.schoolStandardsEnabled == "Y" && userInfo.schoolId != null && userInfo.schoolId != 0) {
			$('#editSchoolStandardsTab').show();
			$('#templateSchoolStandardOption').show();
			$('#copyT9').show();
		} else {
			$('#editSchoolStandardsTab').hide();
			$('#templateSchoolStandardOption').hide();
			$('#copyT9').hide();
		}

		if (userInfo.schoolId == null || userInfo.schoolId == 0) {
			$('#commentsButton').hide();
		} else {
			$('#commentsButton').show();
		}
		
	}

	function loadAttachmentsArray(data) {
		
		attachments = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				attachments[x] = new Object();
				attachments[x].filename = data[x].filename; 
				if (data[x].privateFlag == true) {attachments[x].privateFlag = "Y";} else {attachments[x].privateFlag = "N";}
				attachments[x].url = data[x].url;
				attachments[x].type = "lesson";
			}
		} else {
			attachments = null;
		}
		
	}

	function loadAttachmentsArrayOther(data, type) {
		
		if (data != null && data.length > 0) {
			if (attachments == null) {attachments = new Array();}
			var arrayPos = attachments.length;
			for (var x=0; x<data.length; x++) {
				attachments[arrayPos] = new Object();
				attachments[arrayPos].filename = data[x].filename;
				if (data[x].privateFlag == true) {attachments[arrayPos].privateFlag = "Y";} else {attachments[arrayPos].privateFlag = "N";}
				attachments[arrayPos].url = data[x].url;
				attachments[arrayPos].type = type;
				arrayPos++;
			}
		}
		
	}
	
	
	function getAttachmentsText() {

		var attachmentsText = '';
		var ls = '';		

		if (attachments != null) {
			for (var x=0; x<attachments.length; x++) {
				if (attachments[x].url == null || attachments[x].url == "") {
					ls = '<div style="padding-left:3px;"><span style="display:none;">' + attachments[x].privateFlag + '</span><span style="display:none;">' + attachments[x].type + '</span><span style="display:none;"></span><span class="attached">' + attachments[x].filename + '</span></div>';
				} else {
					ls = '<div style="padding-left:3px;"><span style="display:none;">' + attachments[x].privateFlag + '</span><span style="display:none;">' + attachments[x].type + '</span><span style="display:none;">'+attachments[x].url+'</span><a target="_blank" href="'+attachments[x].url+'">' + attachments[x].filename + '</a></div>';
				}
				attachmentsText = attachmentsText + ls;
			}
		}

		return attachmentsText;
	}

	function loadAttachmentsText() {

		$('#'+attachType+'Body').html('');
		$('#'+attachType+'Table').hide();
		attachments = null;
		myFiles = null
		tempMyFiles = null;
		
		if (currentAttachmentsText != "") {

			var fType = "pFlag";
			var x = 0;
			attachments = new Array();
			
			$(currentAttachmentsText).children().each(function(){
				$(this).children().each(function(){
					if (fType == "pFlag") {
						attachments[x] = new Object();
						attachments[x].privateFlag = $(this).html();
						fType = "type";
					} else if (fType == "type") {
						attachments[x].type = $(this).html();
						fType = "url";
					} else if (fType == "url") {
						attachments[x].url = $(this).text();
						attachments[x].fileType = (attachments[x].url != ""?"drive":"other");
						fType = "name";
					} else {
						attachments[x].filename = $(this).html();
						x++;
						fType = "pFlag";
					}
				});
			});

			if (x != 0) {
				$('#'+attachType+'Table').show();
				loadAttachmentsTable();
			} else {
				$('#'+attachType+'Table').hide();
				attachments = null;
			}
		
		}

	}
	
	$('.removeAttachment').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substring(6);
		var attachPos = parseInt(temp2,10);

		attachments.splice(attachPos, 1);
		
		$('#'+attachType+'Body').html('');
		
		saveLesson = true;
		if (attachments != null && attachments.length > 0) {
			loadAttachmentsTable();
		} else {
			$('#'+attachType+'Table').hide();
		}
	
	});
	
	$('.attached').live('click', function() {
		
		$('#downloadAttachmentForm').html('<input type="hidden" name="attachmentName" value="' + $(this).html() + '" />');
		
		if (userMode == 'A') {
			$('#downloadAttachmentForm').append('<input type="hidden" name="teacherId" value="' + currentTeacherId + '" />');	
		} else {
			$('#downloadAttachmentForm').append('<input type="hidden" name="teacherId" value="' + userInfo.userId + '" />');	
		}
		
		$('#downloadAttachmentForm').submit();

		
	});

	function loadAttachmentsTable() {
		
		$('#'+attachType+'Body').html('');

		for (var x=0; x<attachments.length; x++) {
			var ls;

			var checkRow = '';
			if (attachments[x].type == "assignment" || attachments[x].type == "assessment") {
				checkRow = ' style="display:none;"';
			}
			
			if (attachments[x].url == null || attachments[x].url == "") {
				ls = '<tr' + checkRow  + '><td class="slCell" style="text-align:left;" width="100%"><span class="attached">' + attachments[x].filename + '</span></td>';
			} else {
				ls = '<tr' + checkRow  + '><td class="slCell" style="text-align:left;" width="100%"><a href="'+ attachments[x].url + '" target="_blank">' + attachments[x].filename + '</a></td>';
			}
			
			ls = ls + '<td class="scCell"><div style="width:90px;">';
			ls = ls + '<input type="checkbox" class="attachPrivate" name="attachPrivate' + x + '" id="attachPrivate' + x + '" title="Attachments marked as private will not show in the Student View">';
			ls = ls + '<label for="attachPrivate' + x + '" style="margin-left:4px;" title="Attachments marked as private will not show in the Student View">Private</label>';
			ls = ls + '</div></td>';

			ls = ls + '<td class="scCell"><div class="removeAttachment buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="attach' + x + '"><img src="images/trash.png"></div></td></tr>';

			$('#'+attachType+'Body').append(ls);
			
			if (attachments[x].privateFlag == "Y") {
				$('#attachPrivate'+x).prop('checked',true);
			} else {
				$('#attachPrivate'+x).prop('checked',false);
			}
			
			saveLesson = true;
		}		
	}

	$('.attachPrivate').live('change', function() {

		var str = '#' + this.id;
		var pos = str.substring(14);
		
		if ($(str).prop('checked')) {
			attachments[pos].privateFlag = 'Y';
		} else {
			attachments[pos].privateFlag = 'N';
		}
		
	});
	
	function getFile(data) {
		var files = [];
		
		if (data.files) {
			files = files.concat(data.files);
		}
		
		if (data.originalFiles) {
			files = files.concat(data.originalFiles);
		}
		
		if (data.fileInput) {
			$.each(data.fileInput, function() {
				
				if (this.files) {
					$.each(this.files, function() {
						files.push(this);
					});
				}
			});
		} 

		var file = {}; 
		$.each(files, function() {
			if (this.name && $.trim(this.name) != '') {
				file = this;
				return false;
			}
		});
		return file;
	}
	
	function getFileUploadOptions() {
		return {
	    	add: function (event, data) {
	    		var f = getFile(data);
	    		var fileName = f.name;
	    		var fileSize = f.size;
	    		if (!fileName) {
	    			hideBox('#myFilesPickerBox', 30);
	        		showErrorBox('Invalid file name.');
	    		} else if (fileSize > maxUploadSize) {
	        		hideBox('#myFilesPickerBox', 30);
	        		showErrorBox('The file size exceeds the allowable limit of 25MB.');
	        	} else {
		            $.getJSON('getS3Credentials', {fileName : fileName })
		            .done(function(result){
		            	if (data.notLoggedIn == "true") {
		        			showLogin();
		            	} else if (result.error == "true") {
		            		hideProgressBar();
		    	        	hideBox('#myFilesPickerBox', 30);
		            		showErrorBox('Sorry, an error occurred and the file could not be attached');
		            	} else {
		            		data.url = result.url;
			                data.formData = result.params; 
		            		data.submit();
		            	}
		            });
	        	}
	           
    	    },
    	    progress: function (e, data) {
    	        var p = parseInt(data.loaded / data.total * 100, 10) + '%';
    	        $('#progressBar').css('width', p);
    	        $('#progressBar').text(p);
    	    },
    	    send: function(e, data) {
    	    	showProgressBar();
    	    },
    	    fail: function(e, data) {
    	    	hideProgressBar();
    	    	hideBox('#myFilesPickerBox', 30);
    	    	showErrorBox('Sorry, an error occurred and the file could not be attached');
    	    },
    	    done: function (event, data) {
    	    	var f = getFile(data);
    	    	var fileName = f.name;
    	    	var fileType = f.type;
    	    	if (fileName) {
    	    		fileType = fileType.substring(0, fileType.indexOf("/"));
        	    	$.getJSON('getS3Credentials', { createSignedGetURL : true, fileName : fileName })
        	    	.done(function(result){
        	    		hideProgressBar();
        	    		hideBox('#myFilesPickerBox', 30);
    	    			if (data.notLoggedIn == "true") {
        	    			showLogin();
        	    		} else if (result.error == "true") {
    	            		showErrorBox('Sorry, an error occurred and the file could not be attached');
    	            	} else {
    	            		if (attachType == "myFiles") {
    	    	        		$('#myFilesButton').trigger('click');
    	    	        	} else {
    	    	        		var type = attachType == 'attach' ? 'lesson' : attachType;
    	    	        		if (fileType == "image") {
    		    	        		$('#attachOrEmbedBody').html('');
    		    	        		myFiles = new Array();
    		            			myFiles[0] = new Object();
    		            			myFiles[0].type = type;
    		            			myFiles[0].url = result.url;
    		            			myFiles[0].filename = result.fileName;
    		            			myFiles[0].fileType = fileType;
    		            			$('#attachOrEmbedBody').append(result.fileName);
    		            			showBox('#attachOrEmbed', 30);
    		    	        	} else {
    		    	        		if (attachments == null) {
    			            			attachments = new Array();
    			            			attachments[0] = new Object();
    			            			attachments[0].filename = result.fileName;
    			            			attachments[0].privateFlag = "N";
    			            			attachments[0].url = result.url;
    			            			attachments[0].type = type;
    		    	        		} else {
    			            			var	newPos = attachments.length;
    			            			attachments[newPos] = new Object();
    			            			attachments[newPos].filename = result.fileName;
    			            			attachments[newPos].privateFlag = "N";
    			            			attachments[newPos].url = result.url;
    			            			attachments[newPos].type = type;
    		    	        		}
    		    	        		$('#'+attachType+'Table').show();
    		            			loadAttachmentsTable();
    		    	        	}
    	    	        	}
    	            	}
        	    	})
        	    	.fail(function(){
        	    		hideProgressBar();
        	    		hideBox('#myFilesPickerBox', 30);
            	    	showErrorBox('Sorry, an error occurred and the file could not be attached');
        	    	});
    	    	} else {
    	    		hideProgressBar();
    	    	}
    	    }
	    };
	}

	$('.fileupload, #fileuploadAsg, #fileuploadAst, #fileuploadUnit').fileupload(getFileUploadOptions());

	$('#reportClass').change(function(){ 
		reportView();
	}); 
		
	$('#reportStart').change(function(){ 
		reportView();
	}); 
		
	$('#reportEnd').change(function(){ 
		reportView();
	}); 
		
	$('#reportGrade').change(function(){ 
		$('#reportSubject').val("VA2");
		oneSubject = false;
		reportView();
	}); 
		
	$('#reportState').change(function(){ 
		$('#reportSubject').val("VA2");
		oneSubject = false;
		reportView();
	}); 

	$('#reportSubject').change(function(){ 
		if ($('#reportSubject').val() == "VA2") {
			oneSubject = false;
		} else {
			oneSubject = true;
		}
		reportView();
	});

	$('#reportCategory').change(function(){ 
		
		if ($('#reportCategory').val() == 'VA') {
			$('.standardsReportRow').show();
		} else {
			var showCat = '.rCat' + $('#reportCategory').val();
			$('.standardsReportRow').hide();
			$(showCat).show();
		}
		
	});

	function loadStandardsSubjects(data) {

		hideLoading();
		
		if (data.subjects.length != null) {

			$('#reportSubject').html('<option value="VA2">View All</option>');
			for (var x=0; x<data.subjects.length; x++) {
				$('#reportSubject').append('<option value="' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</option>');
			}

			rCategoryId	= new Array();
			rCategoryDesc = new Array();
			rCategoryType = new Array();
			if (data.categories != null) {
				for (var x=0; x<data.categories.length; x++) {
					rCategoryId[x] = data.categories[x].categoryId;
					rCategoryDesc[x] = data.categories[x].categoryDesc;
					rCategoryType[x] = data.categories[x].subject;
				}
			}
			
			setReportCategoryDropdown();
		}
	}

	function setReportCategoryDropdown() {
		
		var subject = $('#reportSubject').val();
		
		$('#reportCategory').html('<option value="VA">View All</option>');

		for (var x=0; x<rCategoryId.length; x++) {
			if (rCategoryType[x] == subject) {
				$('#reportCategory').append('<option value= "' + rCategoryId[x] + '">' + rCategoryDesc[x] + '</option>');
			}
		}

		$('#reportCategory').val('VA');
	}
	
	function reportView() {
		
		var valError = false;
		$('#reportErrorMsg').html('');

		var rStart = formatDateToSave($.trim($('#reportStart').val()));
		var rEnd   = formatDateToSave($.trim($('#reportEnd').val()));
		
		// validate start date
		if (valError == false) {
			if (rStart == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter a Start Date');
			} else {
			 		if (valDate(rStart) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid Start Date');
			 		}
				}
		}
		
		// validate end date
		if (valError == false) {
			if (rEnd == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter an End Date');
			} else {
			 		if (valDate(rEnd) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid End Date');
			 		}
				}
		}
	
		if (valError == false) {

			sInfo = new Object();
			sInfo.reportGrade = $('#reportGrade').val();
			sInfo.reportState = $('#reportState').val(); 
			sInfo.reportSubject = $('#reportSubject').val();
			sInfo.reportCategory = $('#reportCategory').val(); 
			sInfo.reportClassId = $('#reportClass').val();
			sInfo.reportStart = rStart;
			sInfo.reportEnd = rEnd;
			sInfo.userMode = userMode;
			sInfo.teacherId = standardsTeacherId;
			
			showLoading();
			if (userMode == "A" && standardsTeacherId == 0) {
				$.getJSON('getStandardsReport', sInfo, loadStandardsReportAdmin);
			} else {
				$.getJSON('getStandardsReport', sInfo, loadStandardsReport);
			}
		}
	}	

	$('.standardsTeacher').live('click', function() {

		standardsTeacherId = this.id.substring(2);
		$('#standardsTeacherName').html($(this).html()); 
		
		var valError = false;
		$('#reportErrorMsg').html('');

		var rStart = formatDateToSave($.trim($('#reportStart').val()));
		var rEnd   = formatDateToSave($.trim($('#reportEnd').val()));
		
		// validate start date
		if (valError == false) {
			if (rStart == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter a Start Date');
			} else {
			 		if (valDate(rStart) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid Start Date');
			 		}
				}
		}
		
		// validate end date
		if (valError == false) {
			if (rEnd == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter an End Date');
			} else {
			 		if (valDate(rEnd) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid End Date');
			 		}
				}
		}
	
		if (valError == false) {

			sInfo = new Object();
			sInfo.reportGrade = $('#reportGrade').val();
			sInfo.reportState = $('#reportState').val(); 
			sInfo.reportSubject = $('#reportSubject').val();
			sInfo.reportCategory = $('#reportCategory').val(); 
			sInfo.reportClassId = $('#reportClass').val();
			sInfo.reportStart = rStart;
			sInfo.reportEnd = rEnd;
			sInfo.userMode = userMode;
			sInfo.teacherId = standardsTeacherId;
			
			showLoading();
			$.getJSON('getStandardsReport', sInfo, loadStandardsReport);

		}
		
	});
	
	$('form.checkLogin').submit(function(e) {
		if (userMode != 'S') {
			$.ajax({ url : 'checkLogin', async : false}).done(function(data){
				if (data.notLoggedIn == "true") {
					e.preventDefault();
					showLogin();
				} else if (data.error == "true") {
					e.preventDefault();
					showErrorMsg();
				}
			});
		}	
	});

	$('#exportStandards').click(function() {
		
		var valError = false;
		$('#reportErrorMsg').html('');

		var rStart = formatDateToSave($.trim($('#reportStart').val()));
		var rEnd   = formatDateToSave($.trim($('#reportEnd').val()));
		
		// validate start date
		if (valError == false) {
			if (rStart == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter a Start Date');
			} else {
			 		if (valDate(rStart) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid Start Date');
			 		}
				}
		}
		
		// validate end date
		if (valError == false) {
			if (rEnd == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter an End Date');
			} else {
			 		if (valDate(rEnd) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid End Date');
			 		}
				}
		}
	
		if (valError == false) {
			$('#downloadStandardsForm').html('<input type="hidden" name="reportGrade" value="' +  $('#reportGrade').val() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportState" value="' +  $('#reportState').val() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportSubject" value="' + $('#reportSubject').val() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportCategory" value="' + $('#reportCategory').val() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportClassId" value="' + $('#reportClass').val() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportStart" value="' + rStart + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="reportEnd" value="' + rEnd + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="userMode" value="' + userMode + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="teacherId" value="' + standardsTeacherId + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="stateName" value="' + $('#reportState :selected').text() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="className" value="' + $('#reportClass :selected').text() + '" />');
			$('#downloadStandardsForm').append('<input type="hidden" name="subjectName" value="' + $('#reportSubject :selected').text() + '" />');
			
			if (userMode == "A") {
				if (standardsTeacherId == 0) {
					$('#downloadStandardsForm').append('<input type="hidden" name="printName" value="' + userInfo.schoolName + '" />');
				} else {
					$('#downloadStandardsForm').append('<input type="hidden" name="printName" value="' + $('#standardsTeacherName').html() + '" />');
				}
			} else {
				$('#downloadStandardsForm').append('<input type="hidden" name="printName" value="' + userInfo.displayName + '" />');
			}

			$('#downloadStandardsForm').submit();

		}

	});

	$('#printGradesOptions').click(function() {
		if (haveCommentTo == false) {
			getCommentTo();
		} else {
			if (individualStudentGradesView) {
				$('#gradeReportStudent2').val(currentGradesStudentId);
			} else {
				$('#gradeReportStudent2').val('1');
			}
		}
		showBox('#printGradesBox',10);
	});

	$('#printStudentGradesOptions').click(function() {
		$('#studentGradeReportTeacher').val($('#studentList').data('selected'));
		$('#studentGradeReportTeacher').change();
		$('#studentGradeReportPeriod').val($('#gradePeriodList').data('selected'));
		showBox('#printStudentGradesBox',10);
	});
	
	$('#printSchoolStudentGradesOptions').click(function(){
		if (!haveStudentsForPerformanceReport) {
			showLoading();
			$.post('services/planbook/school/studentsForPerformanceReport', {}, loadStudentsForPerformanceReport);
			$('#schoolStudentGradeReportStudent').val(currentGradesStudentId);
		} else {
			showBox('#printSchoolStudentGradesBox',10);
		}
	});
	
	function loadStudentsForPerformanceReport(data) {
		hideLoading();
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			var $select = $('#schoolStudentGradeReportStudent').html('').append($('<option/>').text('-- Select a Student --').val('')).data(data.students);
			$('#schoolStudentGradeReportTeacher').html('').append($('<option/>').text('All Teachers').val(0))
			$('#schoolStudentGradeReportPeriod').html('').append($('<option/>').text('All Periods').val(0));
			$('#schoolStudentGradeReportClass').html('').append($('<option/>').text('All Subjects').val(0));
			$.each(data.students, function(){
				var fullName = this.lastName + ", " + this.firstName;
				$select.append($('<option/>').text(fullName).val(this.studentId).data(this));
			});
			haveStudentsForPerformanceReport = true;
			showBox('#printSchoolStudentGradesBox',10);
		}
	}
	
	$('#schoolStudentGradeReportLevel').change(function(){
		var gradeLevel = $(this).val();
		var data = $('#schoolStudentGradeReportStudent').data();
		var $select = $('#schoolStudentGradeReportStudent').html('').append($('<option/>').text('-- Select a Student --').val(''));
		if (data) {
			$.each(data, function(){
				if (gradeLevel == '' || gradeLevel == this.gradeLevel) {
					var fullName = this.lastName + ", " + this.firstName;
					$select.append($('<option/>').text(fullName).val(this.studentId).data(this));
				}
			});
		}
	});
	
	$('#schoolStudentGradeReportStudent').change(function() {
		var data = $(this).find(':selected').data();
		var $select = $('#schoolStudentGradeReportTeacher').html('').append($('<option/>').text('All Teachers').val(0));
		$('#schoolStudentGradeReportPeriod').html('').append($('<option/>').text('All Periods').val(0));
		$('#schoolStudentGradeReportClass').html('').append($('<option/>').text('All Subjects').val(0));
		if (data.teachers) {
			$.each(data.teachers, function(){
				var fullName = this.lastName + ", " + this.firstName;
				$select.append($('<option/>').text(fullName).val(this.teacherId).data(this));
			});
		}
		
	});
	
	$('#schoolStudentGradeReportTeacher').change(function() {
		var data = $(this).find(':selected').data();
		var $select = $('#schoolStudentGradeReportPeriod').html('').append($('<option/>').text('All Periods').val(0));
		if (data.gradePeriods) {
			$.each(data.gradePeriods, function(){
				$select.append($('<option/>').text(this.name).val(this.gradePeriodId));
			});
		}
		
		$select = $('#schoolStudentGradeReportClass').html('').append($('<option/>').text('All Subjects').val(0));
		if (data.subjects) {
			$.each(data.subjects, function(){
				$select.append($('<option/>').text(this.className).val(this.subjectId));
			});
		}
	});

	$('#applyPrintGrades').click(function() {

		hideBox('#printGradesBox',10);

		$('#gradeReportClass').val(10);
		if ($('#gradeReportStudent2').val() == 1) {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else if ($('#gradeReportStudent2 option:selected').text().substr(0,14) == 'Students - All') {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else if ($('#gradeReportStudent2 option:selected').text().substr(0,10) == 'Students -') {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else {
			$('#gradeReportClass').val(0);
			$('#gradeReportStudent').val($('#gradeReportStudent2').val());
		}
		
		$('#printGradesForm').submit();

	});
	
	$('#applyPrintStudentGrades').click(function() {
		hideBox('#printStudentGradesBox',10);
		$('#printStudentGradesForm').submit();
	});
	
	$('#applyPrintSchoolStudentGrades').click(function(){
		var valError = false;
		clearNotification('#printSchoolStudentGradesErrorMsg');
		
		if ($.trim($('#schoolStudentGradeReportStudent').val()) == '') {
			valError = true;
			showNotification('#printSchoolStudentGradesErrorMsg', 'Please select a student');
		}
		
		if (!valError) {
			$('#gradeReportAdmin').val(userMode == 'A');
			hideBox('#printSchoolStudentGradesBox',10);
			$('#printSchoolStudentGradesForm').submit();
		}
		
	});
	
	$('#applyPrintGrades').click(function() {

		hideBox('#printGradesBox',10);

		$('#gradeReportClass').val(10);
		if ($('#gradeReportStudent2').val() == 1) {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else if ($('#gradeReportStudent2 option:selected').text().substr(0,14) == 'Students - All') {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else if ($('#gradeReportStudent2 option:selected').text().substr(0,10) == 'Students -') {
			$('#gradeReportClass').val($('#gradeReportStudent2').val());
			$('#gradeReportStudent').val(0);
		} else {
			$('#gradeReportClass').val(0);
			$('#gradeReportStudent').val($('#gradeReportStudent2').val());
		}
		
		$('#printGradesForm').submit();

	});

	$('#cancelPrintGrades').click(function() {
		hideBox('#printGradesBox',10);
	});
	
	$('#cancelPrintStudentGrades').click(function() {
		hideBox('#printStudentGradesBox',10);
	});
	
	$('#cancelPrintSchoolStudentGrades').click(function() {
		hideBox('#printSchoolStudentGradesBox',10);
	});

	$('#printStandards').click(function() {
		
		var valError = false;
		$('#reportErrorMsg').html('');

		var rStart = formatDateToSave($.trim($('#reportStart').val()));
		var rEnd   = formatDateToSave($.trim($('#reportEnd').val()));
		
		// validate start date
		if (valError == false) {
			if (rStart == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter a Start Date');
			} else {
			 		if (valDate(rStart) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid Start Date');
			 		}
				}
		}
		
		// validate end date
		if (valError == false) {
			if (rEnd == "") {
				valError = true;
				$('#reportErrorMsg').html('Please enter an End Date');
			} else {
			 		if (valDate(rEnd) == false) {
			 			valError = true;
			 			$('#reportErrorMsg').html('Please enter a valid End Date');
			 		}
				}
		}
	
		if (valError == false) {
			$('#printStandardsForm').html('<input type="hidden" name="reportGrade" value="' +  $('#reportGrade').val() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportState" value="' +  $('#reportState').val() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportSubject" value="' + $('#reportSubject').val() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportCategory" value="' + $('#reportCategory').val() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportClassId" value="' + $('#reportClass').val() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportStart" value="' + rStart + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="reportEnd" value="' + rEnd + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="userMode" value="' + userMode + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="teacherId" value="' + standardsTeacherId + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="stateName" value="' + $('#reportState :selected').text() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="className" value="' + $('#reportClass :selected').text() + '" />');
			$('#printStandardsForm').append('<input type="hidden" name="subjectName" value="' + $('#reportSubject :selected').text() + '" />');

			if (userMode == "A") {
				if (standardsTeacherId == 0) {
					$('#printStandardsForm').append('<input type="hidden" name="printName" value="' + userInfo.schoolName + '" />');
				} else {
					$('#printStandardsForm').append('<input type="hidden" name="printName" value="' + $('#standardsTeacherName').html() + '" />');
				}
			} else {
				$('#printStandardsForm').append('<input type="hidden" name="printName" value="' + userInfo.displayName + '" />');
			}

			$('#printStandardsForm').submit();

		}

	});

	$('#reportReturnButton').click(function () {
		$('#standardsReportBox').hide();
		$('#reportReturn').hide();
		$('#standardsReportAdminBox').show();
		$('#reportSubject').html('<option value="VA2">View All</option>');
		$('#reportCategory').html('<option value="VA">View All</option>');
		$('#reportClass').html('<option value="0">View All</option>');
		$('#reportSubject').val("VA2");
		$('#reportCategory').val("VA");
		$('#reportClass').val("0");
		oneSubject = false;
		standardsTeacherId = 0;
	});
	
	function loadStandardsReport(data) {
	
		hideLoading();

		$('#standardsReportBody').html('');
		var ls = '';

		$('#standardsReportAdminBox').hide();
		$('#standardsReportBox').show();
		if (userMode == "A") {$('#reportReturn').show();} else {$('#reportReturn').hide();}
		
		if (data.standards.length != null) {
			for (var x=0; x<data.standards.length; x++) {
	
				ls = '<tr class="standardsReportRow rCat' + data.standards[x].categoryId + '">';
				ls = ls +'<td class="slCell" style="vertical-align:top;">' + data.standards[x].id + '</td>'; 
				ls = ls +'<td class="srCell" style="vertical-align:top;">' + data.standards[x].desc + '</td>';
				ls = ls +'<td class="scCell" style="vertical-align:top;">' + data.standards[x].count + '</td>';
				
				var dateList = ''
				if (data.standards[x].dates != null && data.standards[x].dates.length > 0 ) {
					if (data.standards[x].dates.length > 1 && userMode == "T") {dateList = '<div class="standardLessons" id="sl' + data.standards[x].dbid + '" style="color:blue; text-decoration:underline;">View All</div>';}
					for (var y=0; y<data.standards[x].dates.length; y++) {
						if (userMode == "T") {
							dateList = dateList + '<div class="standardLessons" id="sl' + data.standards[x].dbid + '">' + formatDateToShow(data.standards[x].dates[y]) + '</div>'; 
						} else {
							dateList = dateList + '<div>' + formatDateToShow(data.standards[x].dates[y]) + '</div>'; 
						}
					}
				}
				ls = ls +'<td class="scCell" style="vertical-align:top;">' + dateList + '</td>';

				ls = ls + '</tr>';
				
				$('#standardsReportBody').append(ls);
			}
		}
		
		ls = '<tr><td><img src="spacer.gif" width="100px" height="1"></td>';
		ls = ls +'<td><img src="spacer.gif" width="500px" height="1"></td>';
		ls = ls +'<td><img src="spacer.gif" width="100px" height="1"></td>';
		ls = ls +'<td><img src="spacer.gif" width="100px" height="1"></td></tr>';
		$('#standardsReportBody').append(ls);
		
		$('#standardsReportTable').trigger("update");
		
		if (oneSubject == false) {
			loadStandardsSubjects(data);
		} else {
			rCategoryId	= new Array();
			rCategoryDesc = new Array();
			rCategoryType = new Array();
			if (data.categories != null) {
				for (var x=0; x<data.categories.length; x++) {
					rCategoryId[x] = data.categories[x].categoryId;
					rCategoryDesc[x] = data.categories[x].categoryDesc;
					rCategoryType[x] = data.categories[x].subject;
				}
			}
			setReportCategoryDropdown();
		}
		
	}	

	function loadStandardsReportAdmin(data) {
		
		hideLoading();
		$('#standardsReportAdminBody').html('');
		var ls = '';

		ls = '<tr style="height:200px;"><td style="vertical-align:top;"><div style="width:200px;">' + $('#reportState :selected').text() + '<br/>' + $('#reportGrade :selected').text() + '</div></td>';
		if (data.cSubjects.length != null) {
			for (var x=0; x<data.cSubjects.length; x++) {
				ls = ls + '<td class="scoreHeader"><div style="width:50px;height: 15px;"><div class="vertbox">' + data.cSubjects[x].name + '</div></div></td>';
			}
		}
		ls = ls + '</tr>';
		$('#standardsReportAdminBody').append(ls);
		
		ls = '<tr><td class="slCell" style="border-top-width:1px; border-top-style:solid; border-top-color:#C3D9FF; text-align:left;"><strong>Standards</strong></td>';
		if (data.cSubjects.length != null) {
			for (var x=0; x<data.cSubjects.length; x++) {
				ls = ls + '<td class="srCell" style="text-align:center;"><strong>' + data.cSubjects[x].count + '</strong></td>';
			}
		}
		ls = ls + '</tr>';
		$('#standardsReportAdminBody').append(ls);
		
		if (data.teachers.length != null) {
			for (var x=0; x<data.teachers.length; x++) {

				var fName = data.teachers[x].first;
				var lName = data.teachers[x].last;
				if (fName == "" && lName == "") {fName = "First"; lName="Last";}

				ls = '<tr><td class="slCell standardsTeacher" id="st' + data.teachers[x].id + '" style="text-align:left; cursor:pointer; border-left-width:1px; border-left-style:solid; border-left-color:#C3D9FF;">' + fName + ' ' + lName + '</td>';
				
				if (data.teachers[x].counts.length != null) {
					for (var y=0; y<data.teachers[x].counts.length; y++) {
						ls = ls + '<td class="srCell" style="text-align:center";>' + data.teachers[x].counts[y] + '</td>';
					}
				}
				
				ls = ls + '</tr>';
				$('#standardsReportAdminBody').append(ls);

			}
		}
		
		ls = '<tr><td><img src="spacer.gif" width="200px" height="1"></td>';
		if (data.subjects.length != null) {
			for (var x=0; x<data.subjects.length; x++) {
				ls = ls + '<td><img src="spacer.gif" width="40px" height="1"></td>';
			}
		}
		ls = ls + '</tr>';
		$('#standardsReportAdminBody').append(ls);
		
		$('#standardsReportAdminTable').trigger("update");

		var newWidth = $('#standardsReportAdminTable').width() + 17;
		$('#standardsReportAdminBox').css({'width':newWidth+'px'});
		
		$('#reportSubject').html('<option value="VA2">View All</option>');
		$('#reportCategory').html('<option value="VA">View All</option>');
		$('#reportClass').html('<option value="0">View All</option>');

	}	

	// Teacher notes
	$('#teacherNotes').click(function(){ 

		$('#teacherNotesText').val(teacherNotes);
		$('#teacherNotesDisplay').html(teacherNotes);
		
		if (teacherNotes == "") {
			$('#viewTeacherNotesBox').hide();
			$('#editTeacherNotesBox').show();
		} else {
			$('#viewTeacherNotesBox').show();
			$('#editTeacherNotesBox').hide();
		}
		
		showBox('#teacherNotesBox', 0);

	});
	
	$('#closeTeacherNotes').click(function(){ 
		$('#teacherNotesBox').hide();
	}); 

	$('#closeTeacherNotes2').click(function(){ 
		$('#teacherNotesBox').hide();
	});
	
	$('#closeEditTeacher').click(function(){ 
		hideBox('#editTeacherBox', 10);
	}); 

	$('#cancelEditTeacher').click(function(){ 
		hideBox('#editTeacherBox', 10);
	});
	
	$('#editTeacherNotes').click(function(){ 
		$('#viewTeacherNotesBox').hide();
		$('#editTeacherNotesBox').show();
	}); 

	$('#cancelTeacherNotes').click(function(){ 
		$('#teacherNotesBox').hide();
	}); 
	
	$('#applyTeacherNotes').click(function(){ 

		if (paymentNeeded == false) {
			
			tNotesInfo = new Object();
			tNotesInfo.teacherNotes = $('#teacherNotesText').val();

			showLoading();
			$.post('updateTeacherNotes', tNotesInfo, teacherNotesUpdated, "json");
			
		} else {
			showExpiredMsg();
		}
		
	}); 
	
	$('#deleteTeacherNotes').click(function(){ 

		if (paymentNeeded == false) {
			showLoading();
			tNotesInfo = new Object();
			tNotesInfo.teacherNotes = "";
			$.post('deleteTeacherNotes', tNotesInfo, teacherNotesDeleted, "json");
		} else {
			showExpiredMsg();
		}

	}); 
	

	function teacherNotesUpdated(data) {
	
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			teacherNotes = $('#teacherNotesText').val();
			$('#teacherNotesDisplay').html(teacherNotes);
			$('#viewTeacherNotesBox').show();
			$('#editTeacherNotesBox').hide();
		}
	}	

	function teacherNotesDeleted(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			teacherNotes = "";
			$('#teacherNotesBox').hide();
		}
	}	
	
	$('#printTeacherNotes').click(function(){ 
		$('#printNotesType').val("teacher");
		$('#printTeacherNotesText').val(teacherNotes);
		$('#printNotesForm').submit();
	});
	
	$('#printStudentNotes').click(function(e) {
		$('#printNotesType').val("student");
		$('#printTeacherNotesText').val(studentNotes);
		$('#printNotesForm').submit();
	});

	$('#printSubPlans').click(function(e) {
		$('#printNotesType').val("sub");
		$('#printTeacherNotesText').val(subPlans);
		$('#printNotesForm').submit();
	});

	$('#emailSubPlans').click(function(e) {
		showLoading();
		$.post('emailSubNotes', {subNotes : subPlans}, subPlansEmailed, "json");
	});

	function subPlansEmailed(data) {
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		}
	}
	
	// Student notes
	$('#studentNotes').click(function(){
		
		$('#studentNotesText').val(studentNotes);
		$('#studentNotesDisplay').html(studentNotes);
		
		if (studentNotes == null || studentNotes == "") {
			$('#viewStudentNotesBox').hide();
			$('#editStudentNotesBox').show();
		} else {
			$('#viewStudentNotesBox').show();
			$('#editStudentNotesBox').hide();
		}
		
		showBox('#studentNotesBox', 0);

	});
	
	$('#closeStudentNotes').click(function(){ 
		$('#studentNotesBox').hide();
	}); 

	$('#closeStudentNotes2').click(function(){ 
		$('#studentNotesBox').hide();
	});
	
	$('#editStudentNotes').click(function(){ 
		$('#viewStudentNotesBox').hide();
		$('#editStudentNotesBox').show();
	}); 

	$('#cancelStudentNotes').click(function(){ 
		$('#studentNotesBox').hide();
	}); 
	
	$('#applyStudentNotes').click(function(){ 

		if (paymentNeeded == false) {
			
			sNotesInfo = new Object();
			sNotesInfo.studentNotes = $('#studentNotesText').val();

			showLoading();
			$.post('updateStudentNotes', sNotesInfo, studentNotesUpdated, "json");
			
		} else {
			showExpiredMsg();
		}
		
	}); 
	
	$('#deleteStudentNotes').click(function(){ 

		if (paymentNeeded == false) {			
			showLoading();
			sNotesInfo = new Object();
			sNotesInfo.studentNotes = "";
			
			$.post('updateStudentNotes', sNotesInfo, studentNotesDeleted, "json");
		} else {
			showExpiredMsg();
		}

	}); 
	

	function studentNotesUpdated(data) {
	
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			studentNotes = $('#studentNotesText').val();
			$('#studentNotesDisplay').html(studentNotes);
			$('#viewStudentNotesBox').show();
			$('#editStudentNotesBox').hide();
		}
	}	

	function studentNotesDeleted(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			studentNotes = "";
			$('#studentNotesBox').hide();
		}
	}	
	
	// Sub plans
	$('#subPlans').click(function(){ 

		$('#subPlansText').val(subPlans);
		$('#subPlansDisplay').html(subPlans);
		
		if (subPlans == "") {
			$('#viewSubPlansBox').hide();
			$('#editSubPlansBox').show();
		} else {
			$('#viewSubPlansBox').show();
			$('#editSubPlansBox').hide();
		}
		
		showBox('#subPlansBox', 0);

	});
	
	$('#closeSubPlans').click(function(){ 
		$('#subPlansBox').hide();
	}); 

	$('#closeSubPlans2').click(function(){ 
		$('#subPlansBox').hide();
	});
	
	$('#editSubPlans').click(function(){ 
		$('#viewSubPlansBox').hide();
		$('#editSubPlansBox').show();
	}); 

	$('#cancelSubPlans').click(function(){ 
		$('#subPlansBox').hide();
	}); 
	
	$('#applySubPlans').click(function(){ 

		if (paymentNeeded == false) {
			
			sPlansInfo = new Object();
			sPlansInfo.subPlans = $('#subPlansText').val();

			showLoading();
			$.post('updateSubPlans', sPlansInfo, subPlansUpdated, "json");
			
		} else {
			showExpiredMsg();
		}
		
	}); 
	
	$('#deleteSubPlans').click(function(){ 

		if (paymentNeeded == false) {
			showLoading();			
			sPlansInfo = new Object();
			sPlansInfo.subPlans = "";
			$.post('updateSubPlans', sPlansInfo, subPlansDeleted, "json");
		} else {
			showExpiredMsg();
		}

	}); 
	

	function subPlansUpdated(data) {
	
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			subPlans = $('#subPlansText').val();
			$('#subPlansDisplay').html(subPlans);
			$('#viewSubPlansBox').show();
			$('#editSubPlansBox').hide();
		}
	}	

	function subPlansDeleted(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			subPlans = "";
			$('#subPlansBox').hide();
		}
	}	

	function loadTermsTable() {
		
		$('#termsTableBody').html('');

		if (terms != null) {
			for (var x=0; x<terms.length; x++) {
				var nameTerm = '#nameTerm' + x;
				var firstDayTerm = '#firstDayTerm' + x;
				var startsOnTerm = '#startsOnTerm' + x;
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="nameTerm' + x + '" size="20"></td>';
				ls = ls + '<td><input type="text" id="firstDayTerm' + x + '" size="10"></td>';
				ls = ls + '<td><select id="startsOnTerm' + x + '"></select></td>';
				ls = ls + '<td><img class="removeTerm" id="t' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';
				$('#termsTableBody').append(ls);
	
				$(nameTerm).val(terms[x].name);
	
				$(firstDayTerm).datepicker({});
				if (userInfo.dateFormat == 2) {
					$(firstDayTerm).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
				} else {
					$(firstDayTerm).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
				}
				$(firstDayTerm).val(formatDateToShow(terms[x].firstDay));
	
				fillTermStartsOn(startsOnTerm);
				$(startsOnTerm).val(terms[x].startsOn);
			}
		}

		if ($('#termsTableBody').html() == '') {
			$('#termsTableHead').hide();
		} else {
			$('#termsTableHead').show();
		}
	}

	function formatDateToSequence(displayDate1) {
		
		var displayDate2 = displayDate1;
			
		if (displayDate2 != "") {
		
			dtCh= "/";

			var pos1 = displayDate1.indexOf(dtCh);
			var pos2 = displayDate1.indexOf(dtCh,pos1+1);
	
			var strMonth = displayDate1.substring(0,pos1);
			var strDay   = displayDate1.substring(pos1+1,pos2);
			var strYear  = displayDate1.substring(pos2+1);
	
			displayDate2 = strMonth + "d" + strDay + "d" + strYear;
		
		}
			
		return displayDate2;
	}

	function formatDateToShowNoYear(displayDate1) {
		
		var displayDate2 = displayDate1;
			
		if (displayDate2 != "") {
		
			dtCh= "/";

			var pos1 = displayDate1.indexOf(dtCh);
			var pos2 = displayDate1.indexOf(dtCh,pos1+1);
	
			var strMonth = displayDate1.substring(0,pos1);
			var strDay   = displayDate1.substring(pos1+1,pos2);
	
			if (userInfo.dateFormat == 2) {
				displayDate2 = strDay + userInfo.dateDelimiter + strMonth;
			} else {
				displayDate2 = strMonth + userInfo.dateDelimiter + strDay;
			}
		
		}
			
		return displayDate2;
	}
	
	function formatDateToShow(displayDate1) {
		
		var displayDate2 = displayDate1;
			
		if (displayDate2 != "") {
		
			dtCh= "/";

			var pos1 = displayDate1.indexOf(dtCh);
			var pos2 = displayDate1.indexOf(dtCh,pos1+1);
	
			var strMonth = displayDate1.substring(0,pos1);
			var strDay   = displayDate1.substring(pos1+1,pos2);
			var strYear  = displayDate1.substring(pos2+1);
	
			if (userInfo.dateFormat == 2) {
				displayDate2 = strDay + userInfo.dateDelimiter + strMonth + userInfo.dateDelimiter + strYear;
			} else {
				displayDate2 = strMonth + userInfo.dateDelimiter + strDay + userInfo.dateDelimiter + strYear;
			}
		
		}
			
		return displayDate2;
	}
	
	function formatDateToSave(displayDate1) {
		
		var displayDate2 = $.trim(displayDate1);

		if (displayDate2 != "") {
			
			var dtCh= "/";

			var pos1 = displayDate1.indexOf(userInfo.dateDelimiter);
			var pos2 = displayDate1.indexOf(userInfo.dateDelimiter,pos1+1);

			var strMonth = displayDate1.substring(0,pos1);
			var strDay   = "";
			var strYear  = "";

			if (pos2 == -1) {
				var d = new Date();
				strDay  = displayDate1.substring(pos1+1);
				strYear = d.getFullYear();
			} else {
				strDay  = displayDate1.substring(pos1+1,pos2);
				strYear = displayDate1.substring(pos2+1);
			}
			
			if (userInfo.dateFormat == 2) {
				displayDate2 = strDay + dtCh + strMonth + dtCh + strYear;
			} else {
				displayDate2 = strMonth + dtCh + strDay + dtCh + strYear;
			}
			
		}

		return displayDate2;
	}
	
	$('#addNoClass').click(function() {
		
		var newPos;
		if (noClass == null) {
			noClass = new Array();
			newPos = 0;
		} else {
			newPos = noClass.length;
		}

		noClass[newPos] = "";
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="noClassDay' + newPos + '" size="10"></td>';
		ls = ls + '<td><img class="removeNoClass" id="ncd' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#noClassTableBody').append(ls);
		
		ls = '#noClassDay' + newPos;
		$(ls).datepicker({});
		if (userInfo.dateFormat == 2) {
			$(ls).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
		} else {
			$(ls).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
		}

	});

	$('.removeNoClass').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substring(3);
		var dayPos = parseInt(temp2,10);
 
		for (var x=0; x<noClass.length; x++) {
			noClass[x] = formatDateToSave($("#noClassDay"+x).val());
		}
		
		noClass.splice(dayPos, 1);

		loadNoClassTable();

	});
	
	function loadNoClassTable() {
		
		$('#noClassTableBody').html('');

		if (noClass != null) {
			for (var x=0; x<noClass.length; x++) {

				var noClassDay = '#noClassDay' + x;
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="noClassDay' + x + '" size="10"></td>';
				ls = ls + '<td><img class="removeNoClass" id="ncd' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#noClassTableBody').append(ls);
	
				$(noClassDay).datepicker({});
				if (userInfo.dateFormat == 2) {
					$(noClassDay).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
				} else {
					$(noClassDay).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
				}
				$(noClassDay).val(formatDateToShow(noClass[x]));

			}
		}
		
	}

	$('#aNoClass').click(function() {

		if (searchYearId != "" && searchYearId != userInfo.yearId) {
			
			showErrorBox('You can only remove a class from the current school year');

		} else {
		
			if (paymentNeeded == false) {
	
				if (lessonLoaded == "N") {loadLesson(currentId);}

				var tempDate = $('#lbDate').html();
				var posSpace = tempDate.indexOf(" ");
				
				lessonInfo = new Object();
				lessonInfo.extraLesson = currentExtraLesson;
				lessonInfo.classId    = currentClassId;
				lessonInfo.customDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
	
				if (confirm('This will delete the lesson and remove the class from this day. Are you sure you want to remove?')) {
					action = 'removeClassDay';
					showLoading();
					$.getJSON('removeClassDay', lessonInfo, classDayRemoved);
				}
			} else {
				showExpiredMsg();
			}
		
		}
		
	});

	function classDayRemoved(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				action = 'removeClassDay';
				hideBox('#editLessonBox', 10);

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				getLessons();

			}
		}
	}
	
	$('#downloadLinks').click(function() {
		$('#downloadLinksForm').submit();
	});
	

	$('#commentsButton').click(function() {
		browserButton = false;
		if (userMode != "S") {window.location.hash = "comment";}
		showComments();
	});	

	function showComments() {
		if (haveComments == false) {
			var commentInfo = new Object ();
			commentInfo.userMode = userMode;
			commentInfo.studentId = 0;
			if (userMode == 'A') {commentInfo.teacherId = currentTeacherId;} else {commentInfo.teacherId = userInfo.userId;}
			action = "getComments";
			showLoading();
			$.getJSON('getComments', commentInfo, loadComments);
		} else {
			hideMessage();
			hideAll();
			$('#commentView').show();
			if (studentData.studentId != null && studentData.studentId != 0) {
				$('#returnToPlans').show();
			} else {
				$('#returnToPlans').hide();
			}			
		}
	}	

	function loadComments(data) {

		hideLoading();

		var fromHeight = $(window).height() - 300;
		if (fromHeight < 200) {fromHeight = 200;}
		$('#listCommentBox').css({'height':fromHeight+'px'});
		
		if (userMode == 'T') {
			userInfo.newCommentA = "N";
			$('#oldComment').show();
			$('#newComment').hide();
		} else if (userMode == 'A') {
			$('#newC' + currentTeacherId).hide();
		} else if (userMode == 'S') {
			$('#oldComment').show();
			$('#newComment').hide();
		}
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {

				haveComments = true;
				
				$('#commentTableBody').html("");
		
				if (data.comments.length != null) {
		
					for (var x=0; x<data.comments.length; x++) {
						
						ls = '<tr class="commentList" id="' + data.comments[x].commentId + '">';
						ls = ls + '<td class="slCell">' + formatDateToShow(data.comments[x].commentDate) + '</td>';
						
						if ((userMode == 'T' && data.comments[x].authorType == 'T') || (userMode == 'A' && data.comments[x].authorType == 'A') || (userMode == 'S' && data.comments[x].authorType == 'S')) {
							ls = ls + '<td class="srCell"><span class="commentTo">To</span>' + data.comments[x].recipientName + '</td>';
							ls = ls + '<td class="srCell" style="border-right:0;">' + data.comments[x].commentText + '</td>';
							ls = ls + '<td class="scCell"><div class="deleteComment buttonsmall" style="padding:3px 4px 1px 4px; margin-right:5px;" id="c' + data.comments[x].commentId + '"><img src="images/trash.png"></div></td></tr>';
						} else {
							ls = ls + '<td class="srCell"><span class="commentFrom">From</span>' + data.comments[x].authorName + '</td>';
							ls = ls + '<td class="srCell" style="border-right:0;">' + data.comments[x].commentText + '</td>';
							ls = ls + '<td class="scCell"></td>';
						}
						
						ls = ls + '</tr>';

						$('#commentTableBody').append(ls);
					
					}
				}
	
				ls = '<tr><td><img src="spacer.gif" width="100px" height="1"></td><td><img src="spacer.gif" width="150px" height="1"></td><td><img src="spacer.gif" width="300px" height="1"></td><td></td></tr>';
				$('#commentTableBody').append(ls);
				
				$('#commentText').val('');
				
				showComments();

			}
		}		
	}
	
	$('#applyComment').click(function() {

		var valError = false;

		clearNotification('#commentErrorMsg');
		if ($.trim($('#commentText').val()) == '') {
			valError = true;
			showNotification('#commentErrorMsg', 'Please enter a comment');
		}
		
		if (valError == false) {
			
			hideBox('#editCommentBox', 10);
			
			commentInfo = new Object();
			commentInfo.teacherId = userInfo.userId;
			commentInfo.studentId = 0;
			commentInfo.userMode = userMode;
			
			commentInfo.commentText = $.trim($('#commentText').val());
			commentInfo.commentName = userInfo.displayName;

			commentInfo.authorType = userMode;
			commentInfo.authorId = userInfo.userId;

			commentInfo.recipientId = $('#commentSendTo').val();

			if (userMode == 'T') {  // if teacher is sending, need to determine recipient type
				if ($('#commentSendTo').val() == 0) {
					commentInfo.recipientType = 'A';
				} else if ($('#commentSendTo option:selected').text().substr(0,14) == 'Students - All') {
					commentInfo.recipientType = 'Y';
					commentInfo.recipientId = userInfo.yearId;
				} else if ($('#commentSendTo option:selected').text().substr(0,10) == 'Students -') {
					commentInfo.recipientType = 'C';
				} else {
					commentInfo.recipientType = 'S';
				}
			} else {
				commentInfo.recipientType = 'T';  // if admin or student is sending, then recipient is always a teacher
				commentInfo.teacherId = $('#commentSendTo').val();
				if (userMode == 'S') {
					commentInfo.authorId = studentData.studentId;
				}
			}
			
			var d = new Date();
			var curr_date = d.getDate();
			var curr_month = d.getMonth();
			curr_month++;
			var curr_year = d.getFullYear();
			commentInfo.commentDate = curr_month + "/" + curr_date + "/" + curr_year;
			
			if (paymentNeeded == false) {
				action = 'addComment';
				showLoading();
				$.post('addComment', commentInfo, loadComments, "json");
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('.deleteComment').live('click', function() {

		commentInfo = new Object();
		commentInfo.commentId = this.id.substring(1);
		commentInfo.studentId = 0;
		commentInfo.userMode = userMode;
		if (userMode == 'A') {commentInfo.teacherId = currentTeacherId;} else {commentInfo.teacherId = userInfo.userId;}
		if (paymentNeeded == false) {
			action = 'deleteComment';
			showLoading();
			$.getJSON('deleteComment', commentInfo, loadComments);
		} else {
			showExpiredMsg();
		}
				
	});

	$('#applyEditTeacher').click(function() {

		var valError = false;
		clearNotification('#editTeacherErrorMsg');

		var editTeacherEmail = $.trim($('#editTeacherEmail').val());
		var editTeacherFirst = $.trim($('#editTeacherFirst').val());
		var editTeacherLast = $.trim($('#editTeacherLast').val());

		if (editTeacherEmail == "") {
			valError = true;
			showNotification('#editTeacherErrorMsg', 'Please enter a teacher Email Address');
		} else if (valEmail(editTeacherEmail) == false) {
			valError = true;
			showNotification('#editTeacherErrorMsg', 'Please enter a valid teacher Email Address');
		}

		if (valError == false && editTeacherFirst == "") {
			valError = true;
			showNotification('#editTeacherErrorMsg', 'Please enter a teacher First Name');
		}
		
		if (valError == false && editTeacherLast == "") {
			valError = true;
			showNotification('#editTeacherErrorMsg', 'Please enter a teacher Last Name');
		}
		
		if (valError == false) {

			var jsonInfo = new Object ();
			jsonInfo.teacherType = $('#editTeacherType').val();
			jsonInfo.teacherEmail = editTeacherEmail;	
			jsonInfo.teacherFirst = editTeacherFirst;
			jsonInfo.teacherLast = editTeacherLast;

			if (paymentNeeded == false) {
				showLoading();
				$.post('updateTeacher', jsonInfo, loadTeacherList, "json");
				hideBox('#editTeacherBox', 10);
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('#applySearch').click(function() {

		sInfo = new Object();

		sInfo.currentGrade = userInfo.currentGrade;
		sInfo.currentState = userInfo.currentState; 
		sInfo.currentSubject = userInfo.currentSubject; 

		sInfo.searchString = $.trim($('#searchString').val());
		if (sInfo.searchString != "") {
			searchShowAll = true;
			action = 'getSearchStandards';
			showLoading();
			$.getJSON('getSearchStandards', sInfo, loadStandards);
		}

		return false;
		
	});

	function checkCurrentDay() {
	
		// need to do check day twice to handle all possible start day in the
		// sequence
		if (userInfo.sunShow == "N" && (currentDay == 0 || currentDay == 7  || currentDay == 14)) {currentDay++;}
		if (userInfo.monShow == "N" && (currentDay == 1 || currentDay == 8  || currentDay == 15)) {currentDay++;}
		if (userInfo.tueShow == "N" && (currentDay == 2 || currentDay == 9  || currentDay == 16)) {currentDay++;}
		if (userInfo.wedShow == "N" && (currentDay == 3 || currentDay == 10 || currentDay == 17)) {currentDay++;}
		if (userInfo.thuShow == "N" && (currentDay == 4 || currentDay == 11 || currentDay == 18)) {currentDay++;}
		if (userInfo.friShow == "N" && (currentDay == 5 || currentDay == 12 || currentDay == 19)) {currentDay++;}
		if (userInfo.satShow == "N" && (currentDay == 6 || currentDay == 13 || currentDay == 20)) {currentDay++; currentWeek++;}
		if (userInfo.sunShow == "N" && (currentDay == 0 || currentDay == 7  || currentDay == 14)) {currentDay++;}
		if (userInfo.monShow == "N" && (currentDay == 1 || currentDay == 8  || currentDay == 15)) {currentDay++;}
		if (userInfo.tueShow == "N" && (currentDay == 2 || currentDay == 9  || currentDay == 16)) {currentDay++;}
		if (userInfo.wedShow == "N" && (currentDay == 3 || currentDay == 10 || currentDay == 17)) {currentDay++;}
		if (userInfo.thuShow == "N" && (currentDay == 4 || currentDay == 11 || currentDay == 18)) {currentDay++;}
		if (userInfo.friShow == "N" && (currentDay == 5 || currentDay == 12 || currentDay == 19)) {currentDay++;}
		if (userInfo.satShow == "N" && (currentDay == 6 || currentDay == 13 || currentDay == 20)) {currentDay++; currentWeek++;}
		
	}
	
	function checkCurrentDayPrev() {

		// need to do check day twice to handle any possible start day in the
		// sequence
		if (userInfo.satShow == "N" && (currentDay == 6 || currentDay == 13 || currentDay == 20)) {currentDay--;}
		if (userInfo.friShow == "N" && (currentDay == 5 || currentDay == 12 || currentDay == 19)) {currentDay--;}
		if (userInfo.thuShow == "N" && (currentDay == 4 || currentDay == 11 || currentDay == 18)) {currentDay--;}
		if (userInfo.wedShow == "N" && (currentDay == 3 || currentDay == 10 || currentDay == 17)) {currentDay--;}
		if (userInfo.tueShow == "N" && (currentDay == 2 || currentDay == 9  || currentDay == 16)) {currentDay--;}
		if (userInfo.monShow == "N" && (currentDay == 1 || currentDay == 8  || currentDay == 15)) {currentDay--;}
		if (userInfo.sunShow == "N" && (currentDay == 0 || currentDay == 7  || currentDay == 14)) {currentDay--; currentWeek--;}
		if (userInfo.satShow == "N" && (currentDay == 6 || currentDay == 13 || currentDay == 20)) {currentDay--;}
		if (userInfo.friShow == "N" && (currentDay == 5 || currentDay == 12 || currentDay == 19)) {currentDay--;}
		if (userInfo.thuShow == "N" && (currentDay == 4 || currentDay == 11 || currentDay == 18)) {currentDay--;}
		if (userInfo.wedShow == "N" && (currentDay == 3 || currentDay == 10 || currentDay == 17)) {currentDay--;}
		if (userInfo.tueShow == "N" && (currentDay == 2 || currentDay == 9  || currentDay == 16)) {currentDay--;}
		if (userInfo.monShow == "N" && (currentDay == 1 || currentDay == 8  || currentDay == 15)) {currentDay--;}
		if (userInfo.sunShow == "N" && (currentDay == 0 || currentDay == 7  || currentDay == 14)) {currentDay--; currentWeek--;}

	}

	function hideDays() {
		if (userInfo.sunShow == 'N') {$('.daySun').hide(); $('.dU').hide(); $('.mU').hide();}
		if (userInfo.monShow == 'N') {$('.dayMon').hide(); $('.dM').hide(); $('.mM').hide();}
		if (userInfo.tueShow == 'N') {$('.dayTue').hide(); $('.dT').hide(); $('.mT').hide();}
		if (userInfo.wedShow == 'N') {$('.dayWed').hide(); $('.dW').hide(); $('.mW').hide();}
		if (userInfo.thuShow == 'N') {$('.dayThu').hide(); $('.dR').hide(); $('.mR').hide();}
		if (userInfo.friShow == 'N') {$('.dayFri').hide(); $('.dF').hide(); $('.mF').hide();}
		if (userInfo.satShow == 'N') {$('.daySat').hide(); $('.dS').hide(); $('.mS').hide();}
	}
	
	
	$('#tester').click(function() {

		jsonInfo = new Object();
		jsonInfo.numYears  = 2;
		jsonInfo.appleTran = "test";

		showLoading();
		$.getJSON('makePaymentApple', jsonInfo, testerDone);
		
	});

	function testerDone(data) {
		hideLoading();
	}
	
	function convertLessons() {
		if (convertPos < convertYears.length) {
			$('#updating').show();
			$('#updateDone').hide();
			$('#convertScreen').show();
			$.getJSON('convertLessons', "yearId="+convertYears[convertPos], lessonsConverted);
		} else {
			$('#updating').hide();
			$('#updateDone').show();
		}
	}
	
	function lessonsConverted(data) {
		if (data.convertStatus != 2) {
			showErrorBox('Sorry, an error has occurred. Please try again. If the error continues, please contact us at 888-205-5528 or support@planbook.com');
		} else {
			convertPos++;
			convertLessons();
		}
	}
	
	$('#updateDone').click(function() {
		showLoading();
		$.getJSON('getSettings', 'user=user', loadSettings);
	});

	$('#adminEventShift').click(function() {
		adminEventShift("Y");
	});

	$('#adminEventNoShift').click(function() {
		adminEventShift("N");
	});
	
	function adminEventShift(shiftLessons) {
		jsonInfo = new Object();
		jsonInfo.shiftLessons = shiftLessons;
		jsonInfo.monday = gMonday;
		hideBox('#adminEventBox', 30);
		showLoading();
		$.getJSON('adminEventShift', jsonInfo, loadWeeks);
	}

	function loadPayments(payments) {
		
		$('#paymentBody').html('');
		if (payments != null && payments.length > 0) {
			for (var y=0; y<payments.length; y++) {
				var ls = '<tr>';
				ls = ls + '<td class="slCell">' + payments[y].paymentDate + '</td>';
				ls = ls + '<td class="scCell"><div style="text-align:right;">' + "$" + payments[y].paymentAmount.toFixed(2) + '</div></td>';
				ls = ls + '<td class="scCell"><div>' + payments[y].numYears + '</div></td>';
				ls = ls + '<td class="scCell"><div>' + payments[y].checkNum + '</div></td>';
				ls = ls + '<td><img class="receipt" id="r' + payments[y].paymentId + '" border="0" src="images/printer16.png" style="cursor:pointer; margin-left:3px;" title="Print Receipt"></td>';
				ls = ls + '</tr>';
				$('#paymentBody').append(ls);
			}
			$('#paymentHistory').show();
		} else {
			$('#paymentHistory').hide();
		}
	}

	$('.receipt').live('click', function() {
		$('#printType').val("T");
		$('#printId').val($(this).attr('id').substr(1));
		$('#printInvoiceForm').submit();
	});
	
	$('#getFreeMonths').click(function() {

		clearNotification('#freeMonthsErrorMsg');
		
		$('#freeContact').val(userInfo.firstName + " " + userInfo.lastName);
		$('#freeEmail').val(userInfo.emailAddress);
		$('#freeDistrict').val(userInfo.schoolDistrict);
		$('#freeSchool').val(userInfo.schoolName);
		$('#freeAddress').val("");
		$('#freeCity').val("");
		$('#freeState').val("");
		$('#freeZip').val("");
		
		$('#editAccountBox').hide();
		$('#freeMonthsScreen').show();
	});

	$('#cancelFreeMonths').click(function() {
		$('#freeMonthsScreen').hide();
		$('#editAccountBox').show();
	});

	$('#applyFreeMonths').click(function() {

		var valError = false;
		clearNotification('#freeMonthsErrorMsg');
		
		if ($.trim($('#freeContact').val()) == "" || $.trim($('#freeEmail').val()) == "" || $.trim($('#freeDistrict').val()) == "" || $.trim($('#freeSchool').val()) == "" ||
			$.trim($('#freeAddress').val()) == "" || $.trim($('#freeCity').val()) == "" || $.trim($('#freeState').val()) == "" || $.trim($('#freeZip').val()) == "") {
			valError = true;
			showNotification('#freeMonthsErrorMsg', 'All fields must be entered, please check that none are blank');
		}

		if (valError == false && valEmail($.trim($('#freeEmail').val())) == false) {
			valError = true;
			showNotification('#freeMonthsErrorMsg', 'Please enter a valid email address');
		}

		if (valError == false) {
		
			jsonInfo = new Object();
			jsonInfo.freeContact = $.trim($('#freeContact').val());
			jsonInfo.freeEmail = $.trim($('#freeEmail').val());
			jsonInfo.freeDistrict = $.trim($('#freeDistrict').val());
			jsonInfo.freeSchool = $.trim($('#freeSchool').val());
			jsonInfo.freeAddress = $.trim($('#freeAddress').val());
			jsonInfo.freeCity = $.trim($('#freeCity').val());
			jsonInfo.freeState = $.trim($('#freeState').val());
			jsonInfo.freeZip = $.trim($('#freeZip').val());

			showLoading();
			$.post('addSchool', jsonInfo, freeSchoolAdded, "json");
		
		}
		
		
	});
	
	function freeSchoolAdded(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			
			if (data.schoolId != null) {
				userInfo.schoolId = data.schoolId;
			}
			
			if (data.promoCode != null) {
				userInfo.promoCode = data.promoCode;
			}
	
			if (data.freeCount != null) {
				userInfo.freeCount = data.freeCount;
			}
			
			$('#schoolId').val(userInfo.schoolId);
			
			userInfo.paidThroughDate = data.paidThroughDate;
			$('#paidThroughDate').html(formatDateToShow(userInfo.paidThroughDate));
			
			updateSchoolInfo();
			
			$('#findSchoolScreen').hide();
			$('#freeMonthsScreen').hide();
			$('#editAccountBox').show();

			if (userInfo.freeCount == 1) {
				showErrorBox("Your school has been added! Your school ID is " + userInfo.schoolId + ", please share this ID with your fellow teachers.")
			}
			
		}
	}
	
	$('#findSchool').click(function() {

		clearNotification('#freeMonthsErrorMsg');

		var schoolZip = $.trim($('#freeZip').val());
		if (schoolZip == "") {
			showNotification('#freeMonthsErrorMsg', 'Please enter a school zipcode');
		} else {
			showLoading();
			$.getJSON('getSchools', "schoolZip="+schoolZip, checkSchool);
		}
	
	});

	function checkSchool(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else if (data.schools.length == 0) {
			showNotification('#freeMonthsErrorMsg', 'No schools found for zipcode, please add your school');
		} else {

			$('#freeBody').html('');
			for (var y=0; y<data.schools.length; y++) {
				var ls = '<tr class="freeRow" id="fr' + data.schools[y].schoolId + '" style="cursor:pointer;">';
				ls = ls + '<td class="slCell" style="text-align:left;">' + data.schools[y].schoolName + '</td>';
				ls = ls + '<td class="srCell">' + data.schools[y].schoolCity + '</td>';
				ls = ls + '<td class="srCell">' + data.schools[y].schoolState + '</td>';
				ls = ls + '</tr>';
				$('#freeBody').append(ls);
			}
		
			currentSchoolId = 0;
			clearNotification('#findSchoolErrorMsg');
			
			$('#freeMonthsScreen').hide();
			
			$('#findSchoolScreen').show();
			$('.freeRow td').css({'background-color':'white'});

		}
	}
	
	$('.freeRow').live('click', function() {
		$('.freeRow td').css({'background-color':'white'});
		var ls = '#' + this.id + ' td';
		$(ls).css({'background-color':'#DBDFE8'});
		currentSchoolId = this.id.substring(2);
	});

	$('#schoolFound').click(function() {

		clearNotification('#findSchoolErrorMsg');

		if (currentSchoolId == 0) {
			showNotification('#findSchoolErrorMsg', 'Please select a school');
		} else {
           	setSchoolTerms();
           	setDayNames();
    		userInfo.newPassword = "";
    		userInfo.userPassword = "";
			userInfo.schoolId = currentSchoolId;
			showLoading();
			$.post('updateSettings', userInfo, freeSchoolAdded, "json");
		}
		
	});

	$('#schoolNotFound').click(function() {
		$('#findSchoolScreen').hide();
		$('#freeMonthsScreen').show();
		clearNotification('#freeMonthsErrorMsg');
	});

	function updateSchoolInfo() {
	
		if (userInfo.schoolId != null && userInfo.schoolId != 0) {

			if (userInfo.promoCode == "1" || userInfo.promoCode == "3" || userInfo.promoCode == "6") {
				
				// we have a free school, show free months info
				
				var ls = "Your school currently has ";
				
				if (userInfo.freeCount == 1) {
					ls = ls + "1 teacher,<br/>";
				} else {
					ls = ls + userInfo.freeCount + " teachers,<br/>";
				}
				
				if (userInfo.promoCode == "1") {
					var freeNeeded = 5 - userInfo.freeCount;
					ls = ls + freeNeeded + " more will earn you 3 free months!";
				} else if (userInfo.promoCode == "3") {
					ls = ls + "you have received 3 free months!";
				} else if (userInfo.promoCode == "6") {
					ls = ls + "you have received 6 free months!";
				}
				
				$('#freeMonths').html(ls);
				
				$('#freeMonths').show();
				$('#getFreeMonths').hide();
				$('#freeMonthsRow').show();

			} else {
				// we have a paid school, don't show free months info
				$('#freeMonthsRow').hide();
			}
			
		} else {
			// teacher not connected to a school, show get free months button
			$('#freeMonths').hide();
			$('#getFreeMonths').show();
			$('#freeMonthsRow').show();
		}
		
	}

	function showPart(hsPartId) {
		$(hsPartId).show();
		if (hsPartId == '.event') {
			$('.event1').show();
			$('.event2').css({'border-width':'1px'});
		}
		
		// if Standard IDs are shown and the description is hidden, set ID
		// cursor as pointer
		standardDescToolTip();
	}

	function hidePart(hsPartId) {
		$(hsPartId).hide();
		if (hsPartId == '.event') {
			$('.event1').hide();
			$('.event2').css({'border-width':'0'});
		}
		
		if (hsPartId == '.allStText' && $('.allStIDs').css('display') != 'none') {
			$('.allStIDs').css({'cursor':'default'});
			$('.allStIDs').css({'margin':'0 3px 3px 0'});
		}
	}
	
	function standardDescToolTip() {
		if ($('.allStText').css('display') == 'none') {
			$('.allStIDs').css({'cursor':'default'});
			$('.allStIDs').css({'margin':'0 3px 3px 0'});
		} else {
			$('.allStIDs').css({'cursor':'text'});
			$('#standardsDesc').html();
			$('.allStIDs').css({'margin':'0 3px -3px 0'});
		}
	}

	function showClassLessons(hsClassId) {
		$(hsClassId).show();
		var hsSubjectId = hsClassId.replace("class","subject");
		$(hsSubjectId).css({'border-width':'1px'});
	}

	function hideClassLessons(hsClassId) {
		$(hsClassId).hide();
		var hsSubjectId = hsClassId.replace("class","subject");
		$(hsSubjectId).css({'border-width':'0'});
	}	
	
	function removeAllSubjects() {
		for (var x=1; x<=21; x++) {
			for (var y=1; y <=50; y++) {
				$('#x'+x+'y'+y).stripClass('subject');
				$('#x'+x+'y'+y).stripClass('event');
			}
		}
	}
	
	$.fn.stripClass = function (partialMatch, endOrBegin) {
	    var x = new RegExp((!endOrBegin ? "\\b" : "\\S+") + partialMatch + "\\S*", 'g');
	    this.attr('class', function (i, c) {
	        if (!c) return; // protect against no class
	        return c.replace(x, '');
	    });
	    return this;
	};
	
	$('#lSearch').click(function (){
		
		clearNotification('#searchErrorMsg');
		
		if ($.trim($('#searchText').val()) != "") {
			if(currentSearchText == $.trim($('#searchText').val())) {
				haveSearch = true;
				showSearchList();
			} else {
				haveSearch = false;
				var jsonInfo = new Object();
				jsonInfo.searchString = $.trim($('#searchText').val());;
				if (haveSearch == false) {
					showLoading();
					$.getJSON('getSearchedLessons', jsonInfo, loadSearchList);
				}
			}
		} else { 
			showNotification('#searchErrorMsg', "Please enter a keyword");
		}
		
		currentSearchText = $.trim($('#searchText').val());
		return false;
		
	});
	
	$('#searchListButton').click(function() {
		browserButton = false;
		window.location.hash = "search";
		showSearchList();
	});
	
	function showSearchList() {
	
		if ($('#searchTableBody').html() == "") {
			var ls = '<tr><td><img src="spacer.gif" width="20px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#searchTableBody').append(ls);
		}
		
		currentView = "Search";
		
		hideAll();
		$('.searchButton').show();
		$('#searchView').show();
	
		showAction();

	}
	
	function loadSearchList(data) {

		hideLoading();
		clearNotification('#searchErrorMsg');
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			$('#searchTableBody').html("");

			if (data.searchList.length > 0) {

				for (var x=0; x<data.searchList.length; x++) {
	
					if (data.searchList[x].lessonText != null) {
						
						data.searchList[x].sequence = formatDateToSequence(data.searchList[x].searchDate) + "Z" + data.searchList[x].extraLesson;
						
						var ls = '<tr>';
						ls = ls + '<td valign="top" class="searchDoIt" id="' + data.searchList[x].classId + 'X' + data.searchList[x].sequence + '" style="cursor:' + cursorType + '; background-color:'+ colors1[data.searchList[x].searchColor] + '; border:1px solid '+colors1[data.searchList[x].searchColor]+'; border-top-width:0; border-bottom-color:white;">';
						ls = ls + '<img border="0" src="images/downwhite.png" style="position:relative; top:-4px; padding-left:5px; padding-right:5px;">';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" class="slCell" style="text-align:left;">';
						ls = ls + '<div id="' + data.searchList[x].classId + data.searchList[x].sequence + 'CN">' + data.searchList[x].searchClassName + '</div>';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" class="scCell">';
						ls = ls + '<div>' + data.searchList[x].searchYear + '</div><div id="' + data.searchList[x].classId + 'X' + data.searchList[x].sequence + 'searchYear" style="display:none;">' + data.searchList[x].searchYearId + '</div>';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" class="scCell">';
						ls = ls + '<div id="' + data.searchList[x].classId + data.searchList[x].sequence + 'D">' + formatDateToShow(data.searchList[x].searchDate) + '</div>';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" class="scCell">';
						ls = ls + '<div>' + data.searchList[x].searchDayOfWeek + '</div>';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" class="srCell">';
						data.searchList[x].collaborateSubjectId = 0;
						ls = ls + loadHiddenFields(data.searchList[x], "S");
						ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data.searchList[x]) + 'LTI" id="' + data.searchList[x].classId + data.searchList[x].sequence + 'LTI' + 'S' + '"' + lessonTitleStyle + '>' + data.searchList[x].lessonTitle + '</div></div>';

						ls = ls + '<div>' + loadLessonSections(data.searchList[x], "S"); + '</div>';
						ls = ls + '</td></tr>';
						
						$('#searchTableBody').append(ls);
						
						hideEmptySections(data.searchList[x]);
						addTemplateClass(data.searchList[x]);
						
					}
				
				}
				
				var ls = '<tr><td><img src="spacer.gif" width="20px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
				ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
				$('#searchTableBody').append(ls);
				
				$('.emptyLesson').hide();
				$('.hiddenInfo').hide();
				for (var z=0; z<itemCount; z++) {
					var CBpId = '#CB' + partId[z];
					var hsPartId = '.' + partId[z];
					if ($(CBpId).prop('checked')) {$(hsPartId).show();} else {$(hsPartId).hide();}
				}	
				if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}
	
				haveSearch = true;

				showSearchList();
			
			} else {

				if ($('#searchTableBody').html() == "") {
					var ls = '<tr><td><img src="spacer.gif" width="20px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
					ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
					$('#searchTableBody').append(ls);
				}
				
				showNotification('#searchErrorMsg', "Search returned 0 lessons");
			}
		}
	}
	
	$('#lClear').click(function() {

		currentSearchText = "";
		clearNotification('#searchErrorMsg');
		
		$('#searchText').val("");
		
		var ls = '<tr><td><img src="spacer.gif" width="20px" height="1"></td>';
		ls = ls + '<td style="background-color:transparent;"><img src="spacer.gif" width="200px" height="1"></td>';
		ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
		ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
		ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
		ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
		$('#searchTableBody').html(ls);

	});
	
	function loadCalArray() {
		
		// 2016-2017
		
		calArray[0] = new Object();
		calArray[0].eTitle = "Independence Day";
		calArray[0].eDate = new Date(2016, 7-1, 4);

		calArray[1] = new Object();
		calArray[1].eTitle = "Labor Day";
		calArray[1].eDate = new Date(2016, 9-1, 5);
		
		calArray[2] = new Object();
		calArray[2].eTitle = "Columbus Day";
		calArray[2].eDate = new Date(2016, 10-1, 10);
		
		calArray[3] = new Object();
		calArray[3].eTitle = "Veterans Day";
		calArray[3].eDate = new Date(2016, 11-1, 11);
		
		calArray[4] = new Object();
		calArray[4].eTitle = "Thanksgiving Day";
		calArray[4].eDate = new Date(2016, 11-1, 24);
		
		calArray[5] = new Object();
		calArray[5].eTitle = "Christmas Day";
		calArray[5].eDate = new Date(2016, 12-1, 25);
		
		calArray[6] = new Object();
		calArray[6].eTitle = "New Year's Day";
		calArray[6].eDate = new Date(2017, 1-1, 1);
		
		calArray[7] = new Object();
		calArray[7].eTitle = "Martin Luther King Day";
		calArray[7].eDate = new Date(2017, 1-1, 16);
		
		calArray[8] = new Object();
		calArray[8].eTitle = "Presidents' Day";
		calArray[8].eDate = new Date(2017, 2-1, 20);
		
		calArray[9] = new Object();
		calArray[9].eTitle = "Memorial Day";
		calArray[9].eDate = new Date(2017, 5-1, 29);
		
		// 2017-2018
		
		calArray[10] = new Object();
		calArray[10].eTitle = "Independence Day";
		calArray[10].eDate = new Date(2017, 7-1, 4);

		calArray[11] = new Object();
		calArray[11].eTitle = "Labor Day";
		calArray[11].eDate = new Date(2017, 9-1, 4);
		
		calArray[12] = new Object();
		calArray[12].eTitle = "Columbus Day";
		calArray[12].eDate = new Date(2017, 10-1, 9);
		
		calArray[13] = new Object();
		calArray[13].eTitle = "Veterans Day";
		calArray[13].eDate = new Date(2017, 11-1, 11);
		
		calArray[14] = new Object();
		calArray[14].eTitle = "Thanksgiving Day";
		calArray[14].eDate = new Date(2017, 11-1, 23);
		
		calArray[15] = new Object();
		calArray[15].eTitle = "Christmas Day";
		calArray[15].eDate = new Date(2017, 12-1, 25);
		
		calArray[16] = new Object();
		calArray[16].eTitle = "New Year's Day";
		calArray[16].eDate = new Date(2018, 1-1, 1);
		
		calArray[17] = new Object();
		calArray[17].eTitle = "Martin Luther King Day";
		calArray[17].eDate = new Date(2018, 1-1, 15);
		
		calArray[18] = new Object();
		calArray[18].eTitle = "Presidents' Day";
		calArray[18].eDate = new Date(2018, 2-1, 19);
		
		calArray[19] = new Object();
		calArray[19].eTitle = "Memorial Day";
		calArray[19].eDate = new Date(2018, 5-1, 28);
		
	}
	
	$('#addNoSchool').click(function() {
		
		var newPos = noSchoolCount;

		var ls = '<tr>';
		ls = ls + '<td style="text-align:center;"><input type="text" id="nameNoSchool' + newPos + '" size="30"></td>';
		ls = ls + '<td style="text-align:center;"><input type="text" id="startNoSchool' + newPos + '" size="10"></td>';
		ls = ls + '<td style="text-align:center;"><input type="text" id="endNoSchool' + newPos + '" size="10"></td>';
		ls = ls + '<td><img class="removeNoSchool" id="rns' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="position:relative; top:4px; cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#noSchoolBody').append(ls);
		
		var startNoSchool = '#startNoSchool' + newPos;
		var endNoSchool = '#endNoSchool' + newPos;
		$(startNoSchool).datepicker({});
		$(endNoSchool).datepicker({});
		if (userInfo.dateFormat == 2) {
			$(startNoSchool).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
			$(endNoSchool).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
		} else {
			$(startNoSchool).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
			$(endNoSchool).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
		}

		noSchoolCount++;
		
	});
	
	$('.removeNoSchool').live('click', function() {
		
		yearNoSchool = new Array();
		
		var temp1 = this.id;
		var temp2 = temp1.substring(3);
		var newPos = parseInt(temp2,10);
 
		for (var x=0; x<noSchoolCount; x++) {
			var nameNoSchool = '#nameNoSchool' + x;
			var startNoSchool = '#startNoSchool' + x;
			var endNoSchool = '#endNoSchool' + x;

			yearNoSchool[x] = new Object();
			yearNoSchool[x].name  = $(nameNoSchool).val();
			yearNoSchool[x].start = formatDateToSave($(startNoSchool).val());
			yearNoSchool[x].end   = formatDateToSave($(endNoSchool).val());
		}
		
		yearNoSchool.splice(newPos, 1);

		noSchoolCount--;
		
		$('#noSchoolBody').html('');
		for (var x=0; x<noSchoolCount; x++) {

			var ls = '<tr>';
			ls = ls + '<td style="text-align:center;"><input type="text" id="nameNoSchool' + x + '" size="30"></td>';
			ls = ls + '<td style="text-align:center;"><input type="text" id="startNoSchool' + x + '" size="10"></td>';
			ls = ls + '<td style="text-align:center;"><input type="text" id="endNoSchool' + x + '" size="10"></td>';
			ls = ls + '<td><img class="removeNoSchool" id="rns' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="position:relative; top:4px; cursor:pointer;"></td>';
			ls = ls + '</tr>';

			$('#noSchoolBody').append(ls);

			var nameNoSchool = '#nameNoSchool' + x;
			$(nameNoSchool).val(yearNoSchool[x].name);

			var startNoSchool = '#startNoSchool' + x;
			var endNoSchool = '#endNoSchool' + x;

			$(startNoSchool).datepicker({});
			$(endNoSchool).datepicker({});

			if (userInfo.dateFormat == 2) {
				$(startNoSchool).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
				$(endNoSchool).datepicker("option", "dateFormat", "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy");
			} else {
				$(startNoSchool).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
				$(endNoSchool).datepicker("option", "dateFormat", "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy");
			}

			$(startNoSchool).val(formatDateToShow(yearNoSchool[x].start));
			$(endNoSchool).val(formatDateToShow(yearNoSchool[x].end));

		}

	});
	
	$('#tutorial').click(function() {

		startTutorial();
		
	});
	
	function startTutorial() {
		
		showPlans();
		
		tutorOn = true;
		
		tutorPage = 1;
		
		$('#tutorPrev').hide();
		$('#tutorNext').show();

		$('.tutor').hide();
		$('#tutor1').show();
	
		showBox('#tutorBox', 0);
		
	}

	$('#tutorPrev').click(function() {

		showPlans();
		
		tutorPage--;
		if (userMode == "A") {
			// administrator, skip non administrator pages
			if (tutorPage == 2 || tutorPage == 3) {tutorPage = 1;}          // skip lessons and year
			else if (tutorPage == 9) {tutorPage -= 3;}                      // skip all notes
			else if (tutorPage >= 16 && tutorPage <= 19) {tutorPage = 15;}  // skip other Go To options
			else if (tutorPage == 21)                    {tutorPage = 20;}  // skip other Go To options
			else if (tutorPage >= 23 && tutorPage <= 24) {tutorPage = 22;}  // skip other Go To options
			else if (tutorPage >= 26 && tutorPage <= 27) {tutorPage = 25;}  // skip other Go To options
			else if (tutorPage >= 31 && tutorPage <= 33) {tutorPage = 30;}  // skip other Go To options
		} else {
			// teacher, skip administrator pages
			if (tutorPage == 4) {tutorPage--;}        // skip teacher list
			else if (tutorPage == 22) {tutorPage--;}  // skip layouts
			else if (tutorPage == 25) {tutorPage--;}  // skip school list
			else if (tutorPage == 30) {tutorPage--;}  // skip teachers
			else if (tutorPage == 11 && (userInfo.schoolId == null || userInfo.schoolId == 0)) {tutorPage--;}  // skip comments if not part of school
		}
		
		$('#tutorNext').show();
		if (tutorPage == 1) {
			$('#tutorPrev').hide();
		} else {
			$('#tutorPrev').show();
		}

		locateTutorPage();

	});

	$('#tutorNext').click(function() {

		showPlans();
		
		tutorPage++;
		if (userMode == "A") {
			// administrator, skip non administrator pages
			if (tutorPage == 2 || tutorPage == 3)        {tutorPage = 4;}   // skip lessons and year
			else if (tutorPage == 7)                     {tutorPage += 3;}  // skip all notes
			else if (tutorPage >= 16 && tutorPage <= 19) {tutorPage = 20;}  // skip other Go To options
			else if (tutorPage == 21)                    {tutorPage = 22;}  // skip other Go To options
			else if (tutorPage >= 23 && tutorPage <= 24) {tutorPage = 25;}  // skip other Go To options
			else if (tutorPage >= 26 && tutorPage <= 27) {tutorPage = 28;}  // skip other Go To options
			else if (tutorPage >= 31 && tutorPage <= 33) {tutorPage = 34;}  // skip other Go To options
		} else {
			// teacher, skip administrator pages
			if (tutorPage == 4) {tutorPage++;}        // skip teacher list
			else if (tutorPage == 22) {tutorPage++;}  // skip layouts
			else if (tutorPage == 25) {tutorPage++;}  // skip school list
			else if (tutorPage == 30) {tutorPage++;}  // skip teachers
			else if (tutorPage == 11 && (userInfo.schoolId == null || userInfo.schoolId == 0)) {tutorPage++;}  // skip comments if not part of school
		}

		$('#tutorPrev').show();
		if (tutorPage == 34) {
			$('#tutorNext').hide();
		} else {
			$('#tutorNext').show();
		}

		locateTutorPage();
	
	});

	function locateTutorPage() {
		
		$('#addList').hide();
		$('#gotoList').hide();
		$('#notesList').hide();
		
		var tutorTopPos = 0;
		var tutorLeftPos = 0;
		var tutorTopPoint = 0;
		var tutorLeftPoint = 0;
		var tutorPointType = "";
		
		// position the tutorial picture to point to correct element
		switch (tutorPage) {
			case 3: 
				tutorTopPos = $('#yearButton').offset().top;
				tutorLeftPos = $('#yearButton').offset().left+$('#yearButton').width()+20;
				tutorTopPoint = $('#yearButton').offset().top+6;
				tutorLeftPoint = $('#yearButton').offset().left+$('#yearButton').width()+10;
				tutorPointType = "Left";
				break;
			case 4: 
				tutorTopPos = $('#adminButton').offset().top;
				tutorLeftPos = $('#adminButton').offset().left+$('#adminButton').width()+20;
				tutorTopPoint = $('#adminButton').offset().top+6;
				tutorLeftPoint = $('#adminButton').offset().left+$('#adminButton').width()+10;
				tutorPointType = "Left";
				break;
			case 5:
				tutorTopPos = $('#nameButton').offset().top;
				tutorLeftPos = $('#nameButton').offset().left-466;
				tutorTopPoint = $('#nameButton').offset().top+6;
				tutorLeftPoint = $('#nameButton').offset().left-10;
				tutorPointType = "Right";
				break;
			case 6:
				tutorTopPos = $('#todayButton').offset().top+42;
				tutorLeftPos = $('#todayButton').offset().left+10;
				tutorTopPoint = $('#todayButton').offset().top+32;
				tutorLeftPoint = $('#todayButton').offset().left+16;
				tutorPointType = "Top";
				break;
			case 7:
				$('#notesList').css({'top':$('#notesButton').offset().top+35,'left':$('#notesButton').offset().left}).show();
				tutorTopPos = $('#teacherNotes').offset().top+3;
				tutorLeftPos = $('#teacherNotes').offset().left+155;
				tutorTopPoint = $('#teacherNotes').offset().top+9;
				tutorLeftPoint = $('#teacherNotes').offset().left+145;
				tutorPointType = "Left";
				break;
			case 8:
				$('#notesList').css({'top':$('#notesButton').offset().top+35,'left':$('#notesButton').offset().left}).show();
				tutorTopPos = $('#studentNotes').offset().top+3;
				tutorLeftPos = $('#studentNotes').offset().left+155;
				tutorTopPoint = $('#studentNotes').offset().top+9;
				tutorLeftPoint = $('#studentNotes').offset().left+145;
				tutorPointType = "Left";
				break;
			case 9:
				$('#notesList').css({'top':$('#notesButton').offset().top+35,'left':$('#notesButton').offset().left}).show();
				tutorTopPos = $('#subPlans').offset().top+3;
				tutorLeftPos = $('#subPlans').offset().left+155;
				tutorTopPoint = $('#subPlans').offset().top+9;
				tutorLeftPoint = $('#subPlans').offset().left+145;
				tutorPointType = "Left";
				break;
			case 10: 
				tutorTopPos = $('#moreButton').offset().top+42;
				tutorLeftPos = $('#moreButton').offset().left+10;
				tutorTopPoint = $('#moreButton').offset().top+32;
				tutorLeftPoint = $('#moreButton').offset().left+16;
				tutorPointType = "Top";
				break;
			case 11:
				tutorTopPos = $('#commentsButton').offset().top+45;
				tutorLeftPos = $('#commentsButton').offset().left-410;
				tutorTopPoint = $('#commentsButton').offset().top+35;
				tutorLeftPoint = $('#commentsButton').offset().left+8;
				tutorPointType = "Top";
				break;
			case 12:
				tutorTopPos = $('#printButton').offset().top+45;
				tutorLeftPos = $('#printButton').offset().left-410;
				tutorTopPoint = $('#printButton').offset().top+35;
				tutorLeftPoint = $('#printButton').offset().left+8;
				tutorPointType = "Top";
				break;
			case 13:
				tutorTopPos = $('#plansHS').offset().top+45;
				tutorLeftPos = $('#plansHS').offset().left-410;
				tutorTopPoint = $('#plansHS').offset().top+35;
				tutorLeftPoint = $('#plansHS').offset().left+8;
				tutorPointType = "Top";
				break;
			case 14:
				tutorTopPos = $('#viewButton').offset().top+45;
				tutorLeftPos = $('#viewButton').offset().left-410;
				tutorTopPoint = $('#viewButton').offset().top+35;
				tutorLeftPoint = $('#viewButton').offset().left+20;
				tutorPointType = "Top";
				break;
			case 15:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
					tutorTopPos = $('#planButton').offset().top+20;
					tutorLeftPos = $('#planButton').offset().left-439;
					tutorTopPoint = $('#planButton').offset().top+25;
					tutorLeftPoint = $('#planButton').offset().left+17;
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
					tutorTopPos = $('#adminPlanButton').offset().top+20;
					tutorLeftPos = $('#adminPlanButton').offset().left-439;
					tutorTopPoint = $('#adminPlanButton').offset().top+25;
					tutorLeftPoint = $('#adminPlanButton').offset().left+17;
				}
				tutorPointType = "Right";
				break;
			case 16:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#assessmentButton').offset().top+20;
				tutorLeftPos = $('#assessmentButton').offset().left-439;
				tutorTopPoint = $('#assessmentButton').offset().top+25;
				tutorLeftPoint = $('#assessmentButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 17:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#assignmentButton').offset().top+20;
				tutorLeftPos = $('#assignmentButton').offset().left-439;
				tutorTopPoint = $('#assignmentButton').offset().top+25;
				tutorLeftPoint = $('#assignmentButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 18:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#classNavButton').offset().top+20;
				tutorLeftPos = $('#classNavButton').offset().left-439;
				tutorTopPoint = $('#classNavButton').offset().top+25;
				tutorLeftPoint = $('#classNavButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 19:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#displayButton').offset().top+20;
				tutorLeftPos = $('#displayButton').offset().left-439;
				tutorTopPoint = $('#displayButton').offset().top+25;
				tutorLeftPoint = $('#displayButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 20:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
					tutorTopPos = $('#eventNavButton').offset().top+20;
					tutorLeftPos = $('#eventNavButton').offset().left-439;
					tutorTopPoint = $('#eventNavButton').offset().top+25;
					tutorLeftPoint = $('#eventNavButton').offset().left+17;
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
					tutorTopPos = $('#adminEventButton').offset().top+20;
					tutorLeftPos = $('#adminEventButton').offset().left-439;
					tutorTopPoint = $('#adminEventButton').offset().top+25;
					tutorLeftPoint = $('#adminEventButton').offset().left+17;
				}
				tutorPointType = "Right";
				break;
			case 21:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#studentGradesNavButton').offset().top+20;
				tutorLeftPos = $('#studentGradesNavButton').offset().left-439;
				tutorTopPoint = $('#studentGradesNavButton').offset().top+25;
				tutorLeftPoint = $('#studentGradesNavButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 22:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#lessonSectionsButton').offset().top+20;
				tutorLeftPos = $('#lessonSectionsButton').offset().left-439;
				tutorTopPoint = $('#lessonSectionsButton').offset().top+25;
				tutorLeftPoint = $('#lessonSectionsButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 23:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#myFilesButton').offset().top+20;
				tutorLeftPos = $('#myFilesButton').offset().left-439;
				tutorTopPoint = $('#myFilesButton').offset().top+25;
				tutorLeftPoint = $('#myFilesButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 24:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#standardNavButton').offset().top+20;
				tutorLeftPos = $('#standardNavButton').offset().left-439;
				tutorTopPoint = $('#standardNavButton').offset().top+25;
				tutorLeftPoint = $('#standardNavButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 25:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#schoolListButton').offset().top+20;
				tutorLeftPos = $('#schoolListButton').offset().left-439;
				tutorTopPoint = $('#schoolListButton').offset().top+25;
				tutorLeftPoint = $('#schoolListButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 26:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#schoolYearButton').offset().top+20;
				tutorLeftPos = $('#schoolYearButton').offset().left-439;
				tutorTopPoint = $('#schoolYearButton').offset().top+25;
				tutorLeftPoint = $('#schoolYearButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 27:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#shareButton').offset().top+20;
				tutorLeftPos = $('#shareButton').offset().left-439;
				tutorTopPoint = $('#shareButton').offset().top+25;
				tutorLeftPoint = $('#shareButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 28:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
					tutorTopPos = $('#standardsReportButton').offset().top+20;
					tutorLeftPos = $('#standardsReportButton').offset().left-439;
					tutorTopPoint = $('#standardsReportButton').offset().top+25;
					tutorLeftPoint = $('#standardsReportButton').offset().left+17;
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
					tutorTopPos = $('#adminReportButton').offset().top+20;
					tutorLeftPos = $('#adminReportButton').offset().left-439;
					tutorTopPoint = $('#adminReportButton').offset().top+25;
					tutorLeftPoint = $('#adminReportButton').offset().left+17;
				}
				tutorPointType = "Right";
				break;
			case 29:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
					tutorTopPos = $('#studentNavButton').offset().top+20;
					tutorLeftPos = $('#studentNavButton').offset().left-439;
					tutorTopPoint = $('#studentNavButton').offset().top+25;
					tutorLeftPoint = $('#studentNavButton').offset().left+17;
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
					tutorTopPos = $('#adminStudentButton').offset().top+20;
					tutorLeftPos = $('#adminStudentButton').offset().left-439;
					tutorTopPoint = $('#adminStudentButton').offset().top+25;
					tutorLeftPoint = $('#adminStudentButton').offset().left+17;
				}
				tutorPointType = "Right";
				break;
			case 30:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#teacherListButton').offset().top+20;
				tutorLeftPos = $('#teacherListButton').offset().left-439;
				tutorTopPoint = $('#teacherListButton').offset().top+25;
				tutorLeftPoint = $('#teacherListButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 31:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#templateNavButton').offset().top+20;
				tutorLeftPos = $('#templateNavButton').offset().left-439;
				tutorTopPoint = $('#templateNavButton').offset().top+25;
				tutorLeftPoint = $('#templateNavButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 32:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#unitButton').offset().top+20;
				tutorLeftPos = $('#unitButton').offset().left-439;
				tutorTopPoint = $('#unitButton').offset().top+25;
				tutorLeftPoint = $('#unitButton').offset().left+17;
				tutorPointType = "Right";
				break;
			case 33:
				if (userMode == "T") {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-382}).show();
				} else {
					$('#gotoList').css({'top':$('#gotoButton').offset().top+35,'left':$('#gotoButton').offset().left-272}).show();
				}
				tutorTopPos = $('#searchListButton').offset().top+20;
				tutorLeftPos = $('#searchListButton').offset().left-439;
				tutorTopPoint = $('#searchListButton').offset().top+25;
				tutorLeftPoint = $('#searchListButton').offset().left+17;
				tutorPointType = "Right";
				break;
			default: tutorTopPos = 0; tutorLeftPos = 0;
		}
		
		$('.tutor').hide();
		$('.tutorPoint').hide();
		
		if (tutorPage <= 2 || tutorPage == 34) {
			showBox('#tutorBox', 0);
		} else {
			$('#tutorBox').css({'top':tutorTopPos,'left':tutorLeftPos}).show();
		}
		$('#tutor'+tutorPage).show();
		
		if (tutorPointType != "") {
			$('#tutor'+tutorPointType).css({'top':tutorTopPoint,'left':tutorLeftPoint}).show();
		}
		
	}
	
	$('#tutorCancel').click(function() {
		tutorOn = false;
		$('#tutorBox').hide();
		$('.tutorPoint').hide();
	});

	function getUrlVars() {
	    var vars = {};
	    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
	        vars[key] = value;
	    });
	    return vars;
	}
	
	function loadStudentSettings(data) {
		
		loadSectionParms(data);
		
		userInfo.userId = data.userId;

		userInfo.viewLessons = data.viewLessons;
		userInfo.viewHomework = data.viewHomework;
		userInfo.viewNotes = data.viewNotes;
		userInfo.viewTab4 = data.viewTab4;
		userInfo.viewTab5 = data.viewTab5;
		userInfo.viewTab6 = data.viewTab6;
		userInfo.viewStandards = data.viewStandards;
		userInfo.viewEvents = data.viewEvents;
		userInfo.viewMyList = data.viewMyList;
		userInfo.viewAssignments = data.viewAssignments;
		userInfo.viewAssessments = data.viewAssessments;
		userInfo.viewGrades = data.viewGrades;
		userInfo.viewStrategies = data.viewStrategies;
		
		userInfo.registeredDate = data.registeredDate;
		userInfo.paidThroughDate = data.paidThroughDate;
		userInfo.classCycle = data.classCycle;	
		userInfo.promoCode = '';
		
		userInfo.dateFormat = data.dateFormat;
		userInfo.dateDelimiter = data.dateDelimiter;
		
		userInfo.showCount = data.showCount;
		userInfo.equalSize = data.equalSize;
		userInfo.boxSize   = data.boxSize;

		studentNotes = data.studentNotes;

		if (studentData.studentId == 0) {
			$('#studentDisplayName').html(data.displayName);
			$('#studentDisplayName').show();
			$('#nameButton').hide();
		} else {
			$('#nameLabel').html(data.studentLastName + ', ' + data.studentFirstName);
			$('#studentDisplayName').data({ studentLastName : data.studentLastName, studentFirstName : data.studentFirstName, newCommentT : data.newCommentT}).hide();
			$('#nameButton').show();
			
			if (data.newCommentT != null) {
				if (data.newCommentT == 'Y') {
					$('#oldComment').hide();
					$('#newComment').show();
				} else {
					$('#oldComment').show();
					$('#newComment').hide();
				}
			}

			if (studentNotes != null && studentNotes != "") {
				var teacherFound = false;
				if (teacherStudentNotes.length > 0) {
					for (var x=0; x<teacherStudentNotes.length; x++) {
						if (teacherStudentNotes[x] == data.userId) {
							teacherFound = true;
							break;
						}
					}
				}
				if (teacherFound == false) {
					teacherStudentNotes[teacherStudentNotes.length] = data.userId;
					$('#studentNotesDisplay').html(studentNotes);
					$('#viewStudentNotesBox').show();
					$('#editStudentNotesBox').hide();
					$('#editStudentNotes').hide();
					$('#deleteStudentNotes').hide();
					$('#printStudentNotes').hide();
					showBox('#studentNotesBox', 0)
				}
			}
		}
	}

	$('#googleSignInBtn').click(function() {
		if ($('#googleSignedIn').html() == "Y") {
			$.post('connectServlet', {}, onConnect,  'json');
		} else {
			gs.connect({
				scope : [
				    'https://www.googleapis.com/auth/drive',
	 	       		'https://www.googleapis.com/auth/plus.login',
	 	       		'https://www.googleapis.com/auth/plus.me',
	 	       		'https://www.googleapis.com/auth/userinfo.email',
	 	       		'https://www.googleapis.com/auth/calendar'
 	       		], 
 	       		response_type : 'code',
 	       		onAuth : function(authResult) {
 	       			$.post('connectServlet', { code : authResult.code}, onConnect,  'json');
 	       		}
 	       	});
		}
	 });
	
	function onConnect() {
		haveWeeks = false;
		haveMonth = false;
		$('#googleSignInBtn').hide();
	 	$('#googleProfileDisconnect').show();
		$('#showCalendarsButton').trigger('click');
		$('#googleSignedIn').html("Y");
	}
	
	 $('#disconnectGoogleAgree').click(function() {
		 gs.disconnect();
		 $.post('googleDisconnect', false, onDisconnect, 'json');
	 });
	 
	 function onDisconnect(data) {
		haveWeeks = false;
		haveMonth = false;
	 	$('#availableCalendars').hide();
		$('#googleSignedIn').html("N");
	    $('#profile').empty();
	    $('#gReturn').show();
	    $('#googleSignInBtn').show();
	    $('#googleProfileDisconnect').hide();
	    $('#disconnectGoogleCancel').trigger('click');
	 }
	 
	 $('.drivePicker').on('click', 
		function(){  
	 		$.getJSON('checkLogin', {}, function(data, status, xhr){
	 			if (data.notLoggedIn == "true") {
					hideLoading();
					showLogin();
				} else if (data.error == "true") {
					hideLoading();
					showErrorMsg();
				} else {
					gs.oauthToken = xhr.getResponseHeader('gs-token');
					gs.openPicker(onSelect);
				}
	 		});
	 	}
	 );
	 
	 function onSelect(file) {
		if (file) {
			$('#driveID').html(file[google.picker.Document.ID]);
			$('#driveFileName').html(file[google.picker.Document.NAME]);
			$('#driveURL').html(file[google.picker.Document.URL]);
			$('#driveType').html(file[google.picker.Document.TYPE]);
			$('#googleDrive').trigger('click');
		}
	 }
	
	$('#googleButton').click(function() {
		showGoogle();
	});

	function showGoogle() {
		hideMessage();
		hideAll();
		$('#displayCalendarEvents').hide();
		$('#editGoogleBox').show();
		if ($('#googleSignedIn').html() == "Y")
			$('#showCalendarsButton').trigger('click');
	}
	
	$('#showCalendarsButton').click(function() {
		$.post('getCalendarsServlet', {} , showCalendars);
    	showLoading();
	});

	var calLength = 0;
	gCal = new Array();

	function showCalendars(data) {
		hideLoading();
		
		showProfile(data.profile);
      	
		$('#showCalendarsButton').hide();
		$('#gReturn').hide();
		$('#applyGCalendars').show();
		$('#displayCalendarEvents').show();
		$('#availableCalendars').show();
		$('#calList').html('');
		
		var ls = "";
		
		if (data.calendars.length != null) {
			for (var i=0; i<data.calendars.length; i++) {
				
				ls = '<tr>';
				ls = ls +'<td class="scCell calCheckbox">';
				ls = ls +'<input class="checkDel" type="checkbox" id="cal' + data.calendars[i].display.replace(/\./g, "") + '" value="'+data.calendars[i].email+ '" calId="'+ data.calendars[i].email +'"></td>';
				if (data.calendars[i].primary == "Y") {
					ls = ls +'<td class="scCell" style="font-weight:bold; color:white; text-align:left; background-color:'+data.calendars[i].color+'">'+data.calendars[i].display+' {Primary}</td>';
				} else {
					ls = ls +'<td class="scCell" style="font-weight:bold; color:white; text-align:left; background-color:'+data.calendars[i].color+'">'+data.calendars[i].display+'</td>';
				}
				ls = ls + '</tr>';
				
				$('#calList').append(ls);
			 }
			
			for (var j=0; j<googleEmailCal.length; j++) {
				$('input[calId="' + googleEmailCal[j] + '"]').prop('checked', true);
			}
		}
	}

	function showProfile(profile) {
		$('#profile').empty();
      	if (profile && profile.email) {
      		$('#profile').append( $('<p>'+ profile.email +'</p>'));
      	} else {
      		 $('#disconnectGoogleAgree').click();
      	}
	}
	
	$('#gReturn').click(function() {
		googleEmalCal = "";
		haveWeeks = false;
		getLessons();
	});
	
	$('#applyAddCopyTeacher').click(function() {
		saveShared("I");
	});			

	$('#saveCollaborateEmail').click(function() {
		saveShared("C");
	});			
	
	function saveShared(shareType) {

		data = new Object();

		if (shareType == "I") {
			data.sharedUserEmail = $.trim($('#shareEmail').val());
			data.sharedUserKey = $.trim($('#shareKey').val());
		} else {
			data.sharedUserEmail = $.trim($('#collaborateEmail').val());
			data.sharedUserKey = $.trim($('#collaborateKey').val());
		}

		clearNotification('#addCopyTeacherErrorMsg');
		clearNotification('#collaborateErrorMsg');
		
		if (data.sharedUserEmail == '') {
			if (shareType == "I") {
				showNotification('#addCopyTeacherErrorMsg', 'Please enter a Teacher Email');
			} else {
				showNotification('#collaborateErrorMsg', 'Please enter a Teacher Email');
			}
		} else {
			if (data.sharedUserKey == '') { 
				if (shareType == "I") {
					showNotification('#addCopyTeacherErrorMsg', 'Please enter a Teacher Key');
				} else {
					showNotification('#collaborateErrorMsg', 'Please enter a Teacher Key');
				}
			} else {		
				showLoading();
				$.getJSON('saveSharedTeacher', data, sharedTeacherSaved);
			}
		}
		
	}
	
	function sharedTeacherSaved(data) {
		
		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else if (data.invalidTeacher == "true") {
			showNotification('#addCopyTeacherErrorMsg', 'Teacher Email or Teacher Key is incorrect');
			showNotification('#collaborateErrorMsg', 'Teacher Email or Teacher Key is incorrect');
		} else {
			loadSavedTeachers(data);
			hideBox('#addCopyTeacherBox', 30);
		}	
	}

	function loadSavedTeachers(data) {
		
		$('#collaborateTeachers').html('<option value="0">--Select a Teacher--</option>');
		$('#pickCopyTeacher').html('<div id="copyMyClasses" class="copyTeacherPicker">My Classes</div>');

		if (data.sharedList != null && data.sharedList.length > 0) {
			savedTeachers = new Array();
			for (var x=0; x<data.sharedList.length; x++) {

				var pos = x+1;
				savedTeachers[pos] = new Object();
				savedTeachers[pos].sharedEmail = data.sharedList[x].sharedUserEmail;
				savedTeachers[pos].sharedKey = data.sharedList[x].sharedUserKey;
				
		    	var ls = '<div id="copyTeacher' + pos + '" class="copyTeacherPicker">';
		    	ls = ls + '<table style="border-collapse:collapse;"><tr><td><div style="width:150px; overflow:hidden;">'  + data.sharedList[x].sharedUserEmail + '</div></td>';
		    	ls = ls + '<td><img class="editCopyTeacher" id="editCopyTeacher' + pos + '" src="images/edit.png" style="cursor:pointer; margin-left:10px; margin-top:10px;"></td></tr></table></div>'
				$('#pickCopyTeacher').append(ls);

				ls = '<option value="' + pos + '">' + data.sharedList[x].sharedUserEmail + '</option>';
				$('#collaborateTeachers').append(ls);

			}
			$('#collaborateTeacherRow').show();
		} else {
			$('#collaborateTeacherRow').hide();
		}
		
		$('#pickCopyTeacher').append('<div id="showCSVImport" class="copyTeacherPicker">Import CSV</div>');
		$('#pickCopyTeacher').append('<div id="addCopyTeacher" class="copyTeacherPicker">Add Teacher</div>');
		
		$('#showFromLessons').hide();
		$('#importFromBody').html('');
		clearNotification('#importErrorMsg');
		$('#pickCopyClass').html('');
		$('#pickCopyYear').html('');
		$('#copyTeacherLabel').html("Select Teacher");
		$('#copyYearLabel').html("Select Year");
		$('#copyClassLabel').html("Select Class");
		copyTeacherPos = "";
		copyYearPos = "";
		copyClassPos = "";
		
	}
	
	$('#collaborateTeachers').change(function(){ 
		
		var pos = $('#collaborateTeachers').prop("selectedIndex");
		
		if (pos == 0) {
			$('#collaborateEmail').val("");
			$('#collaborateKey').val("");
		} else {
			$('#collaborateEmail').val(savedTeachers[pos].sharedEmail);
			$('#collaborateKey').val(savedTeachers[pos].sharedKey);
		}
			
	}); 

	$('.standardLessons').live('click', function() {
		
		jsonData = new Object();
		jsonData.DBId = this.id.substring(2);
		
		var slDate = $(this).html();
		if (slDate == "View All") {
			jsonData.startDate = formatDateToSave($.trim($('#reportStart').val()));
			jsonData.endDate = formatDateToSave($.trim($('#reportEnd').val()));
		} else {
			jsonData.startDate = formatDateToSave(slDate);
			jsonData.endDate = formatDateToSave(slDate);
		}

		showLoading();
		$.getJSON('getStandardLessons', jsonData, loadStandardLessons);

	});

	function loadStandardLessons(data) {
		
		hideLoading();
			
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			loadSearchList(data);
			
			currentView = "Search";
			hideAll();
			$('.searchButton').show();
			$('#searchView').show();

		}		
	}

	$('#aMove').click(function() {
		clearNotification('#moveLessonErrorMsg');
		
		if (paymentNeeded == false) {
			if (lessonLoaded == "N") {loadLesson(currentId);}
			$('#moveFromClass').html($('#lbClass').html());
			$('#moveFromDate').html($('#lbDate').html());
			$('#moveClass').val(currentClassId);
			showBox('#moveLessonBox', 30);
		} else {
			showExpiredMsg();
		}
		
	});
	
	
	$('#applyMoveLesson').click(function() {
		clearNotification('#moveLessonErrorMsg');
		moveClassId = $('#moveClass').val(); 
		moveLessonDate = formatDateToSave($.trim($('#moveDate').val()));
		moveExtraLesson = 0
		
		var valError = false;
		
		if ($.trim($('#moveDate').val()) == '') {
			valError = true;
			showNotification('#moveLessonErrorMsg', 'Please enter a new Lesson Date');
		} else if (valDate(moveLessonDate) == false) {
			valError = true;
			showNotification('#moveLessonErrorMsg', 'Please enter a valid Lesson Date');
		} 
		
		if (valError == false) {

			setClassStartEnd(moveClassId)
			
			if (valError == false) {
				var result = compareDates(currentClassStart, moveLessonDate);
				if (result != 0) {
					valError = true;
		 			if (result == 1) {
		 				showNotification('#moveLessonErrorMsg', 'Move Lesson Date cannot be before Class Start Date');
		 			} else {
		 				showNotification('#moveLessonErrorMsg', 'Class Start Date to Move Lesson Date cannot exceed one year');
		 			}
				}		
			}

			if (valError == false) {
				var result = compareDates(moveLessonDate, currentClassEnd);
				if (result != 0) {
					valError = true;
		 			if (result == 1) {
		 				showNotification('#moveLessonErrorMsg', 'Move Lesson Date cannot be after Class End Date');
		 			} else {
		 				showNotification('#moveLessonErrorMsg', 'Move Lesson Date to Class End Date cannot exceed one year');
		 			}
				}		
			}
		}
		
		if (valError == false) {
			moveShowClass1 = $("#moveClass option:selected").text();
			moveShowDate1 = $.trim($('#moveDate').val());
			overwriteMoveLesson = "N";
			copyMoveLesson = "N";
			moveLesson();
		}
		
	});
	
	$('#copyMoveLesson').click(function() {
		clearNotification('#moveLessonErrorMsg');
		moveClassId = $('#moveClass').val(); 
		moveLessonDate = formatDateToSave($.trim($('#moveDate').val()));
		moveExtraLesson = 0
		
		var valError = false;
		
		if ($.trim($('#moveDate').val()) == '') {
			valError = true;
			showNotification('#moveLessonErrorMsg', 'Please enter a Lesson Date');
		} else if (valDate(moveLessonDate) == false) {
			valError = true;
			showNotification('#moveLessonErrorMsg', 'Please enter a valid Lesson Date');
		}
		
		if (valError == false) {
			moveShowClass1 = $("#moveClass option:selected").text();
			moveShowDate1 = $.trim($('#moveDate').val());
			overwriteMoveLesson = "N";
			copyMoveLesson = "Y";
			moveLesson();
		}
	
	});
	
	function moveLesson() {

		if ($('#lessonLock').prop('checked') && copyMoveLesson == "N") {

			showErrorBox('To move this lesson, you must first un-check the "Lock lesson to date" option');

		} else {
			
			clearNotification('#lessonErrorMsg');
			
			var posSpace=$('#lbDate').html().indexOf(' ');

			var lessonInfo = new Object();

			lessonInfo.copyIt = copyMoveLesson;
			lessonInfo.overwriteIt = overwriteMoveLesson;
			lessonInfo.numDays = 1
			
			lessonInfo.fromExtraLesson = currentExtraLesson;
			if (currentExtraLesson == 999) {
				lessonInfo.fromClassId     = $('#customClass').val();
				lessonInfo.fromLessonDate  = formatDateToSave($.trim($('#customDate').val()));
			} else {
				lessonInfo.fromClassId    = currentClassId;
				lessonInfo.fromLessonDate = formatDateToSave($('#lbDate').html().substring(posSpace+1));
			}

			lessonInfo.classId      = moveClassId;
			lessonInfo.customDate   = moveLessonDate;
			lessonInfo.extraLesson  = moveExtraLesson;
					
			lessonInfo.lessonText   = $('#lessonText').val();
			lessonInfo.homeworkText = $('#homeworkText').val();
			lessonInfo.notesText    = $('#notesText').val();
			lessonInfo.tab4Text     = $('#tab4Text').val();
			lessonInfo.tab5Text     = $('#tab5Text').val();
			lessonInfo.tab6Text     = $('#tab6Text').val();

			var oldStart = new Date("January 1, 2015 " + $.trim($('#lbStart').html()));
			var newStart = new Date("January 1, 2015 " + $.trim($('#customStart').val()));
			var oldEnd = new Date("January 1, 2015 " + $.trim($('#lbEnd').html()));
			var newEnd = new Date("January 1, 2015 " + $.trim($('#customEnd').val()));
			var startDiff = oldStart - newStart;
			var endDiff = oldEnd - newEnd;
			if (startDiff == 0 && endDiff == 0 && currentExtraLesson == 0) {
				lessonInfo.customStart = "";
				lessonInfo.customEnd = "";
			} else {
				lessonInfo.customStart = $.trim($('#customStart').val());
				lessonInfo.customEnd = $.trim($('#customEnd').val());
			}
			
			lessonInfo.unitId       = $('#lessonUnit').val();
			lessonInfo.lessonTitle  = $.trim($('#lessonTitle').val());

			if ($('#lessonLock').prop('checked')) {
				lessonInfo.lessonLock = "Y";
			} else {
				lessonInfo.lessonLock = "N";
			}
			
			lessonInfo.strategySent = "Y";
			lessonInfo.strategyIds = new Array();
			if (strategies != null) {
				for (var x=0; x<strategies.length; x++) {
					lessonInfo.strategyIds[x] = strategies[x].id.substring(12);
				}
			}

			lessonInfo.standardDBIds = new Array();
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					lessonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}
			
			lessonInfo.myStandardDBIds = new Array();
			if (myStandards != null) {
				for (var x=0; x<myStandards.length; x++) {
					lessonInfo.myStandardDBIds[x] = myStandards[x].dbId.substring(4);
				}
			}
			
			lessonInfo.schoolStandardDBIds = new Array();
			if (schoolStandards != null) {
				for (var x=0; x<schoolStandards.length; x++) {
					lessonInfo.schoolStandardDBIds[x] = schoolStandards[x].dbId.substring(4);
				}
			}

			lessonInfo.attachmentNames = new Array();
			lessonInfo.attachmentPrivate = new Array();
			lessonInfo.attachmentURL = new Array();
			var arrayPos = 0;
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					if (attachments[x].type == "lesson") {
						lessonInfo.attachmentNames[arrayPos] = attachments[x].filename;
						lessonInfo.attachmentPrivate[arrayPos] = attachments[x].privateFlag;
						lessonInfo.attachmentURL[arrayPos] = attachments[x].url;
						arrayPos++;
					}
				}
			}

			var valError = false;
			
			if ($.trim($('#customStart').val()) != '') {
				if (valTime($.trim($('#customStart').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid Start Time');
				}
			}
			
			if ($.trim($('#customEnd').val()) != '') {
				if (valTime($.trim($('#customEnd').val())) == false) {
					valError = true;
					showNotification('#lessonErrorMsg', 'Please enter a valid End Time');
				}
			}
			
			if (valError == false) {
				if (paymentNeeded == false) {
					showLoading();
					$.post('moveLesson', lessonInfo, lessonMoved, "json");
				} else {
					showExpiredMsg();
				}
			}
		}
	}

	function lessonMoved(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			hideBox('#moveLessonBox', 30);
			if (data.returnMsg == "lessonExists") {
				$('#moveShowClass').html(moveShowClass1);
				$('#moveShowDate').html(moveShowDate1);
				showBox('#overwriteLessonBox', 30);
			} else {
				
				action = 'moveLesson';
				hideBox('#editLessonBox', 10);	
				hideBox('#overwriteLessonBox', 30);	

				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				getLessons();

			}
		}
	}
	
	$('#cancelMoveLesson').click(function() {
		hideBox('#moveLessonBox', 30);
	});

	$('#overwriteMoveLesson').click(function() {
		overwriteMoveLesson = "O";
		moveLesson()
	});

	$('#shiftMoveLesson').click(function() {
		overwriteMoveLesson = "S";
		moveLesson()
	});

	$('#cancelOverwriteLesson').click(function() {
		hideBox('#overwriteLessonBox', 30);	
	});

	$('#embedImg').click(function() {
		hideBox('#attachOrEmbed', 30);
		
		switch (attachType) {
			case 'attach':
				showBox('#embedImgTab', 30);
				loadImgEmbedButtons();
				break;
			case 'attachAsg':
				embedImgAssignment();
				break;
			case 'attachAst':
				embedImgAssessment();
			case 'attachEvent' :
				embedImage('#eventText', 'attachEvent');
		}
		
	});
	
	function embedImage(target, type) {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == type) {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$(target).append('<p><img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto"></p>');
			}
		}
	}
	
	function embedImgAssignment() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "attachAsg") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#assignmentDesc').append('<p><img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto"></p>');
			}
		}
	}
	
	function embedImgAssessment() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "attachAst") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#assessmentDesc').append('<p><img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto"></p>');
			}
		}
	}
	
	function loadImgEmbedButtons() {
		
		var buttonCount = 0;
		
		// hide all if visible
		$('#imgLesson').hide();
		$('#imgTab2').hide();
		$('#imgTab3').hide();
		$('#imgTab4').hide();
		$('#imgTab5').hide();
		$('#imgTab6').hide();
		
		if (userInfo.lessonEnabled == "Y") {
			$('#imgLesson').show();
			$('#imgLesson').css({'display':'inline-block'});
			$('#imgLesson').html('');
			$('#imgLesson').append('<span style="vertical-align:top;">'+userInfo.lessonLabel+'</span>');
			buttonCount++;
		}
		if (userInfo.tab2Enabled == "Y") {
			$('#imgTab2').show();
			$('#imgTab2').css({'display':'inline-block'});
			$('#imgTab2').html('');
			$('#imgTab2').append('<span style="vertical-align:top;">'+userInfo.tab2Label+'</span>');
			buttonCount++;
		}
		if (userInfo.tab3Enabled == "Y") {
			$('#imgTab3').show();
			$('#imgTab3').css({'display':'inline-block'});
			$('#imgTab3').html('');
			$('#imgTab3').append('<span style="vertical-align:top;">'+userInfo.tab3Label+'</span>');
			buttonCount++;
		}
		if (userInfo.tab4Enabled == "Y") {
			$('#imgTab4').show();
			$('#imgTab4').css({'display':'inline-block'});
			$('#imgTab4').html('');
			$('#imgTab4').append('<span style="vertical-align:top;">'+userInfo.tab4Label+'</span>');
			buttonCount++;
		}
		if (userInfo.tab5Enabled == "Y") {
			$('#imgTab5').show();
			$('#imgTab5').css({'display':'inline-block'});
			$('#imgTab5').html('');
			$('#imgTab5').append('<span style="vertical-align:top;">'+userInfo.tab5Label+'</span>');
			buttonCount++;
		}
		if (userInfo.tab6Enabled == "Y") {
			$('#imgTab6').show();
			$('#imgTab6').css({'display':'inline-block'});
			$('#imgTab6').html('');
			$('#imgTab6').append('<span style="vertical-align:top;">'+userInfo.tab6Label+'</span>');
			buttonCount++;
		}

		$('#imgLesson').css({'margin-right': '0'});
		if (buttonCount == 1) {
			$('#imgLesson').trigger('click');
		} else if (buttonCount == 2 || buttonCount == 5) {
			$('#imgLesson').css({'margin-left': '50px'});
		} else if (buttonCount == 4) {
			$('#imgLesson').css({'margin-left': '100px'});
			$('#imgLesson').css({'margin-right': '50px'});
		} else {
			$('#imgLesson').css({'margin-left': '3px'});
		}
	}
	
	$('#imgLesson').click(function(){
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#lessonText').append('<p><img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto"></p>');
				$('#editTab1').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);		
	});
	
	$('#imgTab2').click(function() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#homeworkText').append('<img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto">');
				$('#editTab2').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);
	});

	$('#imgTab3').click(function() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#notesText').append('<img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto">');
				$('#editTab3').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);
	});
	
	$('#imgTab4').click(function() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#tab4Text').append('<img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto">');
				$('#editTab4').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);
	});

	$('#imgTab5').click(function() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#tab5Text').append('<img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto">');
				$('#editTab5').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);
	});
	
	$('#imgTab6').click(function() {
		for (var i=0; i < myFiles.length; i++) {
			if (myFiles[i].type == "lesson") {
				var fileUrl = "";
				fileUrl = (myFiles[i].fileType == "drive"?"https://drive.google.com/uc?export=view&id="+myFiles[i].id:myFiles[i].url);
				$('#tab6Text').append('<img src="'+fileUrl+'" alt="Image" style="width: 500px; max-width: 100%; height: auto">');
				$('#editTab6').trigger('click');
			}
		}
		hideBox('#embedImgTab', 30);
	});
	
	$('#newCollaborateTeacher').click(function() {
		$('#collaborateEmail').val("");
		$('#collaborateKey').val("");
		$('#collaborateClass').html("");
		$('#collaborateKeyBox').show();
		$('#collaborateClassBox').hide();
	});
	
	$('#attachImg').click(function() {
		hideBox('#attachOrEmbed', 30);
		for (var i=0;i<myFiles.length;i++) {
			if (attachments == null) {
				attachments = new Array();
				attachments[0] = new Object();
				attachments[0].filename = myFiles[i].filename;
				attachments[0].privateFlag = "N";
				attachments[0].url = myFiles[i].url;
				// attachments[0].url = (myFiles[i].fileType ==
				// "drive"?myFiles[i].url:"");
				attachments[0].fileType = myFiles[i].fileType;
				attachments[0].type = myFiles[i].type;
			} else {
				var	newPos = attachments.length;
				attachments[newPos] = new Object();
				attachments[newPos].filename = myFiles[i].filename;
				attachments[newPos].privateFlag = "N";
				attachments[newPos].url = myFiles[i].url;
// attachments[newPos].url = (myFiles[i].fileType == "drive"?myFiles[i].url:"");
				attachments[newPos].type = myFiles[i].type;
				attachments[newPos].fileType = myFiles[i].fileType;
			}
			$('#'+attachType+'Table').show();
			loadAttachmentsTable();
		}

	});

	$('#deleteYearButton').click(function() {
		$('#yearNameDelete').html("This will delete all of your plans for "+userInfo.yearName+". You cannot undo this operation. Would you like to continue?");
		showBox('#schoolYearDelete', 30);
	});
	
	$('#applySchoolYearDelete').click(function() {
		deleteYear = new Object();
		deleteYear.yearId = userInfo.yearId;
		action = "deleteYear";
		showLoading();
		$.getJSON('deleteYear', deleteYear, yearDeleted);
	});
	
	$('#closeSchoolYearDelete').click(function() {
		hideBox('#schoolYearDelete', 30);
	});
	
	function yearDeleted(data) {

		hideLoading();
		hideAll();
		
		hideBox('#schoolYearDelete', 30);
		
		yearNames = new Array();
		var yearPos = 0;
		$('#yearTable').html('');
		$('#yearList').html('');
  		if (data.years != null) {
			for (var y=0; y<data.years.length; y++) {
      			yearNames[y] = data.years[y].yearName;

      			var ls = '<tr class="yearRow" style="cursor:pointer;" id="' + data.years[y].yearId + '">';
				ls = ls + '<td class="slCell" style="text-align:left;">' + data.years[y].yearName + '</td>';
				ls = ls + '<td class="srCell"><div>' + formatDateToShow(data.years[y].firstDay) + '</div></td>';
				ls = ls + '<td class="srCell"><div>' + formatDateToShow(data.years[y].lastDay) + '</div></td>';
				ls = ls + '</tr>';
				$('#yearTable').append(ls);

				ls = '<div class="pickItem yearItem" id="year' + data.years[y].yearId + '">' + data.years[y].yearName + '</div>';
				$('#yearList').append(ls);
				
				if (data.currentYearId != null) {
	      			if (data.currentYearId == data.years[y].yearId) {yearPos = y;}
				}
				
				if (data.years[y].convertStatus == 0) {
					convertYears[convertPos] = data.years[y].yearId;
					convertPos++;
				}
				
      		}
  		}
  		
  		$('#yearLabel').html('');
  		
  		if (data.years.length == 0) {
  			$('.doButton').hide();
  			userInfo.yearId = 0;
  			$('#rollClass').html('');
  			showAddYear();
  		} else {
  	  		$('#yearList').append('<div class="pickItem yearItem" id="yearAdd">Add a Year</div>');
  			
  	  		$('#addNewYear').show();
  			currentYear = '';
  			clearNotification('#changeYearErrorMsg');
  			$('#cancelChangeYear').hide();
  			$('#changeYear').show();
  		}
  		

	};
	
	$('#addNewYear, #addNewYear2').click(function() {
		
		currentView = "School Year";
		showAddYear();

	});
	
	function checkCollaborate() {

		clearNotification('#collaborateErrorMsg');
		
		$('input[name="collaborate"]')[classInfo.collaborateType].checked = true;

		if (classInfo.collaborateType < 3) {
			
			$('#collaborateEmail').val("");
			$('#collaborateKey').val("");
			$('#collaborateClass').html("");

			$('#collaborateKeyBox').hide();
			$('#collaborateClassBox').hide();

		} else {

			$('#collaborateEmail').val(classInfo.collaborateTeacherEmail);
			$('#collaborateKey').val(classInfo.collaborateKey);

			jsonData = new Object();
			if (classInfo.collaborateTeacherId == userInfo.userId) {
				collaborateType = "M";
				jsonData.sharedUserEmail = userInfo.emailAddress;
				jsonData.sharedUserKey = userInfo.sharedUserKey;
			} else {
				collaborateType = "T";
				jsonData.sharedUserEmail = classInfo.collaborateTeacherEmail;
				jsonData.sharedUserKey = classInfo.collaborateKey;
			}

			showLoading();
			$.getJSON('getSharedClasses', jsonData, chooseCollaborateClass);
			
		}
		
	}
	
	$('#showCollaborate').click(function() {
		
		collaborateType = "T";

		data = new Object();
		data.sharedUserEmail = $('#collaborateEmail').val();
		data.sharedUserKey = $('#collaborateKey').val();

		clearNotification('#collaborateErrorMsg');

		if (data.sharedUserEmail == '') {
			showNotification('#collaborateErrorMsg', 'Please enter a Teacher Email');
		} else {
			if (data.sharedUserKey == '') { 
				showNotification('#collaborateErrorMsg', 'Please enter a Teacher Key');
			} else {		
				showLoading();
				$.getJSON('getSharedClasses', data, chooseCollaborateClass);
			}
		}
		
	});	

	$('#myCollaborate').click(function() {
		
		collaborateType = "M";
		
		data = new Object();
		data.sharedUserEmail = userInfo.emailAddress;
		data.sharedUserKey = userInfo.sharedUserKey;

		clearNotification('#collaborateErrorMsg');
		
		showLoading();
		$.getJSON('getSharedClasses', data, chooseCollaborateClass);
		
	});	

	function chooseCollaborateClass(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
	
			if (data.years.length == 0) {
				showNotification('#collaborateErrorMsg', 'Email or Key is incorrect');
			} else {
				
				$('#collaborateYear').html("");
				for (var x=0; x<data.years.length; x++) {
					ls = '<option value="' + data.years[x].yearId + '">' + data.years[x].yearName + '</option>';
					$('#collaborateYear').append(ls);
				}			
		
				shareYears = data.years;
				$('#collaborateClass').html("");

				if (classInfo.collaborateYearId == 0) {
					
					for (x=0; x<shareYears[0].classes.length; x++) {
						ls = '<option value="' + shareYears[0].classes[x].classId + '">' + shareYears[0].classes[x].className + '</option>';
						$('#collaborateClass').append(ls);
					}
					
				} else {

					var pos = 0;
					for (x=0; x<shareYears.length; x++) {
						if (shareYears[x].yearId == classInfo.collaborateYearId) {pos = x;}
					}
					
					for (x=0; x<shareYears[pos].classes.length; x++) {
						ls = '<option value="' + shareYears[pos].classes[x].classId + '">' + shareYears[pos].classes[x].className + '</option>';
						$('#collaborateClass').append(ls);
					}			

					$('#collaborateYear').val(classInfo.collaborateYearId);
					$('#collaborateClass').val(classInfo.collaborateSubjectId);
					
				}

				$('#collaborateKeyBox').hide();
				$('#collaborateClassBox').show();
		
				clearNotification('#collaborateErrorMsg');
				
				if (collaborateType == "T") {
					$('#collaborateTeacherEmail').html($('#collaborateEmail').val());
				} else {
					$('#collaborateTeacherEmail').html("My Classes");
				}

			}
		}	
	}

	$('#collaborateYear').change(function(){ 
		var shareLength = shareYears[$('#collaborateYear').prop("selectedIndex")].classes.length;
		$('#collaborateClass').html('');
		for (var x=0; x<shareLength; x++) {
			ls = '<option value="' + shareYears[$('#collaborateYear').prop("selectedIndex")].classes[x].classId + '">' + shareYears[$('#collaborateYear').prop("selectedIndex")].classes[x].className + '</option>';
			$('#collaborateClass').append(ls);
		}			
	}); 
	
	$('input[name="collaborate"]').change(function () {

		classInfo.collaborateType = $('input[name="collaborate"]:checked').val();
		
		$('#collaborateEmail').val("");
		$('#collaborateKey').val("");
		$('#collaborateClass').html("");
		$('#collaborateClassBox').hide();

		if (classInfo.collaborateType < 3) {
			$('#collaborateKeyBox').hide();
		} else {
			$('#collaborateKeyBox').show();
		}
		
	});
	
	function allowEdit(str) {
		
		var pos = str.indexOf('X');
		currentSequence = str.substring(pos+1);
		
		if (currentView == "Search" || lessonView == "week" || lessonView == "day" || lessonView == "month") {
			currentClassId = str.substring(0,pos);
		}
	
		currentCollaborateSubjectId = +$('#' + currentClassId + currentSequence + 'SSID').html();
		if (!currentCollaborateSubjectId || currentCollaborateSubjectId == 0) {
			return true;
		} else {
			currentCollaborateType = $('#' + currentClassId + currentSequence + 'SSTY').html();
			if (currentCollaborateType == 2) {
				return true;
			} else {
				if (currentCollaborateType == 1) {
					showErrorBox('The teacher who shared this class has set collaboration to "View Only", so you cannot edit the lesson.')
				} else {
					showErrorBox('The teacher who shared this class has removed collaboration, so you are no longer able to view the lesson.')
				}
				return false;
			}
		}
	}
	
	function chooseActions(str) {
		
		var pos = str.indexOf('X');
		currentSequence = str.substring(pos+1);
		
		if (currentView == "Search" || lessonView == "week" || lessonView == "day" || lessonView == "month") {
			currentClassId = str.substring(0,pos);
		}
	
		var tempCollaborateSubjectId = $('#' + currentClassId + currentSequence + 'SSID').html();
		var tempCollaborateType = $('#' + currentClassId + currentSequence + 'SSTY').html();
		
		$('.lessonActionsHS').show();
		
		if (tempCollaborateSubjectId == 0) {
			$('#aEdit').show();
			$('#aMove').show();
			$('#aPaste').show();
			$('#aBump2').show();
			$('#aBack2').show();
			$('#aExtend2').show();
			$('#aStan2').show();
			$('#aDelete').show();
			$('#aNoClass').show();
		} else {
			$('#aEdit').hide();
			$('#aMove').hide();
			$('#aPaste').hide();
			$('#aBump2').hide();
			$('#aBack2').hide();
			$('#aExtend2').hide();
			$('#aStan2').hide();
			$('#aDelete').hide();
			$('#aNoClass').hide();
			if (tempCollaborateType == 2) {
				$('#aEdit').show();
				$('#aPaste').show();
			}
		}

	}
	
	function showErrorBox(data) {
		$('#errorBoxMsg').html(data);
		showBox('#errorBox', 30);
	}
	
	$('#errorBoxReturn').click(function() {
		hideBox('#errorBox', 30);
	});	
	
	$('#assignmentButton').click(function() {
		browserButton = false;
		window.location.hash = "assignment";
		viewAssignments();
	});

	$('.gotoAssignments').live('click', function(e) {
		browserButton = false;
		window.location.hash = "assignment";
		viewAssignments();
	});
	
	$('#viewAllAssignments').click(function() {
		browserButton = false;
		window.location.hash = "assignment";
		viewAssignments();
	});

	function viewAssignments() {
		
		classPickType = 'assignment';
		$('#pcall').show();

		if (haveAssignments == false) {
			assignmentClassPicked = "pcall";
			assignmentUnitPicked = "puall";
			$('#'+classPickType+'UnitLabel').html("All Units");
			$('#'+classPickType+'ClassLabel').html("All Classes");
			getAssignments();
		} else {
			showAssignments();
		}
	}
	
	function getAssignments() {
		showLoading();
		action = "getAssignments";
		$.getJSON('getAssignments', 'classId=all', loadAssignments);
	}

	function showAssignments() {
		hideAll();
		updateUnitPicker();
		$('#assignmentView').show();
	}
	
	function loadAssignments(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			hideBox('#editAssignmentBox', 10);

			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listAssignmentBox').css({'height':fromHeight+'px'});

			haveAssignments = true;
			$('#assignmentBody').html("");
			
			haveUnits = false;
			$('#unitAssignmentsBody').html("");

			for (var x=0; x<data.assignments.length; x++) {
				
				var tempClassColor = (data.assignments[x].color<=45?colors1[data.assignments[x].color]:data.assignments[x].color);

				var ls = '<tr class="pickRow assignmentRow assignment' + data.assignments[x].subjectId + ' assignment' + data.assignments[x].subjectId + data.assignments[x].unitId + '" id="asg' + data.assignments[x].assignmentId + '" style="cursor:' + cursorType + ';">';
				
				ls = ls + '<td valign="top" class="assignmentDoIt" id="asg' + data.assignments[x].assignmentId + 'X" style="cursor:' + cursorType + '; background-color:'+ tempClassColor + '; border:1px solid '+tempClassColor+'; border-bottom-color:white; border-top-width:0px;">';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="srCell">';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '1">' + data.assignments[x].className + '</div><div id="asg' + data.assignments[x].assignmentId + '2" style="display:none">' + data.assignments[x].subjectId + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="srCell">';
				
				if (data.assignments[x].unitNum != "") {
					ls = ls + '<div style="float:left; background-color:' + tempClassColor + '; color:white; padding-top:1px; padding-bottom:1px; padding-right:3px; padding-left:3px; margin-right:3px;">' + data.assignments[x].unitNum + '</div>';
				}
				
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '3">' + data.assignments[x].unitTitle + '</div><div id="asg' + data.assignments[x].assignmentId + '4" style="display:none">' + data.assignments[x].unitId + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '7">' + formatDateToShow(data.assignments[x].assignmentStart) + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '8">' + formatDateToShow(data.assignments[x].assignmentEnd) + '</div>';
				ls = ls + '</td>';

				ls = ls + '<td valign="top" class="srCell">';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '5">' + data.assignments[x].assignmentTitle + '</div><div id="asg' + data.assignments[x].assignmentId + '6" style="display:none">' + data.assignments[x].assignmentDesc + '</div>';
				loadAttachmentsArray(data.assignments[x].attachments);
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '9" style="display:none">' + getAttachmentsText() + '</div>';
				loadStandardArrays(data.assignments[x].standards);
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '12" style="display:none">' + getStandardsText() + '</div>';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '10" style="display:none">' + data.assignments[x].scoreWeightId + '</div>';
				ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '11" style="display:none">' + data.assignments[x].totalPoints + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '</tr>';
				
				$('#assignmentBody').append(ls);
			
			}
			
			var ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#assignmentBody').append(ls);

			if (assignmentClassPicked != "pcall") {
				$('.assignmentRow').hide();
				$('.assignment'+assignmentClassPicked).show();
			}
			
			if (action != "getAssignments") {
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				currentGradesClassId = 0;
			}
			
			if (window.location.hash == "#assignment") {
				showAssignments();
			} else if (window.location.hash == '#grade') {
				if (individualStudentGradesView) {
					showIndividualStudentGrades();
				} else {
					showStudentGrades();
				}
			} else if (window.location.hash != "#unit"){
				getLessons();
			}

			showAction();

		}
	}

	$('#addAssignment').click(function() {
		addAssignment();
		if (assignmentClassPicked == 'pcall') {
			$('#assignmentClass').val(0);
		} else {
			$('#assignmentClass').val(assignmentClassPicked);
		}
		$('#assignmentClass').trigger('change');
	});
	
	$('#addAssignment2').click(function() {
		addAssignment();
	});
	
	$('#addAssignment3').click(function(){
		addAssignment();
		$('#assignmentClass').val(currentGradesClassId);
		$('#assignmentClass').trigger('change');
	});
	

	function addAssignment() {

		$('#assignmentAction').hide();
		
		currentAssignmentId = 0;
		action = "addAssignment";
		clearNotification('#assignmentErrorMsg');

		$('#assignmentClass').val(0);
		
		$('#assignmentUnit').html('<option value="0">Select Unit</option>');
		$('#assignmentUnit').val(0);

		$('#assignmentStart').val('');
		$('#assignmentEnd').val('');
		$('#assignmentTitle').val('');
		
		loadAssignmentTypes(0);
		$('#assignmentType').val(0);
		
		$('#assignmentDesc').val('');
		
		attachType = 'attachAsg';
		currentAttachmentsText = '';
		loadAttachmentsText();
		
		standardType = 'Assignment';
		currentStandardsText = '';
		loadStandardsText();

		showBox('#editAssignmentBox', 10);
		
	}

	$('#assignmentClass').change(function() {

		loadAssignmentTypes($('#assignmentClass').val());
		$('#assignmentType').val(0);
		
		$('#assignmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assignmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assignmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		$('#assignmentUnit').val(0);
		
		setClassStartEnd($('#assignmentClass').val());
		
	});

	
	$('.assignmentRow').live('click', function(e) {

		currentAssignmentId = this.id;
		hideLists();
		editAssignment();

	});
	
	function editAssignment() {
		
		$('#assignmentAction').show();

		action = "updateAssignment";
		clearNotification('#assignmentErrorMsg');

		$('#assignmentClass').val($('#'+currentAssignmentId+'2').html());
		setClassStartEnd($('#assignmentClass').val());
		
		$('#assignmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assignmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assignmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		$('#assignmentUnit').val($('#'+currentAssignmentId+'4').html());
		
		$('#assignmentStart').val($('#'+currentAssignmentId+'7').html());
		$('#assignmentEnd').val($('#'+currentAssignmentId+'8').html());
		$('#assignmentTitle').val($('#'+currentAssignmentId+'5').html());
		$('#assignmentDesc').val($('#'+currentAssignmentId+'6').html());
		
		loadAssignmentTypes($('#assignmentClass').val());
		$('#assignmentType').val($('#'+currentAssignmentId+'10').html());

		$('#assignmentPoints').val($('#'+currentAssignmentId+'11').html());
		
		attachType = 'attachAsg';
		currentAttachmentsText = '#' + currentAssignmentId + '9';
		loadAttachmentsText();
		
		standardType = 'Assignment';
		currentStandardsText = '#' + currentAssignmentId + "12";
		loadStandardsText();

		showBox('#editAssignmentBox', 10);

	}

	$('#cancelEditAssignment').click(function() {
		action = "";
		hideBox('#editAssignmentBox', 10);
	});

	$('#cancelEditUnit').click(function() {
		action = "";
		hideBox('#editUnitBox', 10);
	});
	
	$('#closeEditAssignment').click(function() {
		action = "";
		hideBox('#editAssignmentBox', 10);
	});

	$('#applyEditAssignment').click(function() {

		var valError = false;
		clearNotification('#assignmentErrorMsg');

		if ($('#assignmentClass').val() == 0) {
 			valError = true;
 			showNotification('#assignmentErrorMsg', 'Please select a class');
		}
		
		var tStart = formatDateToSave($.trim($('#assignmentStart').val()));
		var tEnd   = formatDateToSave($.trim($('#assignmentEnd').val()));

		if (tStart != "") {
 	 		if (valDate(tStart) == false) {
 	 			valError = true;
 	 			showNotification('#assignmentErrorMsg', 'Please enter a valid Start Date');
 	 		}
		}
		
		if (tEnd != "") {
 	 		if (valDate(tEnd) == false) {
 	 			valError = true;
 	 			showNotification('#assignmentErrorMsg', 'Please enter a valid End Date');
 	 		}
		}
		
		// confirm start date before end date
		if (valError == false && (tStart != "" && tEnd != "")) {
			var result = compareDates(tStart, tEnd);
			if (result != 0) {
				valError = true;
 	 			if (result == 1) {
	 				showNotification('#assignmentErrorMsg', 'Start Date must be before End Date');
	 			} else {
	 				showNotification('#assignmentErrorMsg', 'Date range cannot exceed one year');
	 			}
			}		
		}
		
		// confirm start date is not before class start date
		if (valError == false && tStart != "") {
			var result = compareDates(currentClassStart, tStart);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#assignmentErrorMsg', 'Assignment Start Date cannot be before Class Start Date');
	 			} else {
	 				showNotification('#assignmentErrorMsg', 'Class Start Date to Assignment Start Date cannot exceed one year');
	 			}
			}		
		}

		// confirm end date is not after class end date
		if (valError == false && tEnd != "") {
			var result = compareDates(tEnd, currentClassEnd);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#assignmentErrorMsg', 'Assignment End Date cannot be after Class End Date');
	 			} else {
	 				showNotification('#assignmentErrorMsg', 'Assignment End Date to Class End Date cannot exceed one year');
	 			}
			}		
		}

		if (valError == false) {
			if ($.trim($('#assignmentTitle').val()) == "") {
				valError = true;
 				showNotification('#assignmentErrorMsg', 'Plese enter a Title for the Assignment');
			}
		}
		
		var totalPoints = $.trim($('#assignmentPoints').val());
		if (valError == false && totalPoints != "") {
			if (isNaN(totalPoints) || (parseFloat(totalPoints) != parseInt(totalPoints))) {
				valError = true;
 				showNotification('#assignmentErrorMsg', 'Total points must be numeric');
			}
		}
		
		if (valError == false) {

			var jsonInfo = new Object();
			jsonInfo.subjectId = $('#assignmentClass').val();
			jsonInfo.unitId = $('#assignmentUnit').val();
			jsonInfo.assignmentTitle = $.trim($('#assignmentTitle').val());
			jsonInfo.assignmentDesc = $.trim($('#assignmentDesc').val());
			jsonInfo.assignmentStart = tStart;
			jsonInfo.assignmentEnd = tEnd;
			jsonInfo.scoreWeightId = $.trim($('#assignmentType').val());

			if ($.trim($('#assignmentPoints').val()) == "") {
				jsonInfo.assignmentPoints = 0;
			} else {
				jsonInfo.assignmentPoints = $.trim($('#assignmentPoints').val());
			}
			
			jsonInfo.standardDBIds = new Array();
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					jsonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}

			jsonInfo.attachmentNames = new Array();
			jsonInfo.attachmentPrivate = new Array();
			jsonInfo.attachmentUrl = new Array();
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					jsonInfo.attachmentNames[x] = attachments[x].filename;
					jsonInfo.attachmentPrivate[x] = attachments[x].privateFlag;
					jsonInfo.attachmentUrl[x] = attachments[x].url;
				}
			}

			if (paymentNeeded == false) {
				if (currentAssignmentId == 0) {
					jsonInfo.action = "A";
				} else {
					jsonInfo.action = "C";
					jsonInfo.assignmentId= currentAssignmentId.substr(3);
				}
				showLoading();
				jsonInfo.updateType = "A";
				$.post('updateAssignment', jsonInfo, loadAssignments, "json");
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('#deleteAssignment').click(function() {
	
		if (paymentNeeded == false) {
			if (confirm('Are you sure you want to delete this assignment?')) {
				action = "deleteAssignment";
				var jsonInfo = new Object();
				jsonInfo.action = "D";
				jsonInfo.assignmentId= currentAssignmentId.substr(3);
				showLoading();
				jsonInfo.updateType = "A";
				$.post('updateAssignment', jsonInfo, loadAssignments, "json");
			}
		} else {
			showExpiredMsg();
		}
	
	});

	
	$('#assignmentChangeClass').click(function() {
		if ($('#pickClass').css('display') == 'none') {
			$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickClass = true;
		} else {
			$('#pickClass').hide();
		}
	});
	
	$('#templateChangeClass').click(function() {
		if ($('#pickClass').css('display') == 'none') {
			$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickClass = true;
		} else {
			$('#pickClass').hide();
		}
	});
	
	$('#assignmentChangeUnit').click(function() {
		if ($('#pickUnit').css('display') == 'none') {
			$('#pickUnit').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickUnit = true;
		} else {
			$('#pickUnit').hide();
		}
	});

	$('#assessmentButton').click(function() {
		browserButton = false;
		window.location.hash = "assessment";
		viewAssessments();
	});

	$('.gotoAssessments').live('click', function(e) {
		browserButton = false;
		window.location.hash = "assessment";
		viewAssessments();
	});

	$('#viewAllAssessments').click(function() {
		browserButton = false;
		window.location.hash = "assessment";
		viewAssessments();
	});

	function viewAssessments() {
		
		classPickType = 'assessment';
		$('#pcall').show();

		if (haveAssessments == false) {
			assessmentClassPicked = "pcall";
			assessmentUnitPicked = "puall";
			$('#'+classPickType+'UnitLabel').html("All Units");
			$('#'+classPickType+'ClassLabel').html("All Classes");
			getAssessments();
		} else {
			showAssessments();
		}
	}
	
	function getAssessments() {
		showLoading();
		action = "getAssessments";
		$.getJSON('getAssessments', 'classId=all', loadAssessments);
	}

	function showAssessments() {
		hideAll();
		updateUnitPicker();
		$('#assessmentView').show();
	}
	
	function loadAssessments(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			hideBox('#editAssessmentBox', 10);

			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listAssessmentBox').css({'height':fromHeight+'px'});

			haveAssessments = true;
			$('#assessmentBody').html("");
			
			haveUnits = false;
			$('#unitAssessmentsBody').html("");

			for (var x=0; x<data.assessments.length; x++) {

				var tempClassColor = (data.assessments[x].color<=45?colors1[data.assessments[x].color]:data.assessments[x].color);
				
				var ls = '<tr class="pickRow assessmentRow assessment' + data.assessments[x].subjectId + ' assessment' + data.assessments[x].subjectId + data.assessments[x].unitId + '" id="ast' + data.assessments[x].assessmentId + '" style="cursor:' + cursorType + ';">';
				
				ls = ls + '<td valign="top" class="assessmentDoIt" id="ast' + data.assessments[x].assessmentId + 'X" style="cursor:' + cursorType + '; background-color:' + tempClassColor + '; border:1px solid ' + tempClassColor + '; border-top-width:0; border-bottom-color:white;">';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="srCell">';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '1">' + data.assessments[x].className + '</div><div id="ast' + data.assessments[x].assessmentId + '2" style="display:none">' + data.assessments[x].subjectId + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="srCell">';
				
				if (data.assessments[x].unitNum != "") {
					ls = ls + '<div style="float:left; background-color:' + tempClassColor + '; color:white; padding-top:1px; padding-bottom:1px; padding-right:3px; padding-left:3px; margin-right:3px;">' + data.assessments[x].unitNum + '</div>';
				}
				
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '3">' + data.assessments[x].unitTitle + '</div><div id="ast' + data.assessments[x].assessmentId + '4" style="display:none">' + data.assessments[x].unitId + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '7">' + formatDateToShow(data.assessments[x].assessmentStart) + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '8">' + formatDateToShow(data.assessments[x].assessmentEnd) + '</div>';
				ls = ls + '</td>';

				ls = ls + '<td valign="top" class="srCell">';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '5">' + data.assessments[x].assessmentTitle + '</div><div id="ast' + data.assessments[x].assessmentId + '6" style="display:none">' + data.assessments[x].assessmentDesc + '</div>';
				loadAttachmentsArray(data.assessments[x].attachments);
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '9" style="display:none">' + getAttachmentsText() + '</div>';
				loadStandardArrays(data.assessments[x].standards);
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '12" style="display:none">' + getStandardsText() + '</div>';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '10" style="display:none">' + data.assessments[x].scoreWeightId + '</div>';
				ls = ls + '<div id="ast' + data.assessments[x].assessmentId + '11" style="display:none">' + data.assessments[x].totalPoints + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '</tr>';
				
				$('#assessmentBody').append(ls);
			
			}
			
			var ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#assessmentBody').append(ls);

			if (assessmentClassPicked != "pcall") {
				$('.assessmentRow').hide();
				$('.assessment'+assessmentClassPicked).show();
			}
			
			if (action != "getAssessments") {
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
				currentGradesClassId = 0;
			}
			
			if (window.location.hash == "#assessment") {
				showAssessments();
			} else if (window.location.hash == '#grade') {
				if (individualStudentGradesView) {
					showIndividualStudentGrades();
				} else {
					showStudentGrades();
				}
			} else if (window.location.hash != "#unit"){
				getLessons();
			}
			showAction();

		}
	}
	
	$('#addAssessment').click(function() {
		addAssessment();
		if (assessmentClassPicked == 'pcall') {
			$('#assessmentClass').val(0);
		} else {
			$('#assessmentClass').val(assessmentClassPicked);
		}
		$('#assessmentClass').trigger('change');
	});

	$('#addAssessment2').click(function() {
		addAssessment();
	});
	
	$('#addAssessment3').click(function() {
		addAssessment();
		$('#assessmentClass').val(currentGradesClassId);
		$('#assessmentClass').trigger('change');
		
	});

	function addAssessment() {

		$('#assessmentAction').hide();

		currentAssessmentId = 0;
		action = "addAssessment";
		applyUnitType = "";
		clearNotification('#assessmentErrorMsg');

		$('#assessmentClass').val(0);

		$('#assessmentUnit').html('<option value="0">Select Unit</option>');
		$('#assessmentUnit').val(0);

		$('#assessmentStart').val('');
		$('#assessmentEnd').val('');
		$('#assessmentTitle').val('');
		$('#assessmentDesc').val('');
		
		loadAssessmentTypes(0);
		$('#assessmentType').val(0);
		
		attachType = 'attachAst';
		currentAttachmentsText = '';
		loadAttachmentsText();
		
		standardType = 'Assessment';
		currentStandardsText = '';
		loadStandardsText();

		showBox('#editAssessmentBox', 10);
		
	}

	$('#assessmentClass').change(function() {

		loadAssessmentTypes($('#assessmentClass').val());
		$('#assessmentType').val(0);

		$('#assessmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assessmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assessmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		$('#assessmentUnit').val(0);
		
		setClassStartEnd($('#assessmentClass').val());
		
	});
	
	$('.assessmentRow').live('click', function(e) {
		currentAssessmentId = this.id;
		hideLists();
		editAssessment();
	});
	
	function editAssessment() {
		
		$('#assessmentAction').show();

		action = "updateAssessment";
		applyUnitType = "";
		clearNotification('#assessmentErrorMsg');

		$('#assessmentClass').val($('#'+currentAssessmentId+'2').html());
		setClassStartEnd($('#assessmentClass').val());
		
		$('#assessmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assessmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assessmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		$('#assessmentUnit').val($('#'+currentAssessmentId+'4').html());

		$('#assessmentStart').val($('#'+currentAssessmentId+'7').html());
		$('#assessmentEnd').val($('#'+currentAssessmentId+'8').html());
		$('#assessmentTitle').val($('#'+currentAssessmentId+'5').html());
		$('#assessmentDesc').val($('#'+currentAssessmentId+'6').html());
		
		loadAssessmentTypes($('#assessmentClass').val());
		$('#assessmentType').val($('#'+currentAssessmentId+'10').html());

		$('#assessmentPoints').val($('#'+currentAssessmentId+'11').html());
		
		attachType = 'attachAst';
		currentAttachmentsText = '#' + currentAssessmentId + '9';
		loadAttachmentsText();
		
		standardType = 'Assessment';
		currentStandardsText = '#' + currentAssessmentId + "12";
		loadStandardsText();

		showBox('#editAssessmentBox', 10);

	}

	$('#cancelEditAssessment').click(function() {
		action = "";
		hideBox('#editAssessmentBox', 10);
	});

	$('#closeEditAssessment').click(function() {
		action = "";
		hideBox('#editAssessmentBox', 10);
	});

	$('#applyEditAssessment').click(function() {

		var valError = false;
		clearNotification('#assessmentErrorMsg');

		if ($('#assessmentClass').val() == 0) {
 			valError = true;
 			showNotification('#assessmentErrorMsg', 'Please select a class');
		}
		
		var tStart = formatDateToSave($.trim($('#assessmentStart').val()));
		var tEnd   = formatDateToSave($.trim($('#assessmentEnd').val()));

		if (tStart != "") {
 	 		if (valDate(tStart) == false) {
 	 			valError = true;
 	 			showNotification('#assessmentErrorMsg', 'Please enter a valid Start Date');
 	 		}
		}
		
		if (tEnd != "") {
 	 		if (valDate(tEnd) == false) {
 	 			valError = true;
 	 			showNotification('#assessmentErrorMsg', 'Please enter a valid End Date');
 	 		}
		}
		
		// confirm start date before end date
		if (valError == false && (tStart != "" && tEnd != "")) {
			var result = compareDates(tStart, tEnd);
			if (result != 0) {
				valError = true;
 	 			if (result == 1) {
	 				showNotification('#assessmentErrorMsg', 'Start Date must be before End Date');
	 			} else {
	 				showNotification('#assessmentErrorMsg', 'Date range cannot exceed one year');
	 			}
			}		
		}
		
		// confirm start date is not before class start date
		if (valError == false && tStart != "") {
			var result = compareDates(currentClassStart, tStart);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#assessmentErrorMsg', 'Assessment Start Date cannot be before Class Start Date');
	 			} else {
	 				showNotification('#assessmentErrorMsg', 'Class Start Date to Assessment Start Date cannot exceed one year');
	 			}
			}		
		}

		// confirm end date is not after class end date
		if (valError == false && tEnd != "") {
			var result = compareDates(tEnd, currentClassEnd);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#assessmentErrorMsg', 'Assessment End Date cannot be after Class End Date');
	 			} else {
	 				showNotification('#assessmentErrorMsg', 'Assessment End Date to Class End Date cannot exceed one year');
	 			}
			}		
		}

		if (valError == false) {
			if ($.trim($('#assessmentTitle').val()) == "") {
				valError = true;
 				showNotification('#assessmentErrorMsg', 'Please enter a Title for the Assessment');
			}
		}
		
		var totalPoints = $.trim($('#assessmentPoints').val());
		if (valError == false && totalPoints != "") {
			if (isNaN(totalPoints) || (parseFloat(totalPoints) != parseInt(totalPoints))) {
				valError = true;
 				showNotification('#assessmentErrorMsg', 'Total points must be numeric');
			}
		}
		
		if (valError == false) {

			var jsonInfo = new Object();
			jsonInfo.subjectId = $('#assessmentClass').val();
			jsonInfo.unitId = $('#assessmentUnit').val();
			jsonInfo.assessmentTitle = $.trim($('#assessmentTitle').val());
			jsonInfo.assessmentDesc = $.trim($('#assessmentDesc').val());
			jsonInfo.assessmentStart = tStart;
			jsonInfo.assessmentEnd = tEnd;
			jsonInfo.scoreWeightId = $.trim($('#assessmentType').val());

			if ($.trim($('#assessmentPoints').val()) == "") {
				jsonInfo.assessmentPoints = 0;
			} else {
				jsonInfo.assessmentPoints = $.trim($('#assessmentPoints').val());
			}

			jsonInfo.standardDBIds = new Array();
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					jsonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}

			jsonInfo.attachmentNames = new Array();
			jsonInfo.attachmentPrivate = new Array();
			jsonInfo.attachmentUrl = new Array();
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					jsonInfo.attachmentNames[x] = attachments[x].filename;
					jsonInfo.attachmentPrivate[x] = attachments[x].privateFlag;
					jsonInfo.attachmentUrl[x] = attachments[x].url;
				}
			}

			if (paymentNeeded == false) {
				if (currentAssessmentId == 0) {
					jsonInfo.action = "A";
				} else {
					jsonInfo.action = "C";
					jsonInfo.assessmentId= currentAssessmentId.substr(3);
				}
				showLoading();
				jsonInfo.updateType = "A";
				$.post('updateAssessment', jsonInfo, loadAssessments, "json");
			} else {
				showExpiredMsg();
			}

		}
		
	});

	$('#deleteAssessment').click(function() {
	
		applyUnitType = "";

		if (paymentNeeded == false) {
			if (confirm('Are you sure you want to delete this assessment?')) {
				action = "deleteAssessment";
				var jsonInfo = new Object();
				jsonInfo.action = "D";
				jsonInfo.assessmentId= currentAssessmentId.substr(3);
				showLoading();
				jsonInfo.updateType = "A";
				$.post('updateAssessment', jsonInfo, loadAssessments, "json");
			}
		} else {
			showExpiredMsg();
		}
	
	});

	
	$('#assessmentChangeClass').click(function() {
		if ($('#pickClass').css('display') == 'none') {
			$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickClass = true;
		} else {
			$('#pickClass').hide();
		}
	});

	$('#assessmentChangeUnit').click(function() {
		if ($('#pickUnit').css('display') == 'none') {
			$('#pickUnit').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickUnit = true;
		} else {
			$('#pickUnit').hide();
		}
	});

	$('#unitButton').click(function() {
		browserButton = false;
		window.location.hash = "unit";
		showUnits();
	});

	function showUnits() {
		classPickType = 'unit';
		$('#pcall').show();
		if (haveUnits == false) {
			getUnits();
		} else {
			hideAll();
			$('#unitView').show();
		}
	}

	function getUnits() {
		showLoading();
		action = "getUnits";
		$.getJSON('getUnits', 'classId=all', loadUnits);
	}
	
	function loadUnits(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			hideBox('#editUnitBox',10);

			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#unitListBox').css({'height':fromHeight+'px'});

			haveUnits = true;
			$('#unitBody').html("");
			$('#unitLine').html("");
			classUnits = new Array();

			var subjectLineId = "";
			if (data.units.length > 0) {subjectLineId = data.units[0].subjectId;}
			
			for (var x=0; x<data.units.length; x++) {

				var clearVar = "";
				if (subjectLineId != data.units[x].subjectId) {
					subjectLineId = data.units[x].subjectId;
					clearVar = "clear:both; ";
				}
				
//				var ls = '<div class="pickRow unitRow unit' + data.units[x].subjectId + '" id="unt' + data.units[x].unitId + '" style="' + clearVar + 'float:left; margin-top:5px; margin-left:5px; width:100px; overflow:hidden; white-space:nowrap; background-color:' + colors1[data.units[x].color] + '; color:white; cursor:' + cursorType + '; padding:3px; text-overflow:ellipsis;">';
//				
//				ls = ls + '<div id="unt' + data.units[x].unitId + '3" style="float:left; margin-right:5px;">' + data.units[x].unitNum + '</div>';
//				ls = ls + '<div id="unt' + data.units[x].unitId + '5">' + data.units[x].unitTitle + '</div><div style="clear:both;"></div>';
//				ls = ls + '<div class="unitDate" id="unt' + data.units[x].unitId + '7" style="display:none">' + formatDateToShow(data.units[x].unitStart) + '</div>';
//				ls = ls + '<div class="unitDate" id="unt' + data.units[x].unitId + '8" style="display:none">' + formatDateToShow(data.units[x].unitEnd) + '</div>';
//				ls = ls + '<div id="unt' + data.units[x].unitId + '1" style="display:none">' + data.units[x].className + '</div>';
//				ls = ls + '<div id="unt' + data.units[x].unitId + '2" style="display:none">' + data.units[x].subjectId + '</div>';
//				ls = ls + '<div id="unt' + data.units[x].unitId + '6" style="display:none">' + data.units[x].unitDesc + '</div>';
//				loadAttachmentsArray(data.units[x].attachments);
//				ls = ls + '<div id="unt' + data.units[x].unitId + '9" style="display:none">' + getAttachmentsText() + '</div>';
//
//				ls = ls + '</div>';
//
//				$('#unitLine').append(ls);
				
				var ls = '<tr class="pickRow unitRow unit' + data.units[x].subjectId + '" id="unt' + data.units[x].unitId + '" style="cursor:' + cursorType + ';">';
								
				var tempClassColor = (data.units[x].color<=45?colors1[data.units[x].color]:data.units[x].color);
				ls = ls + '<td valign="top" class="unitDoIt" id="unt' + data.units[x].unitId  + 'X" style="cursor:' + cursorType + '; background-color:'+ tempClassColor + '; border:1px solid' + tempClassColor + '; border-top-width:0; border-bottom-color:white;"></td>';
								
				ls = ls + '<td valign="top" class="slCell" style="text-align:left;">';
				ls = ls + '<div id="unt' + data.units[x].unitId + '1">' + data.units[x].className + '</div>';
				ls = ls + '<div id="unt' + data.units[x].unitId + '2" style="display:none">' + data.units[x].subjectId + '</div>';
				ls = ls + '</td>';
								
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="unt' + data.units[x].unitId + '7">' + formatDateToShow(data.units[x].unitStart) + '</div>';
				ls = ls + '</td>';
								
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="unt' + data.units[x].unitId + '8">' + formatDateToShow(data.units[x].unitEnd) + '</div>';
				ls = ls + '</td>';
				
				ls = ls + '<td valign="top" class="scCell">';
				ls = ls + '<div id="unt' + data.units[x].unitId + '3">' + data.units[x].unitNum + '</div>';
				ls = ls + '</td>';

				ls = ls + '<td valign="top" class="srCell">';
				ls = ls + '<div id="unt' + data.units[x].unitId + '5">' + data.units[x].unitTitle + '</div>';
				ls = ls + '<div id="unt' + data.units[x].unitId + '6" style="display:none">' + data.units[x].unitDesc + '</div>';
				loadAttachmentsArray(data.units[x].attachments);
				ls = ls + '<div id="unt' + data.units[x].unitId + '9" style="display:none">' + getAttachmentsText() + '</div>';
				ls = ls + '</td>';
								
				ls = ls + '</tr>';
								
				$('#unitBody').append(ls);
			
				classUnits[x] = new Object();
				classUnits[x].classId = data.units[x].subjectId;
				classUnits[x].unitId = data.units[x].unitId;
				classUnits[x].unitTitle = data.units[x].unitTitle;
				classUnits[x].unitNum = data.units[x].unitNum;
				
			}
			
			var ls = '<tr><td><img src="spacer.gif" width="5px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="100px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="75px" height="1"></td>';
			ls = ls + '<td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#unitBody').append(ls);

			if (unitClassPicked != "pcall") {
				$('.unitRow').hide();
				$('.unit'+unitClassPicked).show();
				$('.unitRow').css({'height':'92px','overflow':'visible','white-space':'normal'});
				$('.unitDate').show();
			}
			
			if (action == 'getUnits') {
				showUnits();
				showAction();
			} else if (applyUnitType == "g") {
				action = "addAssignment";
				addUnitAssignment();
			} else if (applyUnitType == "m") {
				action = "addAssessment";
				addUnitAssessment();
			} else if (applyUnitType == "eg") {
				jsonInfo = new Object();
				jsonInfo.assignmentId = currentAssignmentId.substring(3);
				jsonInfo.userMode = userMode;
				showLoading();
				$.getJSON('getAssignmentServlet', jsonInfo, loadLessonAssignment);
			} else if (applyUnitType == "em") {
				jsonInfo = new Object();
				jsonInfo.assessmentId = currentAssessmentId.substring(3);
				jsonInfo.userMode = userMode;
				showLoading();
				$.getJSON('getAssessmentServlet', jsonInfo, loadLessonAssessment);
			} else if (applyUnitType == "l") {
				browserButton = false;
				window.location.hash = "list";
				currentClassId = $('#unitClass').val();
				viewUnitLessons = true;
				showList();
			}
			
		}
	}

	$('#viewUnitLessons').click(function() {
		applyUnitType = "l";
		applyEditUnit();
	});

	$('#addUnitAssignment').click(function() {
		applyUnitType = "g";
		applyEditUnit();
	});

	$('#addUnitAssessment').click(function() {
		applyUnitType = "m";
		applyEditUnit();
	});
	
	$('.unitAssessmentRow').live('click', function(e) {
		hideLists();
		applyUnitType = "em";
		currentAssessmentId = this.id;
		applyEditUnit();
	});

	$('.unitAssignmentRow').live('click', function(e) {
		hideLists();
		applyUnitType = "eg";
		currentAssignmentId = this.id;
		applyEditUnit();
	});
	
	$('.unitAssignmentRow, .unitAssessmentRow').live('mouseenter', function(e) {
		$('#'+this.id+'5').css({'color':'blue','text-decoration':'underline'});
	});

	$('.unitAssignmentRow, .unitAssessmentRow').live('mouseleave', function(e) {
		$('#'+this.id+'5').css({'color':'black','text-decoration':'none'});
	});
	
	$('#addUnit').click(function() {
		addUnit();
	});
	$('#addUnit2').click(function() {
		addUnit();
	});

	function addUnit() {

		$('#unitAction').hide();

		currentUnitId = 0;
		currentUnitSubjectId = 0;
		
		action = "addUnit";
		standardType = 'Unit';
		clearNotification('#unitErrorMsg');

		$('#unitClass').val(0);
		$('#unitStart').val('');
		$('#unitEnd').val('');
		$('#unitNum').val('');
		$('#unitTitle').val('');
		$('#unitDesc').val('');

		$('#unitLessonsBody').html("");
		$('#unitAssignmentsBody').html("");
		$('#unitAssessmentsBody').html("");
		$('#unitStandardsBody').html("");
		standards = null;
		
		attachType = 'attachUnit';
		currentAttachmentsText = '';
		loadAttachmentsText();
		
		showBox('#editUnitBox', 10);
		
//		$('#unitConnectionsBox').hide();
//		$('#unitLabel').html("New Unit");
		
	}
	
	$('.unitRow').live('click', function(e) {

		action = "getUnit";
		
		currentUnitId = this.id.substr(3);
		currentUnitSubjectId = $('#unt'+currentUnitId+'2').html();

		var jsonInfo = new Object();
		jsonInfo.unitId = currentUnitId;
		jsonInfo.subjectId = currentUnitSubjectId;
		
		hideLists();
		
		showLoading();
		$.getJSON('getUnit', jsonInfo, loadUnitDetail);
		
	});
	
	function editUnit(data) {
		
		$('#unitAction').show();
		
		action = "updateUnit";
		standardType = 'Unit';
		clearNotification('#unitErrorMsg');

		currentUnitId = data.unitId;
		currentUnitSubjectId = data.subjectId;
		
		$('#unitClass').val(data.subjectId);
		setClassStartEnd($('#unitClass').val());
		$('#unitStart').val(formatDateToShow(data.unitStart));
		$('#unitEnd').val(formatDateToShow(data.unitEnd));
		$('#unitNum').val(data.unitNum);
		$('#unitTitle').val(data.unitTitle);
		$('#unitDesc').val(data.unitDesc);
		
		attachType = 'attachUnit';
		currentAttachmentsText = '#unt' + currentUnitId + '9';
		loadAttachmentsText();

//		loadAttachmentsArray(data.attachments);

		if (attachments != null) {
			$('#'+attachType+'Table').show();
			loadAttachmentsTable();
		}
		
//		$('#unitDetailsBox').show();
//		$('#unitConnectionsBox').show();
//		$('#unitLabel').html($('#unitTitle').val());
		
		showBox('#editUnitBox', 10);

	}

	$('#unitClass').change(function() {
		setClassStartEnd($('#unitClass').val());
	});
	
	$('#applyEditUnit').click(function() {
		applyUnitType = "";
		applyEditUnit();
	});

	function applyEditUnit() {
		
		var valError = false;
		clearNotification('#unitErrorMsg');

		if ($('#unitClass').val() == 0) {
 			valError = true;
 			showNotification('#unitErrorMsg', 'Please select a class');
		}
		
		var tStart = formatDateToSave($.trim($('#unitStart').val()));
		var tEnd   = formatDateToSave($.trim($('#unitEnd').val()));

		if (tStart != "") {
 	 		if (valDate(tStart) == false) {
 	 			valError = true;
 	 			showNotification('#unitErrorMsg', 'Please enter a valid Start Date');
 	 		}
		}
		
		if (tEnd != "") {
 	 		if (valDate(tEnd) == false) {
 	 			valError = true;
 	 			showNotification('#unitErrorMsg', 'Please enter a valid End Date');
 	 		}
		}
		
		// confirm start date before end date
		if (valError == false && (tStart != "" && tEnd != "")) {
			var result = compareDates(tStart, tEnd);
			if (result != 0) {
				valError = true;
 	 			if (result == 1) {
	 				showNotification('#unitErrorMsg', 'Start Date must be before End Date');
	 			} else {
	 				showNotification('#unitErrorMsg', 'Date range cannot exceed one year');
	 			}
			}		
		}
		
		// confirm start date is not before class start date
		if (valError == false && tStart != "") {
			var result = compareDates(currentClassStart, tStart);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#unitErrorMsg', 'Unit Start Date cannot be before Class Start Date');
	 			} else {
	 				showNotification('#unitErrorMsg', 'Class Start Date to Unit Start Date cannot exceed one year');
	 			}
			}		
		}

		// confirm end date is not after class end date
		if (valError == false && tEnd != "") {
			var result = compareDates(tEnd, currentClassEnd);
			if (result != 0) {
				valError = true;
	 			if (result == 1) {
	 				showNotification('#unitErrorMsg', 'Unit End Date cannot be after Class End Date');
	 			} else {
	 				showNotification('#unitErrorMsg', 'Unit End Date to Class End Date cannot exceed one year');
	 			}
			}		
		}

		if (valError == false) {
			if ($.trim($('#unitTitle').val()) == "") {
				valError = true;
 				showNotification('#unitErrorMsg', 'Please enter a Title for the Unit');
			}
		}
		
		if (valError == false) {
			if ($.trim($('#unitNum').val()) == "") {
				valError = true;
 				showNotification('#unitErrorMsg', 'Please enter a Unit ID for the Unit');
			}
		}
		
		if (valError == false) {

			var jsonInfo = new Object();
			jsonInfo.subjectId = $('#unitClass').val();
			jsonInfo.unitNum = $.trim($('#unitNum').val());
			jsonInfo.unitTitle = $.trim($('#unitTitle').val());
			jsonInfo.unitDesc = $.trim($('#unitDesc').val());
			jsonInfo.unitStart = tStart;
			jsonInfo.unitEnd = tEnd;

			jsonInfo.standardDBIds = new Array();
			if (standards != null) {
				for (var x=0; x<standards.length; x++) {
					jsonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
				}
			}

			jsonInfo.attachmentNames = new Array();
			jsonInfo.attachmentPrivate = new Array();
			if (attachments != null) {
				for (var x=0; x<attachments.length; x++) {
					jsonInfo.attachmentNames[x] = attachments[x].filename;
					jsonInfo.attachmentPrivate[x] = attachments[x].privateFlag;
				}
			}

			if (paymentNeeded == false) {
				if (currentUnitId == 0) {
					jsonInfo.action = "A";
				} else {
					jsonInfo.action = "C";
					jsonInfo.unitId= currentUnitId;
				}
				showLoading();
				$.post('updateUnit', jsonInfo, loadUnits, "json");
			} else {
				showExpiredMsg();
			}

		}
		
	}

	$('#deleteUnit').click(function() {
	
		applyUnitType = "";

		if (paymentNeeded == false) {
			if (confirm('Are you sure you want to delete this unit?')) {
				action = "deleteUnit";
				var jsonInfo = new Object();
				jsonInfo.action = "D";
				jsonInfo.unitId = currentUnitId;
				jsonInfo.subjectId = currentUnitSubjectId;
				showLoading();
				$.post('updateUnit', jsonInfo, loadUnits, "json");
			}
		} else {
			showExpiredMsg();
		}
	
	});

	
	$('#unitChangeClass').click(function() {
		if ($('#pickClass').css('display') == 'none') {
			$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickClass = true;
		} else {
			$('#pickClass').hide();
		}
	});

	
	$('.classPicker').live('click', function(e) {

		$('#'+classPickType+'ClassLabel').html($(this).html());

		if (this.id != "pcall") {
			$('#'+classPickType+'ChangeClass').css({'background-color':$(this).css('backgroundColor'),'border':'0px','color':'white'});
			$('#'+classPickType+'ClassImg').html('<img src="images/downwhite2.png">');
			$('.'+classPickType+'Row').hide();
			if (classPickType == "assignment") {
				assignmentClassPicked = this.id.substr(2);
				assignmentUnitPicked = "puall";
			} else if (classPickType == "assessment") {
				assessmentClassPicked = this.id.substr(2);
				assessmentUnitPicked = "puall";
			} else if (classPickType == "template") {
				templateClassPicked = this.id.substr(2);
			} else if (classPickType == "unit") {
				unitClassPicked = this.id.substr(2);
//				$('.'+classPickType+'Row').css({'height':'92px','overflow':'visible','white-space':'normal'});
//				$('.unitDate').show();
			} else if (classPickType == "lesson") {
				currentClassId = this.id.substr(2);
				viewUnitLessons = false;
				showList();
			} else if (classPickType == "student") {
				studentClassPicked = this.id.substr(2);
				showAssignStudents();
			} else if (classPickType == "grades") {
				gradesClassPicked = this.id.substr(2);
				if (individualStudentGradesView) {
					showIndividualStudentGrades();
				} else {
					showStudentGrades();
				}
			}
			
			$('.'+classPickType+this.id.substr(2)).show();
		} else {
			$('#'+classPickType+'ChangeClass').css({'background-color':'#FFFFFF','border':'2px solid #0057C1','color':'#0057C1'});
			$('#'+classPickType+'ClassImg').html('<img src="images/downblue2.png">');
			$('.'+classPickType+'Row').show();
			if (classPickType == "assignment") {
				assignmentClassPicked = "pcall";
			} else if (classPickType == "assessment") {
				assessmentClassPicked = "pcall";
			} else if (classPickType == "template") {
				templateClassPicked = "pcall";
			} else if (classPickType == "unit") {
				unitClassPicked = "pcall";
//				$('.'+classPickType+'Row').css({'height':'auto','overflow':'hidden','white-space':'nowrap'});
//				$('.unitDate').hide();
			}
		}
		
		if (classPickType != "lesson" && classPickType != "student" && classPickType != "grades") {
			updateUnitPicker();
		}

	});
	
	$('.unitPicker').live('click', function(e) {

		$('#'+classPickType+'UnitLabel').html($(this).html());

		if (this.id != "puall") {
			$('.'+classPickType+'Row').hide();
			if (classPickType == "assignment") {
				assignmentUnitPicked = this.id.substr(2);
				$('.'+classPickType+assignmentClassPicked+assignmentUnitPicked).show();
			} else if (classPickType == "assessment") {
				assessmentUnitPicked = this.id.substr(2);
				$('.'+classPickType+assessmentClassPicked+assessmentUnitPicked).show();
			} else if (classPickType == "lesson") {
				lessonUnitPicked = this.id.substr(2);
				$('.'+classPickType+'Row'+lessonUnitPicked).show();
			}
		} else {
			if (classPickType == "assignment") {
				if (assignmentClassPicked == "pcall") {
					$('.'+classPickType+'Row').show();
				} else {
					$('.'+classPickType+'Row').hide();
					$('.'+classPickType+assignmentClassPicked).show();
				}
				assignmentUnitPicked = "puall";
			} else if (classPickType == "assessment") {
				if (assessmentClassPicked == "pcall") {
					$('.'+classPickType+'Row').show();
				} else {
					$('.'+classPickType+'Row').hide();
					$('.'+classPickType+assessmentClassPicked).show();
				}
				assessmentUnitPicked = "puall";
			} else if (classPickType == "lesson") {
				$('.'+classPickType+'Row').show();
				lessonUnitPicked = "puall";
			}
		}

	});

	function updateUnitPicker() {
		
		$('#'+classPickType+'UnitLabel').html("All Units");
		
		$('#pickUnit').html('<div id="puall" class="unitPicker">All Units</div>');
		
		for (var y=0; y<classUnits.length; y++) {
			if (classPickType == "assignment") {
				if (assignmentClassPicked != "pcall" && assignmentClassPicked == classUnits[y].classId) {
					$('#pickUnit').append('<div id="pu' + classUnits[y].unitId + '" class="unitPicker">' + classUnits[y].unitTitle + '</div>');
					if (assignmentUnitPicked == classUnits[y].unitId) {
						$('#'+classPickType+'UnitLabel').html(classUnits[y].unitTitle);
					}
				}
			} else if (classPickType == "assessment") {
				if (assessmentClassPicked != "pcall" && assessmentClassPicked == classUnits[y].classId) {
					$('#pickUnit').append('<div id="pu' + classUnits[y].unitId + '" class="unitPicker">' + classUnits[y].unitTitle + '</div>');
					if (assessmentUnitPicked == classUnits[y].unitId) {
						$('#'+classPickType+'UnitLabel').html(classUnits[y].unitTitle);
					}
				}
			} else if (classPickType == "lesson") {
				if (lessonClassPicked != "pcall" && lessonClassPicked == classUnits[y].classId) {
					$('#pickUnit').append('<div id="pu' + classUnits[y].unitId + '" class="unitPicker">' + classUnits[y].unitTitle + '</div>');
					if (lessonUnitPicked == classUnits[y].unitId) {
						$('#'+classPickType+'UnitLabel').html(classUnits[y].unitTitle);
					}
				}
			}
		}
	}
	
//	$('#showUnitLessons').click(function() {
//		if (showUnitLessons == false) {
//			$('#unitLessonsList').show();
//			$('#unitLessonsArrow').html('<img src="images/hide2.png" style="margin-right:10px;">');
//			showUnitLessons = true;
//		} else {
//			$('#unitLessonsList').hide();
//			$('#unitLessonsArrow').html('<img src="images/show2.png" style="margin-right:10px;">');
//			showUnitLessons = false;
//		}
//	});
//	
//	$('#showUnitAssignments').click(function() {
//		if (showUnitAssignments == false) {
//			$('#unitAssignmentsList').show();
//			$('#unitAssignmentsArrow').html('<img src="images/hide2.png" style="margin-right:10px;">');
//			showUnitAssignments = true;
//		} else {
//			$('#unitAssignmentsList').hide();
//			$('#unitAssignmentsArrow').html('<img src="images/show2.png" style="margin-right:10px;">');
//			showUnitAssignments = false;
//		}
//	});
//
//	$('#showUnitAssessments').click(function() {
//		if (showUnitAssessments == false) {
//			$('#unitAssessmentsList').show();
//			$('#unitAssessmentsArrow').html('<img src="images/hide2.png" style="margin-right:10px;">');
//			showUnitAssessments = true;
//		} else {
//			$('#unitAssessmentsList').hide();
//			$('#unitAssessmentsArrow').html('<img src="images/show2.png" style="margin-right:10px;">');
//			showUnitAssessments = false;
//		}
//	});
//
//	$('#showUnitStandards').click(function() {
//		if (showUnitStandards == false) {
//			$('#unitStandardsList').show();
//			$('#unitStandardsArrow').html('<img src="images/hide2.png" style="margin-right:10px;">');
//			showUnitStandards = true;
//		} else {
//			$('#unitStandardsList').hide();
//			$('#unitStandardsArrow').html('<img src="images/show2.png" style="margin-right:10px;">');
//			showUnitStandards = false;
//		}
//	});

	function loadUnitDetail(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			$('#unitLessonsBody').html("");
			if (data.lessons != null && data.lessons.length > 0) {

				for (var x=0; x<data.lessons.length; x++) {
	
					if (data.lessons[x].lessonText != null) {
						
						data.lessons[x].sequence = formatDateToSequence(data.lessons[x].lessonDate) + "Z" + data.lessons[x].extraLesson;
						
						if (data.lessons[x].lessonTitle == null || data.lessons[x].lessonTitle == "") {
							data.lessons[x].lessonTitle = "Untitled Lesson";
						}
						
						var ls = '<tr class="pickRow unitLessonRow" id="utls' + data.lessons[x].classId + 'X' + data.lessons[x].sequence + '" style="cursor:' + cursorType + '; border:1px solid #C3D9FF; border-top-width:0px;">';
						
						ls = ls + '<td valign="top" style="padding:5px; text-align:left;">';
						ls = ls + '<div class="allTitles"><div class="shared' + getSharedLine(data.lessons[x]) + 'LTI" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'LTI' + 'U' + '">' + data.lessons[x].lessonTitle + '</div></div>';
						ls = ls + '<div style="display:none;" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'CN">' + data.lessons[x].className + '</div>';
						ls = ls + '<div style="display:none;">' + loadHiddenFields(data.lessons[x], "U"); + '</div>';
						ls = ls + '<div style="display:none;">' + loadLessonSections(data.lessons[x], "U"); + '</div>';
						ls = ls + '</td>';
						
						ls = ls + '<td valign="top" style="padding:5px; text-align:right;">';
						ls = ls + '<div style="width:200px;" id="' + data.lessons[x].classId + data.lessons[x].sequence + 'D">' + data.lessons[x].lessonDayOfWeek + " " + formatDateToShow(data.lessons[x].lessonDate) + '</div>';
						ls = ls + '</td></tr>';

						
						$('#unitLessonsBody').append(ls);
						
						hideEmptySections(data.lessons[x]);
						addTemplateClass(data.lessons[x]);
						
					}
				
				}
				
				$('.emptyLesson').hide();
				$('.hiddenInfo').hide();
				for (var z=0; z<itemCount; z++) {
					var CBpId = '#CB' + partId[z];
					var hsPartId = '.' + partId[z];
					if ($(CBpId).prop('checked')) {$(hsPartId).show();} else {$(hsPartId).hide();}
				}	
				if ($('#CBallStIDs').prop('checked') || $('#CBallStText').prop('checked')) {$('.sHeader').show();} else {$('.sHeader').hide();}

			
			} else {
				$('#unitLessonsBody').append('<tr style="margin-top:5px;"><td colspan="3">No lessons have been added to this unit</td></tr>');
			}

			loadUnitAssignments(data);
			
			loadUnitAssessments(data);
			
			$('#unitStandardsBody').html("");
			standards = null;
			if (data.standards != null && data.standards.length > 0) {
				loadStandardArrays(data.standards);
				for (x=0; x<standards.length; x++) {
					var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
					ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
					ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
					$('#unitStandardsBody').append(ls);
				}
				ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
				$('#unitStandardsBody').append(ls);
				
			}
			
			editUnit(data);
		
		}
		
	}
	
//	$('.removeStanUnit').live('click', function() {
//		
//		var temp1 = this.id;
//		var temp2 = temp1.substring(4);
//		var stanPos = parseInt(temp2,10);
//
//		standards.splice(stanPos, 1);
//		
//		$('#unitStandardsBody').html('');
//		
//		if (standards != null && standards.length > 0) {
//			for (var x=0; x<standards.length; x++) {
//				var ls = '<tr><td class="slCell">' + standards[x].id + '</td><td class="srCell">' + standards[x].desc + '</td>';
//				ls = ls + '<td align="center"><img class="removeStanUnit" id="utst' + x + '" border="0" src="images/close.jpg" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close.jpg\'" style="cursor:pointer;" title="Remove Standard"></td></tr>';
//				$('#unitStandardsBody').append(ls);
//			}
//		}
//
//		updateUnitStandards();
//		
//	});

//	function updateUnitStandards() {
//		
//		jsonInfo = new Object();
//		jsonInfo.action = "S";
//		jsonInfo.unitId= currentUnitId.substr(3);
//		jsonInfo.standardDBIds = new Array();
//		if (standards != null) {
//			for (var x=0; x<standards.length; x++) {
//				jsonInfo.standardDBIds[x] = standards[x].dbId.substring(2);
//			}
//		}
//		
//		showLoading();
//		$.post('updateUnit', jsonInfo, unitStandardsUpdated, "json");
//
//	}
	
//	function unitStandardsUpdated(data) {
//		hideLoading();
//		if (data.notLoggedIn == "true") {
//			showLogin();
//		} else  if (data.standardsUpdated != "true") {
//			showErrorBox('Sorry, an error has occurred. Please try again. If the error continues, please contact us at 888-205-5528 or support@planbook.com');
//		}
//	}
	
	function addUnitAssignment() {
		
		clearNotification('#assignmentErrorMsg');
		
		$('#assignmentClass').val(0);
		if (currentUnitId != 0) {
			$('#assignmentClass').val(currentUnitSubjectId);
			setClassStartEnd($('#assignmentClass').val());
		}
		
		$('#assignmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assignmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assignmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}

		if (currentUnitId != 0) {
			$('#assignmentUnit').val(currentUnitId);
		}
		
		$('#assignmentStart').val('');
		$('#assignmentEnd').val('');
		$('#assignmentTitle').val('');
		$('#assignmentDesc').val('');
		
		attachType = 'attachAsg';
		currentAttachmentsText = '';
		loadAttachmentsText();
		
		standardType = 'Assignment';
		currentStandardsText = '';
		loadStandardsText();
		
		showBox('#editAssignmentBox', 10);
		
	}

	function addUnitAssessment() {
			
		action = "addAssessment";

		clearNotification('#assessmentErrorMsg');

		$('#assessmentClass').val(0);
		if (currentUnitId != 0) {
			$('#assessmentClass').val(currentUnitSubjectId);
			setClassStartEnd($('#assessmentClass').val());
		}
		
		$('#assessmentUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#assessmentClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#assessmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}

		if (currentUnitId != 0) {
			$('#assessmentUnit').val(currentUnitId);
		}
		
		$('#assessmentStart').val('');
		$('#assessmentEnd').val('');
		$('#assessmentTitle').val('');
		$('#assessmentDesc').val('');
		
		attachType = 'attachAsg';
		currentAttachmentsText = '';
		loadAttachmentsText();
		
		standardType = 'Assessment';
		currentStandardsText = '';
		loadStandardsText();
		
		showBox('#editAssessmentBox', 10);
		
	}
	
	function loadUnitAssignments(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			
			hideBox('#editAssignmentBox', 10);
			$('#unitAssignmentsBody').html("");
			
			if (data.assignments != null && data.assignments.length > 0) {
					
				haveAssignments = false;
				$('#assignmentBody').html("");
				
				for (var x=0; x<data.assignments.length; x++) {
	
					var ls = '<tr class="unitAssignmentRow" id="asg' + data.assignments[x].assignmentId + '" style="cursor:' + cursorType + ';">';
					
					ls = ls + '<td class="slCell" style="text-align:left;">';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '1" style="display:none">' + data.assignments[x].className + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '2" style="display:none">' + data.assignments[x].subjectId + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '3" style="display:none">' + data.assignments[x].unitTitle + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '4" style="display:none">' + data.assignments[x].unitId + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '5">' + data.assignments[x].assignmentTitle + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '6" style="display:none">' + data.assignments[x].assignmentDesc + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '7" style="display:none">' + formatDateToShow(data.assignments[x].assignmentStart) + '</div>';
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '8" style="display:none">' + formatDateToShow(data.assignments[x].assignmentEnd) + '</div>';
					loadAttachmentsArray(data.assignments[x].attachments);
					ls = ls + '<div id="asg' + data.assignments[x].assignmentId + '9" style="display:none">' + getAttachmentsText() + '</div>';
					ls = ls + '</td>';
					
//					var displayDates = "";
//					if (data.assignments[x].assignmentStart != "" || data.assignments[x].assignmentEnd != "") {
//						if (data.assignments[x].assignmentStart == data.assignments[x].assignmentEnd) {
//							displayDates = formatDateToShow(data.assignments[x].assignmentStart);
//						} else if (data.assignments[x].assignmentStart != "" && data.assignments[x].assignmentEnd != "") {
//							displayDates = formatDateToShow(data.assignments[x].assignmentStart) + " - " + formatDateToShow(data.assignments[x].assignmentEnd);
//						} else if (data.assignments[x].assignmentStart != "") {
//							displayDates = formatDateToShow(data.assignments[x].assignmentStart);
//						} else {	
//							displayDates = formatDateToShow(data.assignments[x].assignmentEnd);
//						}
//					}
//					ls = ls + '<td valign="top"><div style="padding:5px; text-align:right; width:200px;">' + displayDates + '</div></td>';
				
					ls = ls + '</tr>';
					
					$('#unitAssignmentsBody').append(ls);
				
				}
				
				ls = '<tr><td><img src="spacer.gif" width="150px" height="1"></td></tr>';
				$('#unitAssignmentsBody').append(ls);
				
			}
			
			if (action != "getUnit") {
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
			}
			
		}		
	}

	function loadUnitAssessments(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			hideBox('#editAssessmentBox', 10);
			$('#unitAssessmentsBody').html("");
			
			if (data.assessments != null && data.assessments.length > 0) {
					
				haveAssessments = false;
				$('#assessmentBody').html("");
				
				for (var x=0; x<data.assessments.length; x++) {
		
					var ls = '<tr class="unitAssessmentRow" id="asg' + data.assessments[x].assessmentId + '" style="cursor:' + cursorType + ';">';
					
					ls = ls + '<td class="slCell" style="text-align:left;">';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '1" style="display:none">' + data.assessments[x].className + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '2" style="display:none">' + data.assessments[x].subjectId + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '3" style="display:none">' + data.assessments[x].unitTitle + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '4" style="display:none">' + data.assessments[x].unitId + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '5">' + data.assessments[x].assessmentTitle + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '6" style="display:none">' + data.assessments[x].assessmentDesc + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '7" style="display:none">' + formatDateToShow(data.assessments[x].assessmentStart) + '</div>';
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '8" style="display:none">' + formatDateToShow(data.assessments[x].assessmentEnd) + '</div>';
					loadAttachmentsArray(data.assessments[x].attachments);
					ls = ls + '<div id="asg' + data.assessments[x].assessmentId + '9" style="display:none">' + getAttachmentsText() + '</div>';
					ls = ls + '</td>';
					
//					var displayDates = "";
//					if (data.assessments[x].assessmentStart != "" || data.assessments[x].assessmentEnd != "") {
//						if (data.assessments[x].assessmentStart == data.assessments[x].assessmentEnd) {
//							displayDates = formatDateToShow(data.assessments[x].assessmentStart);
//						} else if (data.assessments[x].assessmentStart != "" && data.assessments[x].assessmentEnd != "") {
//							displayDates = formatDateToShow(data.assessments[x].assessmentStart) + " - " + formatDateToShow(data.assessments[x].assessmentEnd);
//						} else if (data.assessments[x].assessmentStart != "") {
//							displayDates = formatDateToShow(data.assessments[x].assessmentStart);
//						} else {	
//							displayDates = formatDateToShow(data.assessments[x].assessmentEnd);
//						}
//					}
//					ls = ls + '<td valign="top"><div style="padding:5px; text-align:right; width:200px;">' + displayDates + '</div></td>';
				
					ls = ls + '</tr>';
					
					$('#unitAssessmentsBody').append(ls);
				
				}
				
				ls = '<tr><td><img src="spacer.gif" width="150px" height="1"></td></tr>';
				$('#unitAssessmentsBody').append(ls);
				
			}
			
			if (action != "getUnit") {
				haveWeeks = false;
				haveMonth = false;
				haveList = false;
			}

		}
	}	
	
	$('#viewAllLessons').click(function() {
		action = "viewLessons";
		currentClassId = currentUnitSubjectId;
		viewUnitLessons = false;
		showList();
	});
	
	function driveAttachments(fileName, url, fileType, id) {
		
		myFiles = null;
		
		$('#attachOrEmbedBody').html('');
		
		if (fileType == "photo") {
			myFiles = new Array();
			myFiles[0] = new Object();
			myFiles[0].filename = fileName;
			if (attachType == 'attach') {
				myFiles[0].type = 'lesson';
			} else if (attachType == 'attachAsg') {
				myFiles[0].type = 'attachAsg';
			} else if (attachType == 'attachAst') {
				myFiles[0].type = 'attachAst';
			} else {
				myFiles[0].type = attachType;
			}
			myFiles[0].fileType = "drive";
			myFiles[0].url = url;
			myFiles[0].id = id;
			
			$('#attachOrEmbedBody').append(fileName);
			showBox('#attachOrEmbed', 30);
			
		} else {
			if (attachments == null) {
				attachments = new Array();
				attachments[0] = new Object();
				attachments[0].filename = fileName;
				attachments[0].privateFlag = "N";
				attachments[0].url = url;
				if (attachType == 'attach') {
					attachments[0].type = 'lesson';
				} else if (attachType == 'attachAsg') {
					attachments[0].type = 'attachAsg';
				} else if (attachType == 'attachAst') {
					attachments[0].type = 'attachAst';
				} else {
					attachments[0].type = attachType;
				}
				attachments[0].fileType = "drive";
				attachments[0].id = id;
			} else {
				var	newPos = attachments.length;
				attachments[newPos] = new Object();
				attachments[newPos].filename = fileName;
				attachments[newPos].privateFlag = "N";
				attachments[newPos].url = url;
				if (attachType == 'attach') {
					attachments[newPos].type = 'lesson';
				} else if (attachType == 'attachAsg') {
					attachments[newPos].type = 'attachAsg';
				} else if (attachType == 'attachAst') {
					attachments[newPos].type = 'attachAst';
				} else {
					attachments[newPos].type = attachType;
				}
				attachments[newPos].fileType = "drive";
				attachments[newPos].id = id;
			}
			
			$('#'+attachType+'Table').show();
			loadAttachmentsTable();
		}
	}
	
	$('#googleDrive').click(function() {
		driveAttachments($('#driveFileName').html(), $('#driveURL').html(), $('#driveType').html(), $('#driveID').html());
	});

	function loadAssignmentsArray(data) {
		
		assignments = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				assignments[x] = new Object();
				if (data[x].assignmentTitle == "") {
					assignments[x].assignmentTitle = "Untitled Assignment";
				} else {
					assignments[x].assignmentTitle = data[x].assignmentTitle;
				}
				assignments[x].assignmentId = data[x].assignmentId;
			}
		} else {
			assignments = null;
		}
		
	}

	function getAssignmentsText() {

		var assignmentsText = '';
		var ls = '';		

		if (assignments != null) {
			for (var x=0; x<assignments.length; x++) {
				ls = '<div style="padding-left:3px;" class="lessonAssignment" id="lessonAssignment' + assignments[x].assignmentId + '">' + assignments[x].assignmentTitle + '</div>';
				assignmentsText = assignmentsText + ls;
			}
		}

		return assignmentsText;
	}

	function loadAssessmentsArray(data) {
		
		assessments = new Array();

		if (data != null && data.length > 0) {
			for (var x=0; x<data.length; x++) {
				assessments[x] = new Object();
				if (data[x].assessmentTitle == "") {
					assessments[x].assessmentTitle = "Untitled Assessment";
				} else {
					assessments[x].assessmentTitle = data[x].assessmentTitle;
				}
				assessments[x].assessmentId = data[x].assessmentId;
			}
		} else {
			assessments = null;
		}
		
	}

	function getAssessmentsText() {

		var assessmentsText = '';
		var ls = '';		

		if (assessments != null) {
			for (var x=0; x<assessments.length; x++) {
				ls = '<div style="padding-left:3px;" class="lessonAssessment" id="lessonAssessment' + assessments[x].assessmentId + '">' + assessments[x].assessmentTitle + '</div>';
				assessmentsText = assessmentsText + ls;
			}
		}

		return assessmentsText;
	}
	
	$('#lessonChangeClass').click(function() {
		$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
		changePickClass = true;
	});
	
	$('#lessonChangeUnit').click(function() {
		$('#pickUnit').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
		changePickUnit = true;
	});

	$('#listTablePM').click(function() {
		if ($('#listTablePM').html() == "Show Detail") {
			$('.listTableHS').show();
			$('.listTablePM').html("-");
			$('#listTablePM').html("Hide Detail")
		} else {
			$('.listTableHS').hide();
			$('.listTablePM').html("+");
			$('#listTablePM').html("Show Detail")
		}
		todayLessonPos = 0;
	});
	
	$('.listTablePM').live('click', function() {
		var rowPos = this.id.substring(11);
		if ($('#listTablePM'+rowPos).html() == "+") {
			$('.listTableHS'+rowPos).show();
			$('#listTablePM'+rowPos).html("-")
		} else {
			$('.listTableHS'+rowPos).hide();
			$('#listTablePM'+rowPos).html("+")
		}
	});

	$('#fromTablePM').click(function() {
		if ($('#fromTablePM').html() == "Show Detail") {
			$('.fromTableHS').show();
			$('#fromTablePM').html("Hide Detail")
		} else {
			$('.fromTableHS').hide();
			$('#fromTablePM').html("Show Detail")
		}
		todayFromLessonPos = 0;
	});
	
	$('#toTablePM').click(function() {
		if ($('#toTablePM').html() == "Show Detail") {
			$('.toTableHS').show();
			$('#toTablePM').html("Hide Detail")
		} else {
			$('.toTableHS').hide();
			$('#toTablePM').html("Show Detail")
		}
		todayToLessonPos = 0;
	});
	
	function getSharedLine(data) {
		
		var sharedLine = "";
		if (data.collaborateSubjectId == 0) {
			sharedLine = data.classId + data.sequence;
		} else {
			sharedLine = data.collaborateSubjectId + data.sequence;
		}
		return sharedLine;
		
	}

	$('#plansHS').click(function() {
		if (plansHS == true) {
			$('.plansHS').hide();
			$('.listTableHS').hide();
			$('.listTablePM').html("+");
			$('.eventHS').hide();
			plansHS = false;
			$('#plansHS').html('<img src="images/showwhite.png">');
		} else {
			$('.plansHS').show();
			$('.listTableHS').show();
			$('.listTablePM').html("-");
			$('.eventHS').show();
			plansHS = true;
			$('#plansHS').html('<img src="images/hidewhite.png">');
		}
	});

	$('#checkAll').click(function() {
		 $('.checkDel').prop('checked', this.checked);
	});
	
	$('#closeAttachOrEmbed').click(function() {
		hideBox('#attachOrEmbed', 30);
	});
	
	$('#closeEmbedImgTab').click(function() {
		hideBox('#embedImgTab', 30);
	});
	
	$('#disconnectGoogle').click(function() {
		showBox('#disconnectGoogleBox', 30);
	});
	
	$('#disconnectGoogleCancel').click(function() {
		hideBox('#disconnectGoogleBox', 30);
	});
	
	$('#notesButton').click(function(e) {

		if (userMode == "S") {
			$('#studentNotesDisplay').html(studentNotes);
			$('#viewStudentNotesBox').show();
			$('#editStudentNotesBox').hide();
			$('#editStudentNotes').hide();
			$('#deleteStudentNotes').hide();
			$('#printStudentNotes').hide();
			showBox('#studentNotesBox', 0)
		} else {
			
			if ($('#notesList').css('display') == 'none') {
				hideLists();
				$('#notesList').css({'top':$(this).offset().top+35,'left':$(this).offset().left}).show();
			} else {
				$('#notesList').hide()
			}			
		}
		
		if (e.stopPropagation) {
			e.stopPropagation();
		} else {
			e.cancelBubble = true;
		}

	});
	
	function getUnitNum(unitId) {
		var unitNum = "";
		if (unitId != 0) {
			for (var y=0; y<classUnits.length; y++) {
				if (unitId == classUnits[y].unitId) {
					unitNum = classUnits[y].unitNum;
					break;
				}
			}
		}
		
		if (unitId != 0 && unitNum == "") {unitNum = "Unit";}
		
		return unitNum;
		
	}
	
	$('#customClass').change(function() {

		loadClassUnits();
	
	});
	
	function loadClassUnits() {
		
		$('#lessonUnit').html('<option value="0">Select Unit</option>');
		for (var y=0; y<classUnits.length; y++) {
			if ($('#customClass').val() == classUnits[y].classId) {
				var unitNumLabel = "";
				if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
				$('#lessonUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
			}
		}
		
	}
	
	$('#printUnit').click(function(e) {
		$('#printUnitId').val(currentUnitId);	
		$('#printForm').submit();
	});
	
	$('#closeMyFilesPicker').click(function() {
		hideBox('#myFilesPickerBox', 30);
	});
	
	$('.myFilesPicker').click(function() {
		showBox('#myFilesPickerBox', 30);
		tempMyFiles = null;
		myFiles = null;
		$.post('getAttachmentList', 'teacherId='+userInfo.userId, loadMyFilesPickerList, 'json');
	});
	
	function loadMyFilesPickerList(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
			return;
		} else if (data.error == "true") {
			showErrorMsg();
			return;
		}
		
		$('#myFilesPickerListBody').html('');
		$('.myFilesRowPart').css({'background-color':'white'});
		var ls;
		for (var i = 0; i < data.fileList.length; i++) {
			var id = 'picker'+i;
			ls = '<tr class="myFilesRow" id="'+id+'"><td class="myFilesRowPart" id="'+id+'part">'+data.fileList[i].fileKey+'</td>';
			ls = ls + '<td class="myFilesRowPart " id="'+id+'fileType" style="display:none;">'+data.fileList[i].fileType+'</td>';
			ls = ls + '<td class="myFilesRowPart" id="'+id+'url" style="display:none;">'+data.fileList[i].fileUrl+'</td></tr>';
			
			$('#myFilesPickerListBody').append(ls);
			
			if (attachments != null) {
				for (var x=0; x < attachments.length; x++) {
					if (attachments[x].filename == data.fileList[i].fileKey && $('#'+id).hasClass('toggleRowColor') == false) {
						$('#'+id).toggleClass('toggleRowColor');
					}
				}
			}
		}
	}
	
	$('.myFilesRow').live('click', function() {
		var myFile = this.id;
		if (tempMyFiles == null) {
			tempMyFiles = new Array();
			tempMyFiles[0] = new Object();
			tempMyFiles[0].desc = $('#'+myFile+'part').html();
			tempMyFiles[0].id = myFile;
			if (attachType == 'attach') {
				tempMyFiles[0].type = 'lesson';
			} else if (attachType == 'attachAsg') {
				tempMyFiles[0].type = 'attachAsg';
			} else if (attachType == 'attachAst') {
				tempMyFiles[0].type = 'attachAst';
			} else {
				tempMyFiles[0].type = attachType;
			}
			tempMyFiles[0].fileType = $('#'+myFile+'fileType').html();
			tempMyFiles[0].url = $('#'+myFile+'url').text();
			$('#'+myFile).toggleClass('toggleRowColor');
		} else {
			var found = false;
			var x = 0;
			// check if already exists in array and then remove
			while (x < tempMyFiles.length && found == false) {
				if (myFile == tempMyFiles[x].id) {
					$('#'+myFile).toggleClass('toggleRowColor');
					found = true;
					tempMyFiles.splice(x, 1);
				} else {
					x++;
				}
			}
			
			if (found == false) {
				var newPos = tempMyFiles.length;
				tempMyFiles[newPos] = new Object();
				tempMyFiles[newPos].desc = $('#'+myFile+'part').html();
				tempMyFiles[newPos].id = myFile;
				if (attachType == 'attach') {
					tempMyFiles[newPos].type = 'lesson';
				} else if (attachType == 'attachAsg') {
					tempMyFiles[newPos].type = 'attachAsg';
				} else if (attachType == 'attachAst') {
					tempMyFiles[newPos].type = 'attachAst';
				} else {
					tempMyFiles[newPos].type = attachType;
				}
				tempMyFiles[newPos].fileType = $('#'+myFile+'fileType').html();
				tempMyFiles[newPos].url = $('#'+myFile+'url').text();
				$('#'+myFile).toggleClass('toggleRowColor');
			}
		}
	});
	
	$('#applyMyFilesPicker').click(function() {
		
		hideBox('#myFilesPickerBox', 30);

		$('#attachOrEmbedBody').html('');
		var x = 0;
		
		if (tempMyFiles != null) {
			while (x < tempMyFiles.length) {
				if (tempMyFiles[x].fileType == "image") {
					if (myFiles == null || myFiles.length < 0) {
						myFiles = new Array();
						myFiles[0] = new Object();
						myFiles[0].filename = tempMyFiles[x].desc;
						myFiles[0].privateFlag = "N";
						myFiles[0].url = tempMyFiles[x].url;
						if (attachType == 'attach') {
							myFiles[0].type = 'lesson';
						} else if (attachType == 'attachAsg') {
							myFiles[0].type = 'attachAsg';
						} else if (attachType == 'attachAst') {
							myFiles[0].type = 'attachAst';
						} else {
							myFiles[0].type = attachType;
						}
						myFiles[0].fileType = tempMyFiles[x].fileType;
					} else {
						var	newPos = myFiles.length;
						myFiles[newPos] = new Object();
						myFiles[newPos].filename = tempMyFiles[x].desc;
						myFiles[newPos].privateFlag = "N";
						myFiles[newPos].url = tempMyFiles[x].url;
						if (attachType == 'attach') {
							myFiles[newPos].type = 'lesson';
						} else if (attachType == 'attachAsg') {
							myFiles[newPos].type = 'attachAsg';
						} else if (attachType == 'attachAst') {
							myFiles[newPos].type = 'attachAst';
						} else {
							myFiles[0].type = attachType;
						}
						myFiles[newPos].fileType = tempMyFiles[x].fileType;
					}
					
				} else {
					if (attachments == null) {
						attachments = new Array();
						attachments[0] = new Object();
						attachments[0].filename = tempMyFiles[x].desc;
						attachments[0].privateFlag = "N";
						attachments[0].url = tempMyFiles[x].url;
						if (attachType == 'attach') {
							attachments[0].type = 'lesson';
						} else if (attachType == 'attachAsg') {
							attachments[0].type = 'attachAsg';
						} else if (attachType == 'attachAst') {
							attachments[0].type = 'attachAst';
						} else {
							attachments[0].type = attachType;
						}
						attachments[0].fileType = tempMyFiles[x].fileType;
					} else {
						var	newPos = attachments.length;
						attachments[newPos] = new Object();
						attachments[newPos].filename = tempMyFiles[x].desc;
						attachments[newPos].privateFlag = "N";
						attachments[newPos].url = tempMyFiles[x].url;
						if (attachType == 'attach') {
							attachments[newPos].type = 'lesson';
						} else if (attachType == 'attachAsg') {
							attachments[newPos].type = 'attachAsg';
						} else if (attachType == 'attachAst') {
							attachments[newPos].type = 'attachAst';
						} else {
							attachments[newPos].type = attachType;
						}
						attachments[newPos].fileType = tempMyFiles[x].fileType;
					}
				}
				x++;
			}
		}
		
		if (myFiles != null) {
			for (var x = 0; x<myFiles.length; x++) {
				$('#attachOrEmbedBody').append(myFiles[x].filename+'<br />');
			}
			showBox('#attachOrEmbed', 30);
		}
		
		if (attachments != null) {
			$('#'+attachType+'Table').show();
			loadAttachmentsTable();
		}
	});
	
	$('#myFilesButton').click(function() {
		browserButton = false;
		window.location.hash = "myfiles";
		showMyFiles();
	});
	
	function showMyFiles() {
		hideMessage();
		hideAll();
		tempMyFiles = null;
		attachType = "myFiles";
		
		var fromHeight = $(window).height() - 220;
		if (fromHeight < 200) {fromHeight = 200;}
		$('#listMyFilesBox').css({'height':fromHeight+'px'});
		
		$('#myFilesView').show();
		showLoading();
		$.post('getAttachmentList', 'teacherId='+userInfo.userId, loadMyFilesList, 'json');
	}
	
	function loadMyFilesList(data) {
		
		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
			return;
		} else if (data.error == "true") {
			showErrorMsg();
			return;
		}
		
		fileNameChanged = false;
		$('#myFilesBody').html('');
		for (var i = 0; i < data.fileList.length; i++) {
			var id = i;
			var ls = '<tr class="myFilesBoxRow pickRow" id="myFiles'+id+'" style="cursor:pointer;">';
			ls = ls + '<td class="slCell myFilesName" style="text-align:left;" id="myFiles'+id+'part">'+data.fileList[i].fileKey+'</td>';
			ls = ls + '<td class="srCell" style="text-align:right; padding-right:10px;">'+data.fileList[i].fileSize+'</td>';
			ls = ls + '<td class="srCell" style="text-align:right; padding-right:10px;">'+data.fileList[i].fileDate+'</td>';
			ls = ls + '<td id="myFiles'+id+'fileType" style="display:none;">'+data.fileList[i].fileType+'</td>';
			ls = ls + '<td id="myFiles'+id+'url" style="display:none;">'+data.fileList[i].fileUrl+'</td></tr>';
			$('#myFilesBody').append(ls);
		}
		$('#myFilesTotalLength').html(data.totalLength);
		$('#myFilesTotalBytes').html(data.totalBytes);
		hideLoading();
	}
	
	$('.myFilesBoxRow').live('click', function() {
		oldFileName = $('#' + this.id + 'part').text()
		$('#myFileName').val(oldFileName);
		clearNotification('#myFileErrorMsg');
		showBox('#editMyFileBox', 10);
	});
	
	$('#deleteMyFilesButton').click(function() {
		showBox('#myFilesAttachmentsWarning', 30);
	});
	
	$('#deleteMyFiles').click(function() {
		hideBox('#myFilesAttachmentsWarning', 30);
		jsonInfo = new Object();
		jsonInfo.teacherId = userInfo.userId;
		jsonInfo.fileNames = new Array();
		jsonInfo.fileNames[0] = $.trim($('#myFileName').val());
		clearNotification('#myFileErrorMsg');
		if (jsonInfo.fileNames[0] == "") {
			showNotification('#myFileErrorMsg', "Please enter a file name");
		} else {
			showLoading();
			$.post('deleteAttachment', jsonInfo, myFilesDeleteEdit.bind(null, "delete"), 'json');
		}
	});
	
	$('#closeDeleteMyFiles').click(function() {
		hideBox('#myFilesAttachmentsWarning', 30);
	});
	
	$('#renameMyFilesButton').click(function() {
		jsonInfo = new Object();
		jsonInfo.oldFileName = oldFileName;
		jsonInfo.newFileName = $.trim($('#myFileName').val());
		jsonInfo.teacherId = userInfo.userId;
		clearNotification('#myFileErrorMsg');
		if (jsonInfo.newFileName == "") {
			showNotification('#myFileErrorMsg', "Please enter a file name");
		} else if (jsonInfo.newFileName == oldFileName) {
			showNotification('#myFileErrorMsg', "Please enter a new file name");
		} else {
			showLoading();
			$.post('updateAttachment', jsonInfo, myFilesDeleteEdit.bind(null, "update"), 'json');
		}
	});
	
	function myFilesDeleteEdit(m, data) {
		hideLoading();
		if (data.message == "success") {
			hideBox('#editMyFileBox', 10);
			haveWeeks = false;
			haveMonth = false;
			haveList = false;
			haveSearch = false;
			haveAssessments = false;
			haveAssignments = false;
			fileNameChanged = false;
			$('#myFilesButton').trigger('click');
		} else if (m == "update"){
			showErrorBox('Sorry, an error occurred. Your file was not uploaded.');
		} else {
			showErrorBox('Sorry, an error occurred. Your files were not deleted.');
		}
	}

	function validateStartEndDates(start, end) {
		if (Date.parse(formatDateToSave($(start).val())) > Date.parse(formatDateToSave($(end).val())) || $.trim($(end).val()) == '') {
			$(end).val($(start).val());
		}
	}
	
	$('#assessmentStart, #assessmentEnd').change(function() {	
		validateStartEndDates('#assessmentStart', '#assessmentEnd');
	});
	
	$('#assignmentStart, #assignmentEnd').change(function() {	
		validateStartEndDates('#assignmentStart', '#assignmentEnd');
	});
	
	$('#printStartDate, #printEndDate').change(function() {	
		validateStartEndDates('#printStartDate', '#printEndDate');
	});
	
	$('#applyClassShift').click(function() {
		hideBox('#shiftClassWarning', 30);
		showLoading();
		$.post('updateClass', classInfo, loadClassList, "json");
	});
	
	$('#cancelClassShift').click(function() {
		hideBox('#shiftClassWarning', 30);
	});
	
	$('#applyYearShift').click(function() {
		hideBox('#shiftYearWarning', 30);
		showLoading();
		$.post('updateSettings', userInfo, settingsUpdated, "json");
	});

	$('#cancelYearShift').click(function() {
		hideBox('#shiftYearWarning', 30);
	});

	$('div.allStIDs').live('mouseenter', function() {
		if (!$('#CBallStText').prop('checked')) {
			$('#standardsDesc').html($('#'+this.id+'desc').html());
			$('#standardsDesc').css({'top':$(this).offset().top+30,'left':$(this).offset().left-20}).delay(600).show(0);
		}
	});
	
	$('div.allStIDs').live('mouseleave', function() {
		$('#standardsDesc').html('');
		$('#standardsDesc').hide(0);
	});
	
	$('#standardsSettingsStateButton').click(function() {		
		showStateStandardsBox();
	});

	function showStateStandardsBox() {
		tempStatesSelected = new Array();
		$('.stateRow').removeClass('toggleRowColor');
		if (statesSelected != null && statesSelected.length > 0) {
			for (var x=0; x<statesSelected.length; x++) {
				tempStatesSelected[x] = statesSelected[x];
				$('#stateRow'+statesSelected[x]).addClass('toggleRowColor');
			}
		}
		showBox('#stateStandardsSettingsBox', 30);
	}	

	$('#standardsSettingsSubjectButton').click(function() {		
		showSubjectStandardsBox();
	});
	
	function showSubjectStandardsBox() {
		tempSubjectsSelected = new Array();
		$('.subjectRow').removeClass('toggleRowColor');
		if (subjectsSelected != null && subjectsSelected.length > 0) {
			for (var x=0; x<subjectsSelected.length; x++) {
				tempSubjectsSelected[x] = subjectsSelected[x];
				$('#subjectRow'+subjectsSelected[x]).addClass('toggleRowColor');
			}
		}
		showBox('#subjectStandardsSettingsBox', 30);
	}
	
	$('#closeStateSettings, #closeSubjectSettings').click(function() {
		var box = '';
		if (this.id == "closeStateSettings") {
			box = '#stateStandardsSettingsBox';
		} else {
			box = '#subjectStandardsSettingsBox';
		}
		
		hideBox(box, 30);
	});
	
	$('#applyStateSettings').click(function() {

		jsonInfo = new Object();
		jsonInfo.stateIds = "";

		for (var x=0; x<tempStatesSelected.length; x++) {
			if (jsonInfo.stateIds != "") {jsonInfo.stateIds += ",";}
			jsonInfo.stateIds += tempStatesSelected[x];
		}
		
		$.post('updateShowStates', jsonInfo, savedStateStandards, 'json');

	});
		
	$('#applySubjectSettings').click(function() {

		jsonInfo = new Object();
		jsonInfo.stateId = userInfo.currentState;
		jsonInfo.subjectIds = "";

		for (var x=0; x<tempSubjectsSelected.length; x++) {
			if (jsonInfo.subjectIds != "") {jsonInfo.subjectIds += ",";}
			jsonInfo.subjectIds += tempSubjectsSelected[x];
		}
		
		$.post('updateShowSubjects', jsonInfo, savedSubjectStandards, 'json');

	});
	
	function savedSubjectStandards(data) {

		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			$('#closeSubjectSettings').trigger('click');
			if (tempSubjectsSelected != null && tempSubjectsSelected.length > 0) {
				userInfo.currentSubject = tempSubjectsSelected[0];
				searchShowAll = false;
				getStandards();
			}
		}
	}
	
	function savedStateStandards(data) {
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {

			$('#closeStateSettings').trigger('click');
			
			statesSelected = new Array();
			if (tempStatesSelected != null && tempStatesSelected.length > 0) {
				for (var y=0; y<tempStatesSelected.length; y++) {
					statesSelected[y] = tempStatesSelected[y]; 
				}
			}
			
			$('#state').html("");
			$('#reportState').html("");
			$('#gradeReportStandardState').html("");
			
			if (userInfo.hasStandards != null && userInfo.hasStandards == "Y") {
				$('#state').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
				$('#reportState').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
				$('#gradeReportStandardState').append('<option value="' + userInfo.schoolId + '">School - ' + userInfo.schoolLabel + '</option>');
			}
			
			if (userInfo.districtId != null && userInfo.districtId != 0) {
				$('#state').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
				$('#reportState').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
				$('#gradeReportStandardState').append('<option value="' + userInfo.districtId + '">District - ' + userInfo.districtName + '</option>');
			}
			
			if (standardStates != null && standardStates.length > 0 && tempStatesSelected != null && tempStatesSelected.length > 0) {
				for (var x=0; x<standardStates.length; x++) {
					for (var y=0; y<tempStatesSelected.length; y++) {
						if (standardStates[x].id == tempStatesSelected[y]) {
							$('#state').append('<option value="' + standardStates[x].id + '">' + standardStates[x].name + '</option>');
							$('#reportState').append('<option value="' + standardStates[x].id + '">' + standardStates[x].name + '</option>');
							$('#gradeReportStandardState').append('<option value="' + standardStates[x].id + '">' + standardStates[x].name + '</option>');
						}
					}
				}

				$('#state').val(tempStatesSelected[0]);
				$('#state').trigger('change');
			}
		}
	}
	
	$('.stateRow').live('click', function() {

		var stId = this.id.substring(8);
		
		$('#'+this.id).toggleClass('toggleRowColor');

		if (tempStatesSelected == null) {
		
			tempStatesSelected = new Array();
			tempStatesSelected[0] = stId;

		} else {
		
			var found = false;
			var x = 0;
			// check if already exists in array and then remove
			while (x < tempStatesSelected.length && found == false) {
				if (stId == tempStatesSelected[x]) {
					found = true;
					tempStatesSelected.splice(x, 1);
				} else {
					x++;
				}
			}
			
			if (found == false) {
				var newPos = tempStatesSelected.length;
				tempStatesSelected[newPos] = stId;
			}
		}				
		
	});

	$('.subjectRow').live('click', function() {

		var suId = this.id.substring(10);
		
		$('#'+this.id).toggleClass('toggleRowColor');
		
		if (tempSubjectsSelected == null) {

			tempSubjectsSelected = new Array();
			tempSubjectsSelected[0] = suId;

		} else {

			var found = false;
			var x = 0;
			// check if already exists in array and then remove
			while (x < tempSubjectsSelected.length && found == false) {
				if (suId == tempSubjectsSelected[x]) {
					found = true;
					tempSubjectsSelected.splice(x, 1);
				} else {
					x++;
				}
			}
			
			if (found == false) {
				var newPos = tempSubjectsSelected.length;
				tempSubjectsSelected[newPos] = suId;
			}
		}
		
	});
	
	$('#clearSubjectSettings, #clearStateSettings').click(function() {
		var x = 0;
		if (this.id == 'clearSubjectSettings') {
			tempSubjectsSelected = new Array();
			$('.subjectRow').removeClass('toggleRowColor');
		} else {
			tempStatesSelected = new Array();
			$('.stateRow').removeClass('toggleRowColor');
		}
	});
	
	// save View preferences
	$('#saveViewButton').click(function () {
		viewPref = new Object();
		
		// add the items
		var displayItems = "";
		for (var x=0; x<itemCount; x++) {
			var CBpId = '#CB' + partId[x];
			if ($(CBpId).prop('checked')) {
				displayItems = displayItems + "Y";
			} else {
				displayItems = displayItems + "N";
			}
		}
		viewPref.displayItems = displayItems;
		
		// add list of class IDs
		var z = 0;
		var first = true;
		var hideString = "";
		$('.CBclassItem:checkbox:not(:checked)').each(function() {
			var dCId = this.id.substring(5);
			if (first) {
				hideString = dCId;
				first = false;
			} else {
				hideString = hideString+','+dCId;
			}
		});
		
		viewPref.hideClassIds = hideString;
		
		// add preferred view
		viewPref.displayView = lessonView;
		
		// add current class id for List view
		viewPref.displayListClassId = currentClassId;
		
		action = "updateView";
		$.post('updateViewPreferences', viewPref, savedViewPreferences, 'json');

	});
	
	function savedViewPreferences(data) {
		showAction();
	};
	
	function fadeBox(boxName, boxZindex) {

		var windowHt = parseInt($(window).height(),10);
		var boxHt = parseInt($(boxName).height(),10);
		var newTop = parseInt($(document).scrollTop(),10);
		if (windowHt < boxHt) {
			newTop = newTop + 5;
		} else {
			newTop = newTop + ((windowHt-boxHt)/2);
		}

		var windowWidth = parseInt($(document).width(),10);
		var boxWidth = parseInt($(boxName).width(),10);
		var newLeft = 0;
		if (windowWidth < boxWidth) {
			newLeft = newLeft + 5;
		} else {
			newLeft = newLeft + ((windowWidth - boxWidth)/2);
		}
		
		$(boxName).css({top:newTop+'px', left:newLeft+'px'}).show().delay(1500).fadeOut();
	}
	
	function loadCurrentStandards(id) {
		
		var pos = 0;
		for (var z=0;z<classId.length;z++) {
			if (classId[z]==id) {
				pos = z;
			}
		}

		if (currentStandards[pos].state != null && currentStandards[pos].state != "null" && currentStandards[pos].subject != null && currentStandards[pos].subject != "null" &&
			(currentStandards[pos].state != userInfo.currentState || currentStandards[pos].grade != userInfo.currentGrade || currentStandards[pos].subject != userInfo.currentSubject)) {
			
			// check if the current class standards are in a selected state
			var inStateList = false;
			if (statesSelected != null && statesSelected.length > 0) {
				for (var x=0; x<statesSelected.length; x++) {
					if (currentStandards[pos].state == statesSelected[x]) {
						inStateList = true;
						break;
					}
				}	
			}
			
			if (inStateList) {
				userInfo.currentState = currentStandards[pos].state;
				userInfo.currentSubject = currentStandards[pos].subject;
				userInfo.currentGrade = currentStandards[pos].grade;
				searchShowAll = false;
				getStandards();
			}

		}
	}
	
	// sortable list for Lesson Sections
	$(function() {
	    $( "#sortableSection" ).sortable();
	});
	
	$(function() {
	    $( "#adminSortableSection" ).sortable();
	});
	
	$(function() {
	    $( "#newSortableSection" ).sortable();
	});

	$('#addStudentButton').click(function() {
		if (userInfo.schoolId != null && userInfo.schoolId != 0 && $('#listStudentBox').html() == "") {
			showBox('#newStudentWarning', 30);
		} else {
			addStudent();
		}
	});
	
	$('#applyNewStudentWarning').click(function() {
		hideBox('#newStudentWarning', 30);
		addStudent();
	});

	$('#cancelNewStudentWarning').click(function() {
		hideBox('#newStudentWarning', 30);
	});

	$('#applyNewStudentWarning2').click(function() {
		hideBox('#newStudentWarning2', 30);
		addStudent();
	});

	$('#cancelNewStudentWarning2').click(function() {
		hideBox('#newStudentWarning2', 30);
	});
	
	function addStudent() {
			
		currentStudentId = '';
		
		action = "newStudent";
		$('#studentAction').hide();
	
		clearNotification('#studentErrorMsg');
		
		$('#studentCode').val('');	
		$('#studentFirstName').val('');
		$('#studentMiddleName').val('');
		$('#studentLastName').val('');
		$('#studentEmailAddress').val('');
		$('#parentEmailAddress').val('');
		$('#studentPhoneNumber').val('');
		$('#studentBirthDate').val('');
		$('#studentPassword').val('');	
		$('#gradeLevel').val($('#pickGradeLevel').data('selected-level'));
		
		showBox('#editStudentBox', 10);
		
		$('#studentCode').focus();	
	
	}
	
	$('.listStudentItem').live('click', function() {
		
		currentStudentId = this.id;
		
		action = "updateStudent";
		$('#studentAction').show();
		
		clearNotification('#studentErrorMsg');
	
		$('#studentCode').val($('#' + currentStudentId + '1').html());	
		$('#studentFirstName').val($('#' + currentStudentId + '2').html());
		$('#studentMiddleName').val($('#' + currentStudentId + '8').html());
		$('#studentLastName').val($('#' + currentStudentId + '3').html());
		$('#studentEmailAddress').val($('#' + currentStudentId + '4').html());
		$('#parentEmailAddress').val($('#' + currentStudentId + '9').html());
		$('#studentPhoneNumber').val($('#' + currentStudentId + '5').html());
		$('#studentBirthDate').val($('#' + currentStudentId + '6').html());
		$('#studentPassword').val($('#' + currentStudentId + '7').html());	
		$('#gradeLevel').val($('#' + currentStudentId + '10').html());
		
		showBox('#editStudentBox', 10);
	
		$('#studentCode').focus();
		
	});
	
	$('.listStudentItem2').live('click', function() {
		var studentId = this.id;
		$('#studentCode2').html($('#' + studentId + '1').html());	
		$('#studentFirstName2').html($('#' + studentId + '2').html()); 
		$('#studentMiddleName2').html($('#' + studentId + '8').html());
		$('#studentLastName2').html($('#' + studentId + '3').html());
		$('#studentEmailAddress2').html($('#' + studentId + '4').html());
		$('#parentEmailAddress2').html($('#' + studentId + '9').html());
		$('#studentPhoneNumber2').html($('#' + studentId + '5').html());
		$('#studentBirthDate2').html($('#' + studentId + '6').html());
		$('#studentPassword2').html($('#' + studentId + '7').html());	
		$('#gradeLevel2').html($('option[value="' + $('#' + currentStudentId + '10').html() + '"]'));
		showBox('#showStudentBox', 10);
	});
		
		
	$('#applyStudent').click(function() {
	
		var valError = false;
		clearNotification('#studentErrorMsg');
	
		var bDate = formatDateToSave($('#studentBirthDate').val());
		if (bDate != "") {
	 		if (valDate(bDate) == false) {
	 			valError = true;
	 			showNotification('#studentErrorMsg', 'Please enter a valid birth date');
	 		}
		}
	
		if ($.trim($('#studentFirstName').val()) == '') {
			valError = true;
			showNotification('#studentErrorMsg', "Please enter student's first name");
		}
		
		if ($.trim($('#studentLastName').val()) == '') {
			valError = true;
			showNotification('#studentErrorMsg', "Please enter student's last name");
		}
		
		if (valError == false) {
			applyStudent();
		}
		
	});
	
	function applyStudent() {
		
		studentInfo = new Object ();
		studentInfo.studentCode = $.trim($('#studentCode').val());
		studentInfo.studentPassword = $.trim($('#studentPassword').val());
		studentInfo.studentFirstName = $.trim($('#studentFirstName').val());
		studentInfo.studentMiddleName = $.trim($('#studentMiddleName').val());
		studentInfo.studentLastName = $.trim($('#studentLastName').val());
		studentInfo.studentEmailAddress = $.trim($('#studentEmailAddress').val());
		studentInfo.parentEmailAddress = $.trim($('#parentEmailAddress').val());
		studentInfo.studentPhoneNumber = $.trim($('#studentPhoneNumber').val());
		studentInfo.studentBirthDate = $.trim($('#studentBirthDate').val());
		studentInfo.studentGradeLevel = $('#gradeLevel').val();
		studentInfo.gradeLevel =  $('#pickGradeLevel').data('selected-level');
		studentInfo.studentDistrictId = 0;
		studentInfo.userMode = userMode;
		
		if (paymentNeeded == false) {
			showLoading();
			if (action == "newStudent") {
				$.post('addStudentServlet', studentInfo, loadStudents, "json");
			} else {
				studentInfo.studentId = currentStudentId.substr(2);
				$.post('updateStudentServlet', studentInfo, loadStudents, "json");
			}
		} else {
			showExpiredMsg();
		}
	
	}
	
	$('#deleteStudent').click(function() {
		action = 'deleteStudent';
		deleteStudent();
	});
	
	function deleteStudent() {
	
		jsonInfo = new Object();
		jsonInfo.studentId = currentStudentId.substr(2);
		jsonInfo.userMode = userMode;
		
		if (paymentNeeded == false) {
			action = 'deleteStudent';
			showLoading();
			$.getJSON('deleteStudentServlet', jsonInfo, loadStudents);
		} else {
			showExpiredMsg();
		}
		
	}
	
	$('#cancelStudent').click(function() {
		hideBox('#editStudentBox', 10);
	});
	
	$('#closeStudent').click(function() {
		hideBox('#editStudentBox', 10);
	});
	
	function loadStudents(data) {
	
		hideLoading();
	
		var fromHeight = $(window).height() - 300;
		if (fromHeight < 200) {fromHeight = 200;}
		$('#listStudentBox').css({'height':fromHeight+'px'});
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				if (data.existingEmail == "true" || data.existingEmail == true) {
					showNotification('#studentErrorMsg', "Email Address is already in use");
				} else if (data.existingStudentCode == "true" || data.existingStudentCode == true) {
					showNotification('#studentErrorMsg', "Please select a unique Student Key");
				} else {
					showErrorMsg();
				}
			} else {
	
				currentStudentClassId = '';
				studentTeacherPicked = '';
				
				haveStudentsForPerformanceReport = false;
				haveSchoolStudentsForGradesView = false;
				haveStudents = true;
				hideBox('#editStudentBox', 10);
				hideBox('#importBoxStudent', 10);
				
				$('#listStudentBox').html("");
		
				if (data.students != null) {
		
					for (var x=0; x<data.students.length; x++) {
		
						var ls = '';
						
						if (userMode == "A") {

							ls = '<div class="listStudentItem" style="cursor:pointer;" id="st' + data.students[x].studentId + '">';
							ls = ls + '<span id="st' + data.students[x].studentId + '3">' + data.students[x].lastName + '</span>, ';
							ls = ls + '<span id="st' + data.students[x].studentId + '2">' + data.students[x].firstName + '</span>';

						} else {
							ls = '<div class="listStudentItem' + (data.students[x].authorType == "S" ? '2' : '')  + '" style="cursor:pointer;" id="st' + data.students[x].studentId + '">';
							ls = ls + '<table style="border-collapse:collapse;"><tr><td><div class="' + (data.students[x].authorType == "S" ? 's' : 't')  + 'Student">' + data.students[x].authorType + '</div></td><td>';
							ls = ls + '<span id="st' + data.students[x].studentId + '3">' + data.students[x].lastName + '</span>, ';
							ls = ls + '<span id="st' + data.students[x].studentId + '2">' + data.students[x].firstName + '</span>';
							
							ls = ls + '</td></tr></table>';
						}
						
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '1">' + data.students[x].code + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '4">' + data.students[x].emailAddress + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '5">' + data.students[x].phoneNumber + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '6">' + formatDateToShow(data.students[x].birthDate) + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '7">' + data.students[x].studentPassword + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '8">' + data.students[x].middleName + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '9">' + data.students[x].parentEmailAddress + '</p>';
						ls = ls + '<p style="display:none;" id="st' + data.students[x].studentId + '10">' + data.students[x].gradeLevel + '</p>';
						
						ls = ls + '</div>';

						$('#listStudentBox').append(ls);
						
					}
				}
	
				if (action == "getStudents") {
					showStudents();
				} else {
					haveCommentTo = false;
					showAction();
				}
			}
		}		
	}
	
	$('#studentNavButton, #adminStudentButton').click(function() {
		browserButton = false;
		window.location.hash = "student";
		showStudents();
	});	

	$('.gotoStudents').live('click', function(e) {
		browserButton = false;
		window.location.hash = "student";
		showStudents();
	});
	
	$('.gradeLevelPicker').click(function() {
		$('.selectedGradeLevel').text($(this).text());
		var oldLevel = $('#pickGradeLevel').data('selected-level');
		var newLevel = '' + $(this).data('level');
		changePickGradeLevel = true;
		gradeLevelChanged = true;
		if (oldLevel != newLevel) {
			var es = $('#pickGradeLevel').data('event-source');
			$('#pickGradeLevel').data('selected-level', newLevel);
			if (es == 'TAV') {
				haveStudents = false;
				showAdminAssignStudents();
			} else if (es == 'SAV') {
				showAssignStudents();
			} else if (es == 'SSG') {
				filterSchoolStudentsForGradesView();
			} else {
				studentTeacherPicked = '';
				showStudents();
			}
		}
		$('#pickGradeLevel').hide();
	});
	
	function showStudents() {
		if (!haveStudents && !gradeLevelChanged) {
			$('#pickGradeLevel').data('selected-level', '');
			$('.selectedGradeLevel').text('All Levels');
		}
		
		if ('99' == $('#pickGradeLevel').data('selected-level')) {
			$('#assignStudentsButton').hide();
		} else {
			$('#assignStudentsButton').show();
		}
		
		if (!haveStudents || gradeLevelChanged) {
			action = "getStudents";
			gradeLevelChanged = false;
			showLoading();
			$.getJSON('getStudentsServlet', {userMode : userMode, gradeLevel : $('#pickGradeLevel').data('selected-level') }, loadStudents);
		} else {
			hideMessage();
			hideAll();
			if (userMode == "T") {
				$('#promoteStudentsButton').hide();
				$('#studentViewLegend').show();
			} else {
				$('#studentViewLegend').hide();
				$('#promoteStudentsButton').show();
				$('.filterGradeLevel').show();
			}
			$('#studentView').show();
		}
		
	}	

	$('#cancelImportStudents').click(function() {
		hideBox('#importBoxStudents', 10);
	});

	$('#closeImportStudents').click(function() {
		hideBox('#importBoxStudents', 10);
	});
	
	$('#cancelImportStudentsWarning').click(function() {
		hideBox('#importStudentsWarning', 30);
	});
		
	$('#importStudentsButton').click(function() {
		if (userMode == 'A') {
			showBox('#importStudentsWarning', 30);
		} else {
			showBox('#importBoxStudents', 10);
		}
	});
	
	$('#applyImportStudents').click(function() {
		action = 'importStudents';
		$('#importStudentsUserMode').val(userMode);
		hideBox('#importStudentsWarning', 30);
		showBox('#importBoxStudents', 10);
	});
	
	$('#assignStudentsButton').click(function() {
		browserButton = false;
		window.location.hash = "assignstudent";
		if (userMode == "T") {
			showAssignStudents();
		} else {
			var range = getSchoolYearDateRange();
			if (dates.compare(currentDate, range.lastDay) > 0) {
				showBox('#assignStudentsToTeacherWarning', 30);
			} else {
				showAdminAssignStudents();
			}
		}
	});	
	
	$('#promoteStudentsButton').click(function(){
		if (!havePromoteDetails) {
			$.getJSON('services/planbook/school/getPromoteDetails', {}, function(data) {
				if (data.notLoggedIn == "true") {
					showLogin();
				} else if (data.error == "true") {
					showErrorMsg();
				} else {
					havePromoteDetails = true;
					$('#lastPromote').text(data.lastPromote);
					$('#highestGradeLevel').val(data.highestGradeLevel);
					promoteStudents();
				}
			});
		} else {
			promoteStudents();
		}
	});
	
	function diffDatesInMonths(d1, d2) {
		 var months;
	    months = (d2.getFullYear() - d1.getFullYear()) * 12;
	    months += d2.getMonth() - d1.getMonth();
	    return months;
	}
	
	function promoteStudents() {
		var sLastPromote = $.trim($('#lastPromote').text());
		if (sLastPromote != '') {
			var lastPromote = new Date(sLastPromote);
			if (diffDatesInMonths(lastPromote, currentDate) < 10) {
				showBox('#promoteStudentsWarning', 30);
			} else {
				showBox('#promoteStudentsBox', 30);
			}
		} else {
			showBox('#promoteStudentsBox', 30);
		}
	}
	
	$('#continuePromoteStudents').click(function(){
		hideBox('#promoteStudentsWarning', 30);
		showBox('#promoteStudentsBox', 30);
	});
	
	$('#closePromoteStudents').click(function(){
		hideBox('#promoteStudentsWarning', 30);
	});
	
	$('#applyPromoteStudents').click(function(){
		if ($('#highestGradeLevel').val() == '') {
			showNotification('#promoteStudentsErrorMsg', 'Grade Level is required.');
		} else {
			var promoteStudents = { schoolId : userInfo.schoolId,  highestGradeLevel : $('#highestGradeLevel').val(), gradeLevel : $('#pickGradeLevel').data('selected-level')};
			showLoading();
			$.post('services/planbook/student/promote', promoteStudents, function(data) {
				hideLoading();
				if (data.notLoggedIn == "true") {
					showLogin();
				} else if (data.error == "true") {
					showErrorMsg();
				} else {
					havePromoteDetails = false;
					haveStudents = false;
					hideBox('#promoteStudentsBox', 30);
					$('#adminStudentButton').trigger('click');
				}
			}, "json");
		}
	});
	
	$('#cancelPromoteStudents').click(function(){
		hideBox('#promoteStudentsBox', 30);
	});
	
	$('#assignStudentsToTeacher').click(function(){
		hideBox('#assignStudentsToTeacherWarning', 30);
		showAdminAssignStudents();
	});
	
	$('#closeAssignStudentsToTeacher').click(function(){
		hideBox('#assignStudentsToTeacherWarning', 30);
	});
	
	function getSchoolYearDateRange() {
		if (teacherList && currentTeacherId && currentYearId) {
			for (var i = 0; i < teacherList.length; i++) {
				var years = teacherList[i].years;
				if (teacherList[i].teacherId == currentTeacherId && years) {
					for (var j = 0; j < years.length; j++) {
						if (years[j].yearId == currentYearId) {
							return { firstDay : years[j].firstDay, lastDay : years[j].lastDay };
						}
					}
				}
			}
		}
		return null;
	}

	function showAssignStudents() {

		classPickType = 'student';
		$('#pcall').hide();

		if (studentClassPicked == "") {
			if ((currentClassId == "" || currentClassId == 0) && classId.length > 0) {currentClassId = classId[0];}
			studentClassPicked = currentClassId;
			$('#studentClassLabel').html($('#pc'+studentClassPicked).html());
			$('#studentChangeClass').css({'background-color':$('#pc'+studentClassPicked).css('backgroundColor'),'border':'0px','color':'white'});
			$('#studentClassImg').html('<img src="images/downwhite2.png">');
		}

		if (studentClassPicked != currentStudentClassId || gradeLevelChanged) {
			gradeLevelChanged = false;
			jsonData = new Object();
			jsonData.subjectId = studentClassPicked;
			jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
			action = 'getSubjectStudents';
			showLoading();
			$.getJSON('services/planbook/studentsubject', jsonData, loadSubjectStudents);
		} else {
			hideMessage();
			hideAll();
			if (userMode == "T") {
				$('#studentAssignmentViewLegend').show();
			} else {
				$('#studentAssignmentViewLegend').hide();
			}
			$('#studentAssignmentView').show();
			var boxHeight = $(window).height() - $('#studentChangeClass').offset().top - 130;
			if (boxHeight < 200) {boxHeight = 200;}
			$('#studentsInClass').css({'height':boxHeight+'px'});
			$('#studentsOutClass').css({'height':boxHeight+'px'});
		}
	
	}
	
	function loadSubjectStudents(data) {
		
		hideLoading();
	
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
	
				$('#studentsInClass').html("");
				$('#studentsOutClass').html("");
				
				if (data.students != null) {
					for (var x=0; x<data.students.length; x++) {
						if (data.students[x].inSubject == "Y") {
							var ls = '<div class="dragStudentOut" id="stP' + data.students[x].studentId + '">';
							if (data.students[x].authorType == "S") {
								ls = ls + '<table style="border-collapse:collapse;"><tr><td><div class="sStudent">S</div></td><td>' + data.students[x].lastName + ", " + data.students[x].firstName + '</td></tr></table>';
							} else {
								ls = ls + '<table style="border-collapse:collapse;"><tr><td><div class="tStudent">T</div></td><td>' + data.students[x].lastName + ", " + data.students[x].firstName + '</td></tr></table>';
							}
							ls = ls + '</div>';
							$('#studentsInClass').append(ls);
						} else {
							var ls = '<div class="dragStudentIn" id="stP' + data.students[x].studentId + '">';
							if (data.students[x].authorType == "S") {
								ls = ls + '<table style="border-collapse:collapse;"><tr><td><div class="sStudent">S</div></td><td>' + data.students[x].lastName + ", " + data.students[x].firstName + '</td></tr></table>';
							} else {
								ls = ls + '<table style="border-collapse:collapse;"><tr><td><div class="tStudent">T</div></td><td>' + data.students[x].lastName + ", " + data.students[x].firstName + '</td></tr></table>';
							}
							ls = ls + '</div>';
							$('#studentsOutClass').append(ls);
						}
					}
				}
	
				$('.dragStudentIn').draggable({
					helper: 'clone',
				    start: function(e, ui) {
						dragStudentId = this.id.substr(3);
				    },
				    cursorAt:{left:0,top:0}
				});

				$('#studentsInClass').droppable({
					accept: ".dragStudentIn",
					hoverClass: "addShadow",
					drop : function (event, ui) {
						jsonData = new Object();
						jsonData.subjectId = currentStudentClassId;
						jsonData.studentId = dragStudentId;
						jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
						action = 'addSubjectStudent';
						showLoading();
						$.post('services/planbook/studentsubject/assignStudent', jsonData, loadSubjectStudents);
					}
				});

				$('.dragStudentOut').draggable({
					helper: 'clone',
				    start: function(e, ui) {
						dragStudentId = this.id.substr(3);
				    },
				    cursorAt:{left:0,top:0}
				});

				$('#studentsOutClass').droppable({
					accept: ".dragStudentOut",
					hoverClass: "addShadow",
					drop : function (event, ui) {
						jsonData = new Object();
						jsonData.subjectId = currentStudentClassId;
						jsonData.studentId = dragStudentId;
						jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
						action = 'deleteSubjectStudent';
						showLoading();
						$.post('services/planbook/studentsubject/removeStudent', jsonData, loadSubjectStudents);
					}
				});

				haveCommentTo = false;
				
				if (action == "getSubjectStudents") {
					currentStudentClassId = studentClassPicked;
					showAssignStudents();
				} else {
					currentGradesClassId = 0;
					showAction();
				}
				
			}
		}		
	}
	
	function showAdminAssignStudents() {
		if (studentTeacherPicked != currentTeacherId || gradeLevelChanged) {
			jsonData = new Object();
			jsonData.teacherId = currentTeacherId;
			jsonData.yearId = currentYearId;
			jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
			action = 'getTeacherStudents';
			gradeLevelChanged = false;
			showLoading();
			$.getJSON('getStudentTeacherServlet', jsonData, loadTeacherStudents);
		} else {
			hideMessage();
			hideAll();
			$('#teacherAssignmentView').show();
			var boxHeight = $(window).height() - $('#assignAlltoTeacher').offset().top - 130;
			if (boxHeight < 200) {boxHeight = 200;}
			$('#studentsInTeacher').css({'height':boxHeight+'px'});
			$('#studentsOutTeacher').css({'height':boxHeight+'px'});
		}
	
	}
	
	function loadTeacherStudents(data) {
		
		hideLoading();
	
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
	
				studentTeacherPicked = currentTeacherId;
				
				$('#studentsInTeacher').html("");
				$('#studentsOutTeacher').html("");
				
				if (data.students != null) {
					for (var x=0; x<data.students.length; x++) {
						if (data.students[x].inTeacher == "Y") {
							var ls = '<div class="dragStudentOutTeacher" id="stP' + data.students[x].studentId + '">';
							ls = ls + data.students[x].lastName + ", " + data.students[x].firstName;
							ls = ls + '</div>';
							$('#studentsInTeacher').append(ls);
						} else {
							var ls = '<div class="dragStudentInTeacher" id="stP' + data.students[x].studentId + '">';
							ls = ls + data.students[x].lastName + ", " + data.students[x].firstName;
							ls = ls + '</div>';
							$('#studentsOutTeacher').append(ls);
						}
					}
				}
	
				$('.dragStudentInTeacher').draggable({
					helper: 'clone',
				    start: function(e, ui) {
						dragStudentId = this.id.substr(3);
				    },
				    cursorAt:{left:0,top:0}
				});

				$('#studentsInTeacher').droppable({
					accept: ".dragStudentInTeacher",
					hoverClass: "addShadow",
					drop : function (event, ui) {
						jsonData = new Object();
						jsonData.teacherId = currentTeacherId;
						jsonData.yearId = currentYearId;
						jsonData.studentId = dragStudentId;
						jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
						action = 'addTeacherStudent';
						showLoading();
						$.getJSON('addTeacherStudentServlet', jsonData, loadTeacherStudents);
					}
				});

				$('.dragStudentOutTeacher').draggable({
					helper: 'clone',
				    start: function(e, ui) {
						dragStudentId = this.id.substr(3);
				    },
				    cursorAt:{left:0,top:0}
				});

				$('#studentsOutTeacher').droppable({
					accept: ".dragStudentOutTeacher",
					hoverClass: "addShadow",
					drop : function (event, ui) {
						jsonData = new Object();
						jsonData.teacherId = currentTeacherId;
						jsonData.yearId = currentYearId;
						jsonData.studentId = dragStudentId;
						jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
						action = 'deleteTeacherStudent';
						showLoading();
						$.getJSON('deleteTeacherStudentServlet', jsonData, loadTeacherStudents);
					}
				});

				if (action == "getTeacherStudents") {
					showAdminAssignStudents();
				} else {
					showAction();
				}
				
			}
		}		
	}
	
	$('#studentChangeClass').click(function() {
		$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
		changePickClass = true;
	});
	
	$('.filterGradeLevel').click(function() {
		$('#pickGradeLevel').data('event-source', $(this).data('event-source'));
		
		if ($('#pickGradeLevel').css('display') == 'none') {
			$('#pickGradeLevel').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickGradeLevel = true;
		} else {
			$('#pickGradeLevel').hide();
		}
	});
	
	$('#assignAlltoClass').click(function() {
		$('#addAlltoClassName').html($('#studentClassLabel').html());
		showBox('#addAlltoClassWarning', 30);
	});
	
	$('#applyAddAlltoClass').click(function() {
		hideBox('#addAlltoClassWarning', 30);
		jsonData = new Object();
		jsonData.subjectId = currentStudentClassId;
		jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
		action = 'addSubjectStudent';
		showLoading();
		$.post('services/planbook/studentsubject/assignAllStudents', jsonData, loadSubjectStudents);
	});

	$('#cancelAddAlltoClass').click(function() {
		hideBox('#addAlltoClassWarning', 30);
	});
	
	$('#removeAllfromClass').click(function() {
		$('#deleteAllfromClassName').html($('#studentClassLabel').html());
		showBox('#deleteAllfromClassWarning', 30);
	});
	
	$('#applyDeleteAllfromClass').click(function() {
		hideBox('#deleteAllfromClassWarning', 30);
		jsonData = new Object();
		jsonData.subjectId = currentStudentClassId;
		jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
		action = 'deleteSubjectStudent';
		showLoading();
		$.post('services/planbook/studentsubject/removeAllStudents', jsonData, loadSubjectStudents);
	});

	$('#cancelDeleteAllfromClass').click(function() {
		hideBox('#deleteAllfromClassWarning', 30);
	});

	$('#assignAlltoAll').click(function() {
		showBox('#addAlltoAllWarning', 30);
	});
	
	$('#applyAddAlltoAll').click(function() {
		hideBox('#addAlltoAllWarning', 30);
		jsonData = new Object();
		jsonData.subjectId = currentStudentClassId;
		action = 'addSubjectStudent';
		showLoading();
		$.getJSON('addAllSubjectAllStudentsServlet', jsonData, loadSubjectStudents);
	});

	$('#cancelAddAlltoAll').click(function() {
		hideBox('#addAlltoAllWarning', 30);
	});
	
	$('#removeAllfromAll').click(function() {
		showBox('#deleteAllfromAllWarning', 30);
	});
	
	$('#applyDeleteAllfromAll').click(function() {
		hideBox('#deleteAllfromAllWarning', 30);
		jsonData = new Object();
		jsonData.subjectId = currentStudentClassId;
		action = 'deleteSubjectStudent';
		showLoading();
		$.getJSON('deleteAllSubjectAllStudentsServlet', jsonData, loadSubjectStudents);
	});

	$('#cancelDeleteAllfromAll').click(function() {
		hideBox('#deleteAllfromAllWarning', 30);
	});
	
	$('#assignAlltoTeacher').click(function() {
		showBox('#addAlltoTeacherWarning', 30);
	});
	
	$('#applyAddAlltoTeacher').click(function() {
		hideBox('#addAlltoTeacherWarning', 30);
		jsonData = new Object();
		jsonData.teacherId = currentTeacherId;
		jsonData.yearId = currentYearId;
		jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
		action = 'addTeacherStudent';
		showLoading();
		$.getJSON('addTeacherAllStudentsServlet', jsonData, loadTeacherStudents);
	});

	$('#cancelAddAlltoTeacher').click(function() {
		hideBox('#addAlltoTeacherWarning', 30);
	});
	
	$('#removeAllfromTeacher').click(function() {
		showBox('#deleteAllfromTeacherWarning', 30);
	});
	
	$('#applyDeleteAllfromTeacher').click(function() {
		hideBox('#deleteAllfromTeacherWarning', 30);
		jsonData = new Object();
		jsonData.teacherId = currentTeacherId;
		jsonData.yearId = currentYearId;
		jsonData.gradeLevel = $('#pickGradeLevel').data('selected-level');
		action = 'deleteTeacherStudent';
		showLoading();
		$.getJSON('deleteTeacherAllStudentsServlet', jsonData, loadTeacherStudents);
	});

	$('#cancelDeleteAllfromTeacher').click(function() {
		hideBox('#deleteAllfromTeacherWarning', 30);
	});

	$('#assignAlltoAllTeacher').click(function() {
		showBox('#addAlltoAllWarningTeacher', 30);
	});
	
	$('#applyAddAlltoAllTeacher').click(function() {
		hideBox('#addAlltoAllWarningTeacher', 30);
		jsonData = new Object();
		jsonData.teacherId = currentTeacherId;
		action = 'addTeacherStudent';
		showLoading();
		$.getJSON('addAllTeacherAllStudentsServlet', jsonData, loadTeacherStudents);
	});

	$('#cancelAddAlltoAllTeacher').click(function() {
		hideBox('#addAlltoAllWarningTeacher', 30);
	});
	
	$('#removeAllfromAllTeacher').click(function() {
		showBox('#deleteAllfromAllWarningTeacher', 30);
	});
	
	$('#applyDeleteAllfromAllTeacher').click(function() {
		hideBox('#deleteAllfromAllWarningTeacher', 30);
		jsonData = new Object();
		jsonData.teacherId = currentTeacherId;
		action = 'deleteTeacherStudent';
		showLoading();
		$.getJSON('deleteAllTeacherAllStudentsServlet', jsonData, loadTeacherStudents);
	});

	$('#cancelDeleteAllfromAllTeacher').click(function() {
		hideBox('#deleteAllfromAllWarningTeacher', 30);
	});

	function loadStudentGrades(data) {
		
		hideLoading();
		$('#studentGradesTableHead').html('');
		$('#studentGradesTableBody').html('');
		$('#studentGradesMsg').html('');

		currentGradesClassId = gradesClassPicked;
		currentGradingPeriodId = gradesPeriodPicked;
		
		assignmentGrades = new Array();
		assessmentGrades = new Array();
		standardGrades = new Array();
		
		asgGradeCols = new Array();
		asgGradeColsPos = 0;
		asmGradeCols = new Array();
		asmGradeColsPos = 0;
		
		$('#hsStandards').html("Hide Standards");
		
		if (currentGradingPeriodId != 0) {
			$('#gradesPeriodLabel').html($('#pgp'+ currentGradingPeriodId + '0').html());
		} else {
			$('#gradesPeriodLabel').html("All Periods");
		}
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else if (data.studentScores == null) {
			haveAllStudentGrades = true;
			$('#studentGradesMsg').append('<p>No <span class="gotoStudents" style="color:blue;">students</span> have been assigned to this class</p>');
			showStudentGrades();
		} else if (data.assessments == null && data.assignments == null) {
			$('#studentGradesMsg').append('<p>No <span class="gotoAssignments" style="color:blue;">assignments</span> or <span class="gotoAssessments" style="color:blue;">assessments</span> have been created for this class</p>');
			haveAllStudentGrades = true;
			showStudentGrades();
		} else {
			haveSortScoresData = true;
			haveAllStudentGrades = true;
			$('#studentGradesBox').data(data);
			$('#studentGradesBox').show();
			$('#individualStudentGradesBox').hide();
			
			var ls = '';
	
			ls = '<tr style="height:150px;">';
			
			ls = ls + '<td style="vertical-align:top;" colspan="1">';
			ls = ls + '<div style="width: 200px;">';
			ls = ls + '<div id="gradeBookActions">';
			ls = ls + '  <div>';
			ls = ls + '      <div>Show Assignments</div>';
			ls = ls + '      <div id="allAssignments" class="asgGradesButton">All</div><div id="noAssignments" class="asgGradesButton">None</div><div id="priorAssignment" class="asgGradesButton">Prior</div><div id="nextAssignment" class="asgGradesButton">Next</div>';
			ls = ls + '  </div>';
			ls = ls + '  <div>';
			ls = ls + '      <div>Show Assessments</div>';
			ls = ls + '      <div id="allAssessments" class="asmGradesButton">All</div><div id="noAssessments" class="asmGradesButton">None</div><div id="priorAssessment" class="asmGradesButton">Prior</div><div id="nextAssessment" class="asmGradesButton">Next</div>';
			ls = ls + '  </div>';
			ls = ls + '</div>';
			ls = ls + '</div>';
			ls = ls + '</td>'
			
			initClassWork(data);
		
			ls = ls + buildScoreHeaders(data);
			
			ls = ls + '<td style="width:100%;"></td></tr>';
			$('#studentGradesTableHead').append(ls);
			
			buildDueDateRow(data);
			buildTotalPointsRow(data);
			
			if (data.studentScores != null) {
				for (var x=0; x<data.studentScores.length; x++) {
					buildStudentGradesRow(data, x);
				}
			}

			buildSpaceRow();
			
			$('#studentGradesTable').trigger('update');
			$('#studentGradesAverageRow').trigger('update');

			showStudentGrades();
			
			showAction();
			
			if (sortScoresSettings) {
				applyGradeSettings(sortScoresSettings);
			} else {
				$('#allAssignments').addClass('selected');
				$('#allAssessments').addClass('selected');
				asgGradesButtonId = 'allAssignments';
				asmGradesButtonId = 'allAssessments';
			}
			
		}
	}	
	
	var haveSortScoresData = true;
	var sortScoresDirection = 'DESC';
	var sortScoresSettings;
	
	function initClassWork(data) {
		var classWork = [];
		if (data.assignments) {
			$.each(data.assignments, function(i){
				var scores = {};
				$.each(data.studentScores,function() {
					scores[this.studentId]=this.assignmentScores[i];
				});
				classWork.push({ end : this.assignmentEnd, type : 'G', data : this, scores : scores });
			});
		}
		
		if (data.assessments) {
			$.each(data.assessments, function(i){
				var scores = {};
				$.each(data.studentScores,function() {
					scores[this.studentId]=this.assessmentScores[i];
				});
				classWork.push({ end : this.assessmentEnd, type : 'M', data : this, scores : scores });
			});
		}
		
		sortByDate(classWork, 'end', sortScoresDirection);
	
		data.classWork = classWork;
	}
		
	$('#sortScoresByDueDate').live('click', function() {
		var data = $('#studentGradesBox').data();
		
		sortScoresSettings = {asgGradesButtonId : asgGradesButtonId, asmGradesButtonId : asmGradesButtonId};
		sortScoresSettings.showStandards = $('#hsStandards').text() == 'Hide Standards';
		
		if (asgGradesButtonId == 'priorAssignment' || asgGradesButtonId == 'nextAssignment') {
			sortScoresSettings.selectedAsgGradeCols = asgGradeCols[asgGradeColsPos];
		}
		
		if (asmGradesButtonId == 'priorAssessment' || asmGradesButtonId == 'nextAssessment') {
			sortScoresSettings.selectedAsmGradeCols = asmGradeCols[asmGradeColsPos];
		}
		
		sortScoresDirection = (sortScoresDirection == 'ASC' ? 'DESC' : 'ASC');
		action = 'getStudentGrades';
		
		if (!haveSortScoresData) {
			showLoading();
			$.getJSON('getStudentScoresServlet', {subjectId : gradesClassPicked, gradePeriodId : gradesPeriodPicked}, loadStudentGrades);
		} else {
			loadStudentGrades(data);
		}
		
	});
	
	function applyGradeSettings(settings) {
		asgGradesButtonId = settings.asgGradesButtonId;
		asmGradesButtonId = settings.asmGradesButtonId;
		
		for (var i =0; i< asgGradeCols.length; i++) {
			if (settings.selectedAsgGradeCols == asgGradeCols[i]) {
				asgGradeColsPos = i;
				break;
			}
		}
		
		for (var i =0; i < asmGradeCols.length; i++) {
			if (settings.selectedAsmGradeCols == asmGradeCols[i]) {
				asmGradeColsPos = i;
				break;
			}
		}
		
		switch (asgGradesButtonId) {
			case "allAssignments": allAssignments(); break;
			case "noAssignments": noAssignments(); break;
			case "priorAssignment": asgGradeColsPos++; priorAssignment(); break;
			case "nextAssignment": asgGradeColsPos--; nextAssignment(); break;
		}
	
		switch (asmGradesButtonId) {
			case "allAssessments": allAssessments(); break;
			case "noAssessments": noAssessments(); break;
			case "priorAssessment": asmGradeColsPos++; priorAssessment(); break;
			case "nextAssessment": asmGradeColsPos--; nextAssessment(); break;
		}
		
		if (settings.showStandards) {
			$('.standardGradeRow').show();
			$('#hsStandards').html("Hide Standards");
		} else {
			$('.standardGradeCol').hide();
			$('.standardGradeRow').hide();
			$('#hsStandards').html("Show Standards");	
		}
	}
	
	function buildSpaceRow() {
		var $spacerRow = $('<tr/>');
		$('#studentGradesTableBody > tr:last-child td').each(function(i) {
			$spacerRow.append($('<td/>').append($('<img/>').attr({src : 'spacer.gif', width : (i == 0 ? '200px' : '40px'), height : '1px' })));
		});
		$('#studentGradesTableBody').append($spacerRow);
	}
	
	$('#studentGradesTable').live('update', function() {
		var tabCtr = 1;
		for (var c = 1; c <= $('#studentGradesTableBody > tr:first-child td').length; c++) {
			$('#studentGradesTableBody tr').each(function(){
				$(this).find('td:eq(' + c + ') input').attr('tabindex', tabCtr++);
			});
		}
	});
	
	function buildScoreHeaders(data){
		var ls = '';
		
		if (currentGradingPeriodId == 0) {
			ls += '<td class="overallScoreHeader" id="spgp4934"><div style="width: 50%; margin: 0 auto;"><div style="width:80px; height:15px;"><div class="vertbox">Overall</div></div></div></td>';
			$.each(data.gradePeriods, function(){
				ls = ls + '<td class="gradePeriodHeader editGradingPeriod" id="spgp' + this.gradePeriodId + '"><div style="width: 50%; margin: 0 auto;"><div style="width:80px; height:15px;"><div class="vertbox">' + this.name + '</div></div></div></td>';
			});
		} else {
			$.each(data.gradePeriods, function() {
				if (this.gradePeriodId == currentGradingPeriodId) {
					ls = ls + '<td class="gradePeriodHeader editGradingPeriod" id="spgp' + this.gradePeriodId + '"><div style="width: 50%; margin: 0 auto;"><div style="width:80px; height:15px;"><div class="vertbox">' + this.name + '</div></div></div></td>';
					return false;
				}
			});
		}
		
		$.each(data.classWork, function() {
			if (this.type == 'G') {
				asgGradeCols[asgGradeColsPos] = '.asgGradeCol' + this.data.assignmentId;
				asgGradeColsPos++;
				var scoreWeightName = this.data.scoreWeightId == 0 ? 'No Category' : this.data.scoreWeightName;
				ls = ls + '<td class="scoreHeader asgGradeCol asgGradeCol' + this.data.assignmentId + '" id="' + 'asgGradeCol' + this.data.assignmentId  + '"><div style="width:50px; height:15px;"><div class="vertbox">' + this.data.assignmentTitle + '<br /><span style="font-size: 9px;">' + scoreWeightName + '</span></div></div></td>';
				if (this.data.standards != null) {
					for (var y=0; y<this.data.standards.length; y++) {
						ls = ls + '<td class="standardGradeCol scoreHeader asgGradeCol asgGradeCol' + this.data.assignmentId + '" id="' + 'asgStGrdCol' + this.data.assignmentId  + '"><div style="width:50px; height:15px;"><div class="vertbox" title="' + this.data.standards[y].desc + '">' + this.data.standards[y].id + '<br /><span style="font-size: 9px;">Standard</span></div></div></td>';
					}
				}
			} else {
				asmGradeCols[asmGradeColsPos] = '.asmGradeCol' + this.data.assessmentId;
				asmGradeColsPos++;
				var scoreWeightName = this.data.scoreWeightId == 0 ? 'No Category' : this.data.scoreWeightName;
				ls = ls + '<td class="scoreHeader asmGradeCol asmGradeCol' + this.data.assessmentId + '" id="' + 'asmGradeCol' + this.data.assessmentId + '"><div style="width:50px; height:15px;"><div class="vertbox">' + this.data.assessmentTitle + '<br /><span style="font-size: 9px;">' + scoreWeightName + '</span></div></div></td>';
				if (this.data.standards != null) {
					for (var y=0; y<this.data.standards.length; y++) {
						ls = ls + '<td class="standardGradeCol scoreHeader asmGradeCol asmGradeCol' + this.data.assessmentId + '" id="' + 'asmStGrdCol' + this.data.assessmentId  + '"><div style="width:50px; height:15px;"><div class="vertbox" title="' + this.data.standards[y].desc + '">' + this.data.standards[y].id + '<br /><span style="font-size: 9px;">Standard</span></div></div></td>';
					}
				}
			}
		});
		
		return ls;
	}
	
	function buildDueDateRow(data) {
		var $dueDateRow = $('<tr/>');
		$dueDateRow.append('<td class="slCell" style="border-top:1px solid #DBDFE8; text-align:left;"><div style="float:left; font-weight: bold;">Due Date</div><div style="float:right;"><span style="font-weight: bold;">Sort </span><span id="sortScoresByDueDate" style="display:inline-block; width: 15px; background-color: #0057C1; color:white;text-align: center; border-radius: 3px; "><i class="fa fa-caret-left"><span></span></i></span></div></td>');
		$dueDateRow.append('<td class="scCell" style="border-top:1px solid #DBDFE8;"><div style="width:50px;"></div></td>');
		$dueDateRow.find('#sortScoresByDueDate').find('i').removeClass('fa-caret-right').removeClass('fa-caret-left').addClass((!sortScoresDirection || sortScoresDirection == 'DESC') ? 'fa-caret-left' : 'fa-caret-right');
		
		if (currentGradingPeriodId == 0) {
			$.each(data.gradePeriods, function(){
				$dueDateRow.append($('<td class="scCell" style="border-top:1px solid #DBDFE8;"></td>'));
			});
		}
		
		$.each(data.classWork, function() {
			if (this.type == 'G') {
				var bgcolor = this.data.assignmentEnd ? '' : '#FFC7CE';
				$dueDateRow.append($('<td class="srCell asgGradeCol" style="text-align:center;"/>').addClass('asgGradeCol' + this.data.assignmentId).text(formatDateToShowNoYear(this.data.assignmentEnd)).css('background-color', bgcolor));
				if (this.data.standards != null) {
					for (var y=1; y<=this.data.standards.length; y++) {
						$dueDateRow.append($('<td class="srCell asgGradeCol standardGradeCol" style="text-align:center;"/>').addClass('asgGradeCol' + this.data.assignmentId).text(formatDateToShowNoYear(this.data.assignmentEnd)).css('background-color', bgcolor));
					}
				}
			} else {
				var bgcolor = this.data.assessmentEnd ? '' : '#FFC7CE';
				$dueDateRow.append($('<td class="srCell asmGradeCol" style="text-align:center;"/>').addClass('asmGradeCol' + this.data.assessmentId).text(formatDateToShowNoYear(this.data.assessmentEnd)).css('background-color', bgcolor));
				if (this.data.standards != null) {
					for (var y=1; y<=this.data.standards.length; y++) {
						$dueDateRow.append($('<td class="srCell asmGradeCol standardGradeCol" style="text-align:center;"/>').addClass('asmGradeCol' + this.data.assessmentId).text(formatDateToShowNoYear(this.data.assessmentEnd)).css('background-color', bgcolor));
					}
				}
			}
		});
		
		$('#studentGradesTableHead').append($dueDateRow);
	}
	
	function sortByDate(array, key, direction) {
		return array.sort(function(a, b) {
		    var x = a[key]; var y = b[key];
		    if (!x || $.trim(x) == '') {
	    		x = '01/01/0001';
	    	}
	    	if (!y || $.trim(y) == '') {
	    		y = '01/01/0001';
	    	}
		    return direction =='ASC' ? dates.compare(x, y) : dates.compare(y,x);
		});
	}
	
	function buildTotalPointsRow(data) {
		var $averagesRow = $('<tr id="studentGradesAverageRow"/>');
		$averagesRow.append($('<td/>').addClass('slCell').css({'text-align' : 'left'}).append($('<div/>').css({'width':'200px', 'font-weight' : 'bold' }).text('Class Average')));
		$averagesRow.append($('<td/>').css({'font-weight' : 'bold', 'text-align' : 'left'}).addClass('scCell gradeAverage'));
		
		if (currentGradingPeriodId == 0) {
			$.each(data.gradePeriods, function(){
				$averagesRow.append($('<td/>').addClass('gradeAverage scCell').css({'font-weight' : 'bold'}));
			});
		}
		
		
		$.each(data.classWork, function() {
			if (this.type == 'G') {
				$averagesRow.append($('<td/>').css({'font-weight' : 'bold'}).addClass('scCell gradeAverage asgGradeCol asgGradeCol' + this.data.assignmentId).data('totalPoints', this.data.totalPoints));
				if (this.data.standards != null) {
					for (var y=0; y<this.data.standards.length; y++) {
						$averagesRow.append($('<td/>').css({'font-weight' : 'bold'}).addClass('scCell standardGradeCol asgGradeCol asgGradeCol' + this.data.assignmentId));
					}
				}
			} else {
				$averagesRow.append($('<td/>').css({'font-weight' : 'bold'}).addClass('scCell gradeAverage asmGradeCol asmGradeCol' + this.data.assessmentId).data('totalPoints', this.data.totalPoints));
				if (this.data.standards != null) {
					for (var y=0; y<this.data.standards.length; y++) {
						$averagesRow.append($('<td/>').css({'font-weight' : 'bold'}).addClass('scCell standardGradeCol asmGradeCol asmGradeCol' + this.data.assessmentId));
					}
				}
			}
		});
		
		$('#studentGradesTableHead').append($averagesRow);
	}
	
	function buildStudentGradesRow(data, x){
		var ls = '';
		
		var $gradesRow = $('<tr><td class="slCell" style="text-align:left;"><div class="studentScoreName" id="studentScoreName' + data.studentScores[x].studentId + '">' + data.studentScores[x].lastName + ', ' + data.studentScores[x].firstName + '</div></td></tr>');
		ls = '<td class="scCell" style="text-align: center;"><input class="overrideScore" id="overrideScore' + x + '" type="text" value="' + data.studentScores[x].percentage + '" style="width: 40px; margin-right: 20px; text-align:right;">';
		if (letterGrades != null && letterGrades.length > 0) {ls = ls + '<span style="display: inline-block; font-size: 12px; width: 10px;" class="letterGrade" id="overrideScore' + x + 'x1">' + data.studentScores[x].letterGrade + '</span>';}
		ls = ls + '<p style="display:none" id="overrideScore' + x + 'x2">' + data.studentScores[x].overrideScoreId + '</p>';
		ls = ls + '<p style="display:none" id="overrideScore' + x + 'x3">' + data.studentScores[x].studentId + '</p></td>';
		$gradesRow.append(ls);
		
		if (currentGradingPeriodId == 0) {
			$.each(data.studentScores[x].gradePeriodScores, function() {
				var $overridePeriodCell = $('<td style="text-align: center;" class="scCell"/>');
				$overridePeriodCell.append($('<input/>').addClass('overridePeriodScore overridePeriodScore' + this.gradePeriodId).attr({type: 'text', size : 2}).css({'text-align' : 'right', 'width' : '40px' , 'margin-right' : '20px' }).val(this.percentage).data(this));
				if (letterGrades != null && letterGrades.length > 0) {
					$overridePeriodCell.append($('<span/>').addClass('letterGrade letterGrade' + this.gradePeriodId).css({ 'display' : 'inline-block', 'font-size' : '12px', 'width' : '10px' }).text(this.letterGrade));
				}
				$gradesRow.append($overridePeriodCell);
			});
		}
		
		var studentId = data.studentScores[x].studentId;
		
		
		$.each(data.classWork, function(y) {
			if (this.type == 'G') {
				var $asgGradeCol = $('<td style="text-align: right;" class="scCell asgGradeCol asgGradeCol' + this.scores[studentId].assignmentId + '"/>');
				var hasScore = this.scores[studentId].scoreId != 0;
				var totalPoints = this.scores[studentId].totalPoints;
				this.scores[studentId].type = 'g';
				$asgGradeCol.append($('<input class="studentGrade tabbedGrade" id="st' + x + 'g' + y + '" type="text" size="2" style="text-align:right;">').val(hasScore ? totalPoints : '').data(this.scores[studentId]));
				$gradesRow.append($asgGradeCol);
				
				if (this.scores[studentId].standardScores != null) {
					for (var z=0; z<this.scores[studentId].standardScores.length; z++) {
						ls = '<td style="text-align: right;" class="srCell standardGradeCol asgGradeCol asgGradeCol' + this.scores[studentId].assignmentId + '" style="text-align:center;">';
						var standardVal = "";
						if (this.scores[studentId].standardScores[z].standardScoreId != 0) {
							standardVal = this.scores[studentId].standardScores[z].code;
						}
						ls = ls + '<input class="standardGrade tabbedGrade" id="st' + x + 'g' + y + 's' + z + '" type="text" value="' + standardVal + '" size="2" style="text-align:right;">';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x1">' + this.scores[studentId].standardScores[z].standardScoreId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x2">' + this.scores[studentId].standardScores[z].standardDBId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x3">' + this.scores[studentId].standardScores[z].standardScoreWeightId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x4">' + data.studentScores[x].studentId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x5">' + this.scores[studentId].assignmentId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'g' + y + 's' + z + 'x6">0</p>';
						ls = ls + '</td>';
						$gradesRow.append(ls);
					}
				}
			} else {
				var $asmGradeCol = $('<td style="text-align: right;" class="srCell asmGradeCol asmGradeCol' + this.scores[studentId].assessmentId + '" style="text-align:center;"/>');
				var hasScore = this.scores[studentId].scoreId != 0;
				var totalPoints = this.scores[studentId].totalPoints;
				this.scores[studentId].type = 'm';
				$asmGradeCol.append($('<input class="studentGrade tabbedGrade" id="st' + x + 'm' + y + '" type="text" size="2" style="text-align:right;">').val(hasScore ? totalPoints : '').data(this.scores[studentId]));
				$gradesRow.append($asmGradeCol);
				
				if (this.scores[studentId].standardScores != null) {
					for (var z=0; z<this.scores[studentId].standardScores.length; z++) {
						ls = '<td style="text-align: right;" class="srCell standardGradeCol asmGradeCol asmGradeCol' + this.scores[studentId].assessmentId + '" style="text-align:center;">';
						var standardVal = "";
						if (this.scores[studentId].standardScores[z].standardScoreId != 0) {
							standardVal = this.scores[studentId].standardScores[z].code;
						}									
						ls = ls + '<input class="standardGrade tabbedGrade" id="st' + x + 'm' + y + 's' + z + '" type="text" value="' + standardVal + '" size="2" style="text-align:right;">';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x1">' + this.scores[studentId].standardScores[z].standardScoreId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x2">' + this.scores[studentId].standardScores[z].standardDBId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x3">' + this.scores[studentId].standardScores[z].standardScoreWeightId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x4">' + data.studentScores[x].studentId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x6">' + this.scores[studentId].assessmentId + '</p>';
						ls = ls + '<p style="display:none" id="st' + x + 'm' + y + 's' + z + 'x5">0</p>';
						ls = ls + '</td>';
						$gradesRow.append(ls);
					}
				}
			}
		});
		
		$('#studentGradesTableBody').append($gradesRow);
	}
	
	function showIndividualStudentGrades() {
		classPickType = 'grades';
		individualStudentGradesView = true; 
		haveAllStudentGrades =  gradesClassPicked == currentGradesClassId && gradesPeriodPicked == currentGradingPeriodId;
		if (gradesStudentPicked != currentGradesStudentId || gradesClassPicked != currentGradesClassId || gradesPeriodPicked != currentGradingPeriodId) {
			$('#individualStudentLetterGrade').text('');
			$('#individualStudentOverrideScore').val('');
			$('#individualStudentGrades').html('');
			var jsonData = {
				studentId : gradesStudentPicked,
				subjectId : gradesClassPicked,
				gradePeriodId : gradesPeriodPicked
			};
			showLoading();
			$.post('services/planbook/student/scores', jsonData, loadStudentScores.bind(this));
		} else {
			$('#individualStudentGradesBox').show();
			$('#studentGradesBox').hide();
		}
	}
	
	$('.studentScoreName').live('click', function(){
		gradesStudentPicked = this.id.substring(16);
		showIndividualStudentGrades();
	});
	
	$('.studentPager').live('click', function(){
		gradesStudentPicked = $(this).data().studentId;
		showIndividualStudentGrades();
	});
	
	function loadStudentScores(data) {
		hideLoading();
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			currentGradingPeriodId = data.gradePeriodId;
			currentGradesClassId = data.subjectId;
			currentGradesStudentId = data.studentId;
			
			$('#studentGradesBox').hide();
			$('#individualStudentGradesBox').show();
			
			$('#individualStudentOverrideScore').data({ 
				studentId : data.studentId, 
				subjectId : data.subjectId, 
				gradePeriodId : data.gradePeriodId, 
				overrideScoreId : data.overrideScoreId
			});
			
			if (data.previousStudentId && data.previousStudentId > 0) {
				$('#previousStudentGrades').data({studentId : data.previousStudentId}).show();
			} else {
				$('#previousStudentGrades').hide();
			}
			
			if (data.nextStudentId && data.nextStudentId > 0) {
				$('#nextStudentGrades').data({studentId : data.nextStudentId}).show();
			} else {
				$('#nextStudentGrades').hide();
			}
			
			$('#studentName').text(data.name);
			$('#individualStudentLetterGrade').text(data.letterGrade);
			$('#individualStudentOverrideScore').css('background-color', 'white').val(data.percentage);
			$('#individualStudentGrades').html('');
			$('#individualStudentGrades').append($('<tr/>').addClass('groupHeader').append($('<th/>').attr('colspan', 5).text('Assignments')));
			$('#individualStudentGrades').append(
				$('<tr/>').addClass('dataHeader')
				.append($('<th/>').text('Title'))
				.append($('<th/>').text('Type'))
				.append($('<th/>').text('Due Date'))
				.append($('<th/>').text('Points'))
				.append($('<th/>').text('Notes'))
			);
			
			var hideStandards = $('#hsStandards').text() != 'Hide Standards';
			var displayStandardStyle = hideStandards ? 'none' : '';
			
			$.each(data.assignments, function(){
				var hasScore = this.score && this.score.scoreId > 0;
				var points =  hasScore ? this.score.points : '';
				var scoreId = hasScore ? this.score.scoreId : '';
				var assignmentId = this.id;
				var assignmentEnd = this.end;
				var eData = { 
					assignmentId : assignmentId, 
					assessmentId : 0, 
					studentId : data.studentId, 
					subjectId : data.subjectId, 
					gradePeriodId : data.gradePeriodId, 
					scoreId : scoreId, 
					type : 'g' 
				};
				
				var $note = $('<input/>').addClass('studentGradeNote')
					.data({
						id : this.noteId,
						type : 'G',
						typeId : assignmentId,
						parentId : data.studentId
					})
					.change(addStudentGradeNote)
					.val(this.noteText);
				
				$('#individualStudentGrades').append(
					$('<tr/>').addClass('data')
					.append($('<td/>').text(this.title).data({ id : assignmentId}).click(editStudentGradesAssignment))
					.append($('<td/>').text(this.scoreWeightName))
					.append($('<td/>').text(assignmentEnd))
					.append($('<td/>').append($('<input/>').addClass('individualStudentGrade').attr({ type : 'text', id : 'isgASG' + assignmentId }).data(eData).val(points)).append($('<span/>').text(' / ' + this.possible)))
					.append($('<td/>').append($note))
				);
				
				$.each(this.standards, function(i, standard) {
					var hasStandardScore = standard.score && standard.score.scoreId > 0;
					var standardPoints =  hasStandardScore ? standard.score.code : '';
					var standardScoreId = hasStandardScore ? standard.score.scoreId : '';
					var standarEData = {
						assignmentId : assignmentId, 
						assessmentId : 0, 
						standardScoreId : standardScoreId,
						standardDBId : standard.standardDBId,
						studentId : data.studentId,
						type : 'g' 
					};
					
					var $standardNote = $('<input/>').addClass('studentGradeNote')
					.data({
						id : standard.noteId,
						type : 'SG',
						typeId : standard.id,
						parentId : data.studentId
					})
					.change(addStudentGradeNote)
					.val(standard.noteText);
					
					$('#individualStudentGrades').append(
						$('<tr/>').addClass('data standardGradeRow').css('display', displayStandardStyle)
						.append($('<td/>').text(standard.title).data({ id : assignmentId}).click(editStudentGradesAssignment))
						.append($('<td/>').text('Standard'))
						.append($('<td/>').text(assignmentEnd))
						.append($('<td/>').append($('<input/>').addClass('individualStudentStandardGrade').attr({ type : 'text', id :  'issgAG' + standard.standardDBId }).data(standarEData).val(standardPoints)))
						.append($('<td/>').append($standardNote))
					);
				});
				
			});
			
			$('#individualStudentGrades').append($('<tr/>').addClass('spacer').append($('<th/>').attr('colspan', 5)));
			
			$('#individualStudentGrades').append($('<tr/>').addClass('groupHeader').append($('<th/>').attr('colspan', 5).text('Assessments')));
			$('#individualStudentGrades').append(
				$('<tr/>').addClass('dataHeader')
				.append($('<th/>').text('Title'))
				.append($('<th/>').text('Type'))
				.append($('<th/>').text('Due Date'))
				.append($('<th/>').text('Points'))
				.append($('<th/>').text('Notes'))
			);
			
			$.each(data.assessments, function(){
				var hasScore = this.score && this.score.scoreId > 0;
				var points =  hasScore ? this.score.points : '';
				var scoreId = hasScore ? this.score.scoreId : '';
				var assessmentId = this.id;
				var assessmendEnd = this.end;
				var eData = { 
					assignmentId : 0, 
					assessmentId : assessmentId, 
					studentId : data.studentId, 
					subjectId : data.subjectId, 
					gradePeriodId : data.gradePeriodId, 
					scoreId : scoreId, 
					type : 'm' 
				};
				
				var $note = $('<input/>').addClass('studentGradeNote')
				.data({
					id : this.noteId,
					type : 'M',
					typeId : assessmentId,
					parentId : data.studentId
				})
				.change(addStudentGradeNote)
				.val(this.noteText);
				
				$('#individualStudentGrades').append(
					$('<tr/>').addClass('data')
					.append($('<td/>').text(this.title).data({id : assessmentId }).click(editStudentGradesAssessment))
					.append($('<td/>').text(this.scoreWeightName))
					.append($('<td/>').text(assessmendEnd))
					.append($('<td/>').append($('<input/>').addClass('individualStudentGrade').attr({ type : 'text', id : 'isgASM' + assessmentId }).data(eData).val(points)).append($('<span/>').text(' / ' + this.possible)))
					.append($('<td/>').append($note))
				);
				
				$.each(this.standards, function(i, standard) {
					var hasStandardScore = standard.score && standard.score.scoreId > 0;
					var standardPoints =  hasStandardScore ? standard.score.code : '';
					var standardScoreId = hasStandardScore ? standard.score.scoreId : '';
					var standarEData = {
						assignmentId : 0, 
						assessmentId : assessmentId, 
						standardScoreId : standardScoreId,
						standardDBId : standard.standardDBId,
						studentId : data.studentId,
						type : 'm' 
					};
					
					var $standardNote = $('<input/>').addClass('studentGradeNote')
					.data({
						id : standard.noteId,
						type : 'SM',
						typeId : standard.id,
						parentId : data.studentId
					})
					.change(addStudentGradeNote)
					.val(standard.noteText);
					
					$('#individualStudentGrades').append(
						$('<tr/>').addClass('data standardGradeRow').css('display', displayStandardStyle)
						.append($('<td/>').text(standard.title).data({id : assessmentId }).click(editStudentGradesAssessment))
						.append($('<td/>').text('Standard'))
						.append($('<td/>').text(assessmendEnd))
						.append($('<td/>').append($('<input/>').addClass('individualStudentStandardGrade').attr({ type : 'text', id : 'issgAM' + standard.standardDBId }).data(standarEData).val(standardPoints)))
						.append($('<td/>').append($standardNote))
					);
				});
			});
			
			var tabCtr = 0;
			$('#individualStudentGrades > tr > td:nth-child(4) > input').each(function() {
				$(this).attr('tabindex', ++tabCtr);
			});
			
			$('#individualStudentGrades > tr > td:nth-child(5) > input').each(function() {
				$(this).attr('tabindex', ++tabCtr);
			});
			
			$('#individualStudentGradesBox').show();
		}
	}
	
	function addStudentGradeNote() {
		if (paymentNeeded) {
			showExpiredMsg();
		} else {
			var jsonInfo = $(this).data();
			jsonInfo.text = $(this).val();
			$(this).css({'background-color':'#FFEB9C'});
			$.post('services/planbook/note/add', jsonInfo, loadStudentGradeNote.bind(this));
		}
	}
	
	function loadStudentGradeNote(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			$(this).data().id = data.id;
			$(this).css({'background-color':'#E2EFDA'});
		}
	}
	
	function editStudentGradesAssignment() {
		jsonInfo = new Object();
		jsonInfo.assignmentId = $(this).data().id;
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssignmentServlet', jsonInfo, loadLessonAssignment);
	}
	
	function editStudentGradesAssessment() {
		jsonInfo = new Object();
		jsonInfo.assessmentId = $(this).data().id;
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssessmentServlet', jsonInfo, loadLessonAssessment);
	}
	
	$('#allStudentsButton').click(function() {
		individualStudentGradesView = false;
		if (haveAllStudentGrades) {
			$('#studentGradesBox').show();
			$('#individualStudentGradesBox').hide();
		} else {
			showStudentGrades();
		}
	});
	
	$('.individualStudentGrade').live('change', function() {
		
		if (paymentNeeded == false) {
			
			$(this).css({'background-color':'#FFEB9C'});
			var eData = $(this).data();
			jsonData = new Object();
			jsonData.gradePeriodId = eData.gradePeriodId;
			jsonData.subjectId = eData.subjectId;
			jsonData.scoreId = eData.scoreId; 
			jsonData.studentId = eData.studentId;
			jsonData.totalPoints = $.trim($(this).val());
			jsonData.type = eData.type;
			jsonData.assignmentId = eData.assignmentId;
			jsonData.assessmentId = eData.assessmentId;
			jsonData.token = '#' + this.id;
			if ((jsonData.totalPoints == "" && jsonData.scoreId == 0) || isNaN(jsonData.totalPoints)) {
				$(this).css({'background-color':'#FFC7CE'});
			} else {
				$.post('updateStudentScoreServlet', jsonData, individualStudentScoreUpdated.bind(this), "json");
			}
		} else {
			showExpiredMsg();
		}
	});
	
	function individualStudentScoreUpdated(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(data.token).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			haveAllStudentGrades = false;
			$(this).css({'background-color':'#E2EFDA'});
			$(this).data().scoreId = data.studentScore.scoreId;
			if (currentGradingPeriodId != 0) {
				$.each(data.gradePeriodScores, function(i, gps) {
					if (gps.gradePeriodId == currentGradingPeriodId) {
						$('#individualStudentLetterGrade').text(gps.letterGrade);
						$('#individualStudentOverrideScore').val(gps.percentage);
						return false;
					}
				});
			} else {
				$('#individualStudentLetterGrade').text(data.letterGrade);
				$('#individualStudentOverrideScore').val(data.percentage);
			}
			
		}
	}
	
	$('#individualStudentOverrideScore').live('change', function() {
		if (paymentNeeded == false) {
			var overrideScoreId = '#' + this.id;
			$(overrideScoreId).css({'background-color':'#FFEB9C'});
			var jsonData = $(this).data();
			jsonData.percentage = $.trim($(this).val());
			jsonData.token = overrideScoreId;
			$.post('overrideScoreServlet', jsonData, individualOverrideScoreUpdated.bind(this), "json");
		} else {
			showExpiredMsg();
		}
	});
	
	function individualOverrideScoreUpdated(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(data.token).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			haveAllStudentGrades = false;
			
			if (currentGradingPeriodId != 0) {
				$.each(data.gradePeriodScores, function(i, gps) {
					if (gps.gradePeriodId == currentGradingPeriodId) {
						data.percentage = gps.percentage;
						data.letterGrade = gps.letterGrade;
						data.overrideScoreId = gps.overrideScoreId;
						return false;
					}
				});
			}
			
			$('#individualStudentOverrideScore').val(data.percentage);
			$('#individualStudentLetterGrade').text(data.letterGrade);
			$(this).data().overrideScoreId = data.overrideScoreId;
			$(data.token).css({'background-color':'#E2EFDA'});
		}
	}
	
	$('.individualStudentStandardGrade').live('change', function() {
		
		if (paymentNeeded == false) {
			
			currentScoreId = '#' + this.id;
			$(currentScoreId).css({'background-color':'#FFEB9C'});
			
			jsonData = $(this).data();
			jsonData.token = currentScoreId;
			jsonData.standardScoreWeightId = 0;
			var typeFound = false;
			var typeCount = 0;
			
			if ($.trim($(currentScoreId).val()) == "") {
				typeFound = true;
			} else {

				if (allStandardWeights != null) {

					for (var x=0; x<allStandardWeights.length; x++) {
						if (allStandardWeights[x].subjectId == gradesClassPicked) {
							typeCount++;
							if (allStandardWeights[x].code == $.trim($(currentScoreId).val())) {
								jsonData.standardScoreWeightId = allStandardWeights[x].id;
								typeFound = true;
								break;
							}
						}
					}

					// if no standard weights for class, check if standard weights for year
					if (typeCount == 0) {
						for (var x=0; x<allStandardWeights.length; x++) {
							if (allStandardWeights[x].subjectId == 0) {
								if (allStandardWeights[x].code == $.trim($(currentScoreId).val())) {
									jsonData.standardScoreWeightId = allStandardWeights[x].id;
									typeFound = true;
									break;
								}
							}
						}
					}
					
				}									
			}
			
			if (typeFound == true) {
				$.post('updateStandardScoreServlet', jsonData, individualStudentStandardScoreUpdated.bind(this), "json");
			} else {
				$(currentScoreId).css({'background-color':'#FFC7CE'});
			}
			
		} else {
			showExpiredMsg();
		}
		
	});
	
	function individualStudentStandardScoreUpdated(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(this).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			haveAllStudentGrades = false;
			$(this).css({'background-color':'#E2EFDA'});
			$(this).data().standardScoreId=data.standardScores.standardScoreId;
		}
	}
	
	$.fn.max = function(selector) { 
	    return Math.max.apply(null, this.map(function(index, el) { return selector.apply(el); }).get()); 
	}
	
	$("input[tabindex]").live('keyup', function (e) {
		var max = $('input[tabIndex]').max(function(){ return $(this).attr('tabIndex'); })
	    if (e.keyCode == 13) {
	    	var nextTabIndex = this.tabIndex;
	    	var nextElement;
	    	 do {
	    		 nextTabIndex += 1;
		    	 nextElement = $('input[tabIndex="' + nextTabIndex + '"]');
	    	 } while(!nextElement.is(':visible') && nextTabIndex <= max);

	    	 if (nextElement.length > 0) {
	        	 nextElement.focus().select();
	         } else {
	            $('[tabIndex="1"]').focus().select();
	         }
	    }
	});
	
	$('#studentGradesAverageRow').live('update', function() {
		$(this).find('td').each(function(i, item){
			if ($(this).hasClass('gradeAverage')) {
				var grades = [];
				var shouldCalcLetterGrade = false;
				$('#studentGradesTableBody tr td:nth-child(' + (i + 1) +')').find('input.overrideScore, input.studentGrade, input.overridePeriodScore').each(function(){
					if (!shouldCalcLetterGrade && ($(this).hasClass('overrideScore') || $(this).hasClass('overridePeriodScore'))) {
						shouldCalcLetterGrade = true;
					}
					if ($.trim($(this).val()) != '') {
						grades.push(+$(this).val());
					}
				});
				var avg = grades.reduce(average,null);
				$(this).html('');
				if (avg != null) {
					var percentage = '' + (Math.round(avg*10)/10);
					if (shouldCalcLetterGrade) {
						$(this).css('text-align', 'center');
						$(this).append($('<div/>').css({'border' : '1px solid #FFFFFF', 'display' : 'inline-block', 'width' : '42px', 'margin-right' : '20px', 'text-align' : 'right'}).text(percentage));
						$(this).append($('<div/>').addClass('letterGrade').css({'display' : 'inline-block', 'width' : '10px'}).text(calculateLetterGrade(avg)));
					} else {
						var totalPoints = $(this).data('totalPoints');
						if (totalPoints) {
							percentage += "/" + totalPoints; 
						}
						$(this).html(percentage);
					}
				}
			}
		});
	});
	
	function calculateLetterGrade(value) {
		var letterGrade = '';
		if (letterGrades) {
			if (value > 0) {
				$.each(letterGrades, function() {
					if (this.percent <= value) {
						letterGrade = this.name;
						return false;
					}
				});
			} 
		}
		return letterGrade;
	}
	
	function average(p,c,i,a){ 
		return p + (c/a.length)
	};
	
	$('#studentGradesNavButton, #schoolStudentGrades').click(function() {
		browserButton = false;
		window.location.hash = "grade";
		showStudentGrades();
	});	
	
	function showStudentGrades() {
		if (userMode == 'A') {
			showSchoolStudentsForGradesView();
		} else {
			classPickType = 'grades';
			$('#pcall').hide();

			if (gradesClassPicked == "") {
				if ((currentClassId == "" || currentClassId == 0) && classId.length > 0) {currentClassId = classId[0];}
				gradesClassPicked = currentClassId;
				$('#gradesClassLabel').html($('#pc'+gradesClassPicked).html());
				$('#gradesChangeClass').css({'background-color':$('#pc'+gradesClassPicked).css('backgroundColor'),'border':'0px','color':'white'});
				$('#gradesClassImg').html('<img src="images/downwhite2.png">');
			}

			if (!haveAllStudentGrades || gradesClassPicked != currentGradesClassId || gradesPeriodPicked != currentGradingPeriodId) {
				jsonData = new Object();
				jsonData.subjectId = gradesClassPicked;
				jsonData.gradePeriodId = gradesPeriodPicked;
				action = 'getStudentGrades';
				showLoading();
				$.getJSON('getStudentScoresServlet', jsonData, loadStudentGrades);
			} else {
				hideMessage();
				hideAll();
				$('#studentGradesView').show();
				
				var boxHeight = $(window).height() - $('#gradesChangeClass').offset().top - 130;
				if (boxHeight < 200) {boxHeight = 200;}
				$('#individualStudentGradesBox').hide();
				$('#studentGradesBox').css({'height':boxHeight+'px'}).show();
			}
		}
	}	
	
	function filterSchoolStudentsForGradesView() {
		var gradeLevel = $('#pickGradeLevel').data('selected-level');
		var searchString = $('#filterStudents').val().toLowerCase().replace(/[^A-Za-z]/gi, '');
		$('#schoolStudents li').show();
		
		var applyFilter = false;
		var filter = ':not(';
		if (gradeLevel != ''){
			filter += '[data-grade-level="' + gradeLevel + '"]';
			applyFilter = true;
		} 
		if ($.trim(searchString) != '') {
			filter += '[data-index*="' + searchString + '"]';
			applyFilter = true;
		}
		filter += ')';
		
		if (applyFilter) {
			$('#schoolStudents').find(filter).hide();
		}
	}
	
	function showSchoolStudentsForGradesView() {
		hideAll();
		if (!haveSchoolStudentsForGradesView) {
			showLoading();
			$.getJSON('getStudentsServlet', {userMode : userMode}, loadStudentsForGradesView);
		} else {
			$('#schoolStudentGradesView').show();
		}
		
	}
	
	function loadStudentsForGradesView(data) {
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			var $ul = $('#schoolStudents');
			$.each(data.students, function() {
				var fullName = this.lastName + ', ' + this.firstName;
				var fullNameIndex = fullName.toLowerCase().replace(/[^A-Za-z]/gi, '');
				var gradeLevel = this.gradeLevel ? this.gradeLevel : '';
				$ul.append($('<li data-index="' + fullNameIndex + '"' + ' data-grade-level="' + gradeLevel +'">').text(this.lastName + ', ' + this.firstName).data(this));
			});
			$('#schoolStudentGradesView').show();
			haveSchoolStudentsForGradesView = true;
		}
	}

	$('#filterStudents').keyup(function(){
		filterSchoolStudentsForGradesView();
	});
	
	$('#schoolStudents > li').live('click', function() {
		var studentId = $(this).data().studentId;
		if (currentGradesStudentId != studentId) {
			currentGradesStudentId = studentId;
			showLoading();
			$.getJSON('getScoresForStudentServlet', { studentId : studentId }, loadSchoolStudentGrades.bind(this));
		} else {
			$('#schoolStudentGradesBox').show();
			var boxHeight = $(window).height() - 230;
			if (boxHeight < 200) {boxHeight = 200;}
			$('#schoolStudentGradesBox').css({'height':boxHeight+'px'});
		}
	});
	
	function loadSchoolStudentGrades(data) {
		
		var sLine = "<tr><td class='sgsHeader' style='padding:5px; text-align:left; border-width:1px 0px 1px 1px; border-style:solid; color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#0057C1; border-color:#0057C1;'>";
		var sGrade = "</td><td class='sgsHeader' style='padding:5px; text-align:right; border-width:1px 1px 1px 0px; border-style:solid; border-color:#0057C1; color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#0057C1;'><div style='width:90px;'>";

		var cLine = "<tr><td colspan='2' style='padding:5px 5px 5px 15px; text-align:left; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-style:italic; background-color:#DBDFE8;'>";

		var iLine = "<tr><td style='padding:5px 5px 5px 25px; text-align:left; border-width:0px 0px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF;'>";
		var iGrade = "</td><td style='padding:5px; text-align:right; border-width:1px 1px 1px 0px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF;'>";
		var eLine = "</td></tr>";

		var s2Line = "<tr><td colspan='3' style='padding:5px; text-align:left; border-width:1px 0px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#DBDFE8;'>";
		var c2Line = "<tr><td colspan='3' style='padding:5px; text-align:left; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-style:italic; background-color:#F4F4F6;'>";
		var s1Cell = "<tr><td style='padding:5px; text-align:center; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8;'><div style='width:75px; text-align:center;'>";
		var s2Cell = "</div></td><td style='padding:5px; text-align:left; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;'>";
		var s3Cell = "</td><td style='padding:5px; text-align:center; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;'><div style='width:75px; text-align:center;'>";
		var e2Line = "</div></td></tr>";
		
		hideLoading();
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			$('#selectStudentMessage').hide();
			$('#selecteSchoolStudentContainer').show();
			$('.selectedSchoolStudent').html($(this).html()).closest('tr').show();
			$('#classScores').css('margin-top', '95px');
			$('#schoolStudentGradesBox').html('');
			$('#schoolStudentGradesBox').data('standards', data.standards);
			
			if (data.teachers && data.teachers.length > 0) {
				$.each(data.teachers, function() {
					var teacherId = this.teacherId;
					var $teacherContainer = $('<div/>').addClass('sgsTeacher sgsTeacher' + this.teacherId);
					var $gradesSummary = $('<table/>');
					var gradePeriods = getGradePeriods(data, this.teacherId);
					var $gradesSummaryHeader = $('<thead>').append($('<tr><th></th></tr>').append($('<th><div>' + this.displayName +'</div><div>View Details</div></th>').data(createElementData(teacherId, 0, 0))));
					var $gradesSummaryBody = $('<tbody/>');
					if(gradePeriods.length > 0) {
						var $headerRow = $gradesSummaryHeader.find('tr');
						$.each(gradePeriods, function(){
							$headerRow.append($('<th></th>').text(this.gradePeriodName).addClass('sgsGradePeriod').data(createElementData(teacherId, this.gradePeriodId, 0)));
						});
						$headerRow.append($('<th>Overall</th>').addClass('sgsGradePeriod').data(createElementData(teacherId, 0, 0)));
					} else {
						$gradesSummaryHeader.find('tr').append($('<th>Overall</th>').data(createElementData(teacherId, 0, 0)));
					}
					var subjects = getSubjects(data, teacherId);
					$.each(subjects, function(i){
						var hasGradePeriod = false;
						var subjectColor = (this.color<=45?colors1[this.color]:this.color);
						var $subjectRow = $('<tr></tr>').addClass((i % 2 == 0) ? 'odd' : 'even');
						$subjectRow.append($('<td/>').data(createElementData(teacherId, 0, this.id)).css('background-color', subjectColor));
						$subjectRow.append($('<td>' + this.name + '</td>').data(createElementData(teacherId, 0, this.id)));
						$.each(this.objects, function(){
							if(!hasGradePeriod && this.gradePeriod) {
								hasGradePeriod = true;
							} 
							var gradePeriodId = this.gradePeriod ? this.gradePeriod.gradePeriodId : 0;
							var $percentage = $('<td/>').data(createElementData(teacherId, gradePeriodId, this.subjectId));
							$percentage.append($('<div></div>').text(this.percentage + '%'));
							$percentage.append($('<div></div>').text(this.letterGrade));
							if (hasGradePeriod) {
								$percentage.addClass('sgsGradePeriod');
							}
							$subjectRow.append($percentage);
						});
						
						if (hasGradePeriod) {
							var $overallPercentage = $('<td/>').data(createElementData(teacherId, 0, this.id)).addClass('sgsGradePeriod');
							$overallPercentage.append($('<div></div>').text(this.overallPercentage + '%'));
							$overallPercentage.append($('<div></div>').text(this.overallLetterGrade));
							$subjectRow.append($overallPercentage);
						}
						
						$gradesSummaryBody.append($subjectRow);
					});
					
					$gradesSummary.append($gradesSummaryHeader);
					$gradesSummary.append($gradesSummaryBody);
					$teacherContainer.append($gradesSummary);
					
					
					$('#schoolStudentGradesBox').append($teacherContainer);
					
					if (data.subjects && data.subjects.length > 0) {
						for (var x=0; x<data.subjects.length; x++) {
							var subject = data.subjects[x];
							if (subject.teacher.id == this.teacherId) {
								var $subject = $("<table style='margin-bottom:20px; border-collapse:collapse;'/>").data(data.subjects[x]).addClass('studentGradesSubjects');
								$subject.append("<col width='100%' />");
								$subject.append("<col width='100px' />");
								var $subjectTBody = $("<tbody style='background-color:white;'/>");
								var teacher = data.subjects[x].teacher;
								var gradePeriod = data.subjects[x].gradePeriod;
								var gradePeriodName = gradePeriod ? (' - ' + gradePeriod.name) : '';

								var letterGrade = data.subjects[x].letterGrade;
								if (letterGrade == null) {letterGrade = "";}
								
								$subjectTBody.append(sLine + data.subjects[x].name + gradePeriodName + sGrade + data.subjects[x].percentage + "%&nbsp;&nbsp;" + letterGrade + e2Line);
				
								if (data.subjects[x].scoreWeights != null && data.subjects[x].scoreWeights.length > 0) {
									for (var y=0; y<data.subjects[x].scoreWeights.length; y++) {
										var type = data.subjects[x].scoreWeights[y].type;
										$subjectTBody.append($(cLine + data.subjects[x].scoreWeights[y].name + " (" + data.subjects[x].scoreWeights[y].percentage + "%)" + eLine).addClass('sgsClassWork').data('type', type));
										if (data.subjects[x].scoreWeights[y].items != null && data.subjects[x].scoreWeights[y].items.length > 0) {
											for (var z=0; z<data.subjects[x].scoreWeights[y].items.length; z++) {
												$subjectTBody.append($(iLine + data.subjects[x].scoreWeights[y].items[z].title + "&nbsp;" + data.subjects[x].scoreWeights[y].items[z].score + iGrade + data.subjects[x].scoreWeights[y].items[z].percentage + "%" + eLine).addClass('sgsClassWork').data('type', type));
											}
										}
									}
								}
								
								if (data.subjects[x].items != null && data.subjects[x].items.length > 0) {
									for (var z=0; z<data.subjects[x].items.length; z++) {
										$subjectTBody.append(iLine + data.subjects[x].items[z].title + "&nbsp;" + data.subjects[x].items[z].score + iGrade + data.subjects[x].items[z].percentage + "%" + eLine);
									}
								}
								
								var subjectColor = (subject.color<=45?colors1[subject.color]:subject.color);
								if (subjectColor) {
									$subjectTBody.find('.sgsHeader').css({'background-color' : subjectColor, 'border-color' : subjectColor});
								}
				
								$subject.append($subjectTBody);
								$('#classScores').append($subject);
							}
						}
					}
				});
			}
		}
	}
	
	$('.studentGrade').live('change', function() {
		if (paymentNeeded == false) {
			$(this).css({'background-color':'#FFEB9C'});
			var scoreData = $(this).data();
			jsonData = new Object();
			jsonData.gradePeriodId = scoreData.gradePeriod ? scoreData.gradePeriod.gradePeriodId : currentGradingPeriodId;
			jsonData.subjectId = scoreData.subjectId;
			jsonData.scoreId = scoreData.scoreId; 
			jsonData.studentId = scoreData.studentId;
			jsonData.totalPoints = $.trim($(this).val());
			jsonData.type = scoreData.type;
			jsonData.assignmentId = scoreData.assignmentId;
			jsonData.assessmentId = scoreData.assessmentId;
			if ((jsonData.totalPoints == "" && jsonData.scoreId == 0) || isNaN(jsonData.totalPoints)) {
				$(this).css({'background-color':'#FFC7CE'});
			} else {
				$.post('updateStudentScoreServlet', jsonData, studentScoreUpdated.bind(this), "json");
			}
		} else {
			showExpiredMsg();
		}
	});

	function studentScoreUpdated(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(this).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			currentGradesStudentId = '';
			$(this).css({'background-color':'#E2EFDA'});
			$(this).data().scoreId = data.studentScore.scoreId;
			var token = '#' + this.id;
			var pos = token.indexOf("m");
			if (pos == -1) {pos = token.indexOf("g");}
			var ls = "#overrideScore" + token.substring(3,pos);
			if (currentGradingPeriodId != 0) {
				$.each(data.gradePeriodScores, function(i, gps) {
					if (gps.gradePeriodId == currentGradingPeriodId) {
						data.percentage = gps.percentage;
						data.letterGrade = gps.letterGrade;
						return false;
					}
				});
			}
			$(ls).val(data.percentage);
			$(ls+'x2').html("0");
			if (letterGrades != null && letterGrades.length > 0) {$(ls+'x1').html(data.letterGrade);}
			var $gradeRow = $(this).closest('tr');
			$.each(data.gradePeriodScores, function(i, gps) {
				$gradeRow.find('.overridePeriodScore' + gps.gradePeriodId).val(gps.percentage).data(gps);
				$gradeRow.find('.letterGrade' + gps.gradePeriodId).html(gps.letterGrade);
			});
			
			$('#studentGradesAverageRow').trigger('update');
		}
	}

	$('.standardGrade').live('change', function() {
		
		if (paymentNeeded == false) {
			
			currentScoreId = '#' + this.id;
			$(currentScoreId).css({'background-color':'#FFEB9C'});
			
			jsonData = new Object();
			jsonData.token = currentScoreId;
			jsonData.standardScoreId = $(currentScoreId+"x1").html();
			jsonData.standardDBId = $(currentScoreId+"x2").html(); 
			jsonData.studentId = $(currentScoreId+"x4").html();
			jsonData.assignmentId = $(currentScoreId+"x5").html();
			jsonData.assessmentId = $(currentScoreId+"x6").html();
			
			if (jsonData.assignmentId == 0) {
				jsonData.type = "m";
			} else {
				jsonData.type = "g";
			}

			jsonData.standardScoreWeightId = 0;
			var typeFound = false;
			var typeCount = 0;
			
			if ($.trim($(currentScoreId).val()) == "") {
				typeFound = true;
			} else {

				if (allStandardWeights != null) {

					for (var x=0; x<allStandardWeights.length; x++) {
						if (allStandardWeights[x].subjectId == gradesClassPicked) {
							typeCount++;
							if (allStandardWeights[x].code == $.trim($(currentScoreId).val())) {
								jsonData.standardScoreWeightId = allStandardWeights[x].id;
								$(currentScoreId+"x3").html(allStandardWeights[x].id);
								typeFound = true;
								break;
							}
						}
					}

					// if no standard weights for class, check if standard weights for year
					if (typeCount == 0) {
						for (var x=0; x<allStandardWeights.length; x++) {
							if (allStandardWeights[x].subjectId == 0) {
								if (allStandardWeights[x].code == $.trim($(currentScoreId).val())) {
									jsonData.standardScoreWeightId = allStandardWeights[x].id;
									$(currentScoreId+"x3").html(allStandardWeights[x].id);
									typeFound = true;
									break;
								}
							}
						}
					}
					
				}									
				
			}
			
			if (typeFound == true) {
				$.post('updateStandardScoreServlet', jsonData, studentStandardScoreUpdated, "json");
			} else {
				$(currentScoreId).css({'background-color':'#FFC7CE'});
			}
			
		} else {
			showExpiredMsg();
		}
		
	});
	
	function studentStandardScoreUpdated(data) {
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(data.token).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			currentGradesStudentId = '';
			$(data.token).css({'background-color':'#E2EFDA'});
			$(data.token+"x1").html(data.standardScores.standardScoreId);
		}
		
	}

	$('.overrideScore').live('change', function() {
		
		if (paymentNeeded == false) {
			
			var overrideScoreId = '#' + this.id;
			$(overrideScoreId).css({'background-color':'#FFEB9C'});
			
			jsonData = new Object();
			jsonData.overrideScoreId = $(overrideScoreId+"x2").html(); 
			jsonData.studentId = $(overrideScoreId+"x3").html();
			jsonData.subjectId = currentGradesClassId;
			jsonData.gradePeriodId = currentGradingPeriodId;
			jsonData.percentage = $.trim($(overrideScoreId).val());
			jsonData.token = overrideScoreId;
			
			$.post('overrideScoreServlet', jsonData, overrideScoreUpdated, "json");
			
		} else {
			showExpiredMsg();
		}
		
	});
	
	function overrideScoreUpdated(data) {
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(data.token).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			currentGradesStudentId = '';
			$(this).data().overrideScoreId = data.overrideScoreId;
			$(data.token).css({'background-color':'#E2EFDA'});
			$(data.token+"x2").html(data.overrideScoreId);
			$(data.token).val(data.percentage);
			if (letterGrades != null && letterGrades.length > 0) {$(data.token+"x1").html(data.letterGrade);}
			$('#studentGradesAverageRow').trigger('update');
		}
	}
	
	$('.overridePeriodScore').live('change', function() {
		if (paymentNeeded == false) {
			$(this).css({'background-color':'#FFEB9C'});
			var data = $(this).data();
			jsonData = new Object();
			jsonData.overrideScoreId = data.overrideScoreId; 
			jsonData.studentId = data.studentId;
			jsonData.subjectId = data.subjectId;
			jsonData.gradePeriodId = data.gradePeriodId;
			jsonData.percentage = $(this).val();
			$.post('overrideScoreServlet', jsonData, overridePeriodScoreUpdated.bind(this), "json");
		} else {
			showExpiredMsg();
		}
	});
	
	function overridePeriodScoreUpdated(data) {
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else if (data.scoreOK == "false" || data.scoreOK == false) {
			$(this).css({'background-color':'#FFC7CE'});
		} else {
			haveSortScoresData = false;
			currentGradesStudentId = '';
			$(this).css({'background-color':'#E2EFDA'});
			var scoreData = $(this).data();
			var that = this;
			var $letterGrade = $(that).closest('td').find('.letterGrade').html('');
			$.each(data.gradePeriodScores, function(i, gps) {
				if (gps.gradePeriodId == scoreData.gradePeriodId) {
					scoreData.overrideScoreId = gps.overrideScoreId;
					$(that).val(gps.percentage);
					$letterGrade.html(gps.letterGrade);
					return false;
				}
			});
			
			var $overrideScore = $(this).closest('tr').find('.overrideScore').val(data.percentage);
			var token = '#' + $overrideScore.attr('id');
			$(token+"x2").html(data.overrideScoreId);
			if (letterGrades != null && letterGrades.length > 0) {$(token+"x1").html(data.letterGrade);}
			$('#studentGradesAverageRow').trigger('update');
		}
		
	}

	$('#gradesChangeClass').click(function() {
		$('#pickClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
		changePickClass = true;
	});

	$('#gradesChangePeriod').click(function() {
		$('#pickGradingPeriod').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
		changePickPeriod = true;
	});
	
	$('#hsStandards').click(function() {
		if ($('#hsStandards').html() == "Hide Standards") {
			$('.standardGradeCol').hide();
			$('.standardGradeRow').hide();
			$('#hsStandards').html("Show Standards");			
		} else {
			$('.standardGradeRow').show();
			$('#hsStandards').html("Hide Standards");
			
			// note that for prior or next functions, we adjust the pos so that it does not change the current item displayed
			
			switch (asgGradesButtonId) {
				case "allAssignments": allAssignments(); break;
				case "noAssignments": noAssignments(); break;
				case "priorAssignment": asgGradeColsPos++; priorAssignment(); break;
				case "nextAssignment": asgGradeColsPos--; nextAssignment(); break;
			}

			switch (asmGradesButtonId) {
				case "allAssessments": allAssessments(); break;
				case "noAssessments": noAssessments(); break;
				case "priorAssessment": asmGradeColsPos++; priorAssessment(); break;
				case "nextAssessment": asmGradeColsPos--; nextAssessment(); break;
			}
			
		}
	});
		
	$('#addGradingPeriod').live('click', function() {
		addGradingPeriod();		
	});
	
	function addGradingPeriod() {
			
		action = "newGradingPeriod";
		$('#deleteGradingPeriod').hide();
	
		clearNotification('#gradingPeriodErrorMsg');
		
		$('#gradingPeriodName').val('');	
		$('#gradingPeriodStartDate').val('');
		$('#gradingPeriodEndDate').val('');
			
		showBox('#editGradingPeriodBox', 10);
		
		$('#gradingPeriodName').focus();	
	
	}
	
	$('.editGradingPeriod').live('click', function(e) {
		
		e.stopPropagation();
		$('#pickGradingPeriod').hide();
		
		currentEditGradePeriodId = this.id.substr(4);

		action = "updateGradingPeriod";
		$('#deleteGradingPeriod').show();
		
		clearNotification('#gradingPeriodErrorMsg');
	
		$('#gradingPeriodName').val($('#' + this.id.substr(1) + '0').html());	
		$('#gradingPeriodStartDate').val($('#' + this.id.substr(1) + '1').html());
		$('#gradingPeriodEndDate').val($('#' + this.id.substr(1) + '2').html());
			
		showBox('#editGradingPeriodBox', 10);
		
		$('#gradingPeriodName').focus();	
		
	});
		
		
	$('#applyGradingPeriod').click(function() {
	
		var valError = false;
		clearNotification('#gradingPeriodErrorMsg');
	
		var bDate = formatDateToSave($('#gradingPeriodStartDate').val());
		if (bDate == "") {
 			valError = true;
 			showNotification('#gradingPeriodErrorMsg', 'Please enter a start date');
		} else if (valDate(bDate) == false) {
 			valError = true;
 			showNotification('#gradingPeriodErrorMsg', 'Please enter a valid start date');
		}
	
		var bDate = formatDateToSave($('#gradingPeriodEndDate').val());
		if (bDate == "") {
 			valError = true;
 			showNotification('#gradingPeriodErrorMsg', 'Please enter an end date');
		} else if (valDate(bDate) == false) {
 			valError = true;
 			showNotification('#gradingPeriodErrorMsg', 'Please enter a valid end date');
		}

		if ($.trim($('#gradingPeriodName').val()) == '') {
			valError = true;
			showNotification('#gradingPeriodErrorMsg', "Please enter a name");
		}
		
		if (valError == false) {
			jsonData = new Object ();
			jsonData.name = $.trim($('#gradingPeriodName').val());
			jsonData.startDate = formatDateToSave($('#gradingPeriodStartDate').val())
			jsonData.endDate = formatDateToSave($('#gradingPeriodEndDate').val());
			jsonData.yearId = userInfo.yearId;
			jsonData.currentGradingPeriodId = currentGradingPeriodId;
			
			if (paymentNeeded == false) {
				showLoading();
				if (action == "newGradingPeriod") {
					$.post('addGradePeriodServlet', jsonData, loadGradingPeriods.bind(this), "json");
				} else {
					jsonData.gradePeriodId = currentEditGradePeriodId;
					$.post('updateGradePeriodServlet', jsonData, loadGradingPeriods.bind(this), "json");
				}
			} else {
				showExpiredMsg();
			}
		}
		
	});
		
	$('#deleteGradingPeriod').click(function() {
		jsonData = new Object();
		jsonData.gradePeriodId = currentEditGradePeriodId;
		jsonData.currentGradingPeriodId = currentGradingPeriodId;
		
		if (paymentNeeded == false) {
			action = 'deleteGradingPeriod';
			showLoading();
			$.getJSON('deleteGradePeriodServlet', jsonData, loadGradingPeriods.bind(this));
		} else {
			showExpiredMsg();
		}
	});
	
	$('#cancelGradingPeriod').click(function() {
		hideBox('#editGradingPeriodBox', 10);
	});
	
	$('#closeGradingPeriod').click(function() {
		hideBox('#editGradingPeriodBox', 10);
	});
	
	function loadGradingPeriods(data) {
	
		hideLoading();
	
		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
				
				hideBox('#editGradingPeriodBox', 10);
				loadGradingPeriods2(data.gradingPeriods);
				currentGradingPeriodId = 0;
				if (data != null && data.currentGradingPeriodId != null) {
					currentGradingPeriodId = data.currentGradingPeriodId;
					gradesPeriodPicked = currentGradingPeriodId;
				}
				storage.set('gradingPeriodId', currentGradingPeriodId);
				if (currentGradingPeriodId != 0) {
					$('#gradesPeriodLabel').html($('#pgp'+ currentGradingPeriodId + '0').html());
				} else {
					$('#gradesPeriodLabel').html("All Periods");
				}
				showAction();
				
				haveSortScoresData = false;
				
				if (individualStudentGradesView) {
					currentGradesStudentId = '';
					showIndividualStudentGrades();
				} else {
					haveAllStudentGrades = false;
					showStudentGrades();
				}
				
			}
		}		

	}

	function loadGradingPeriods2(data) {
		
		$('#pickGradingPeriod').html('');
		$('#gradeReportPeriod').html('<option value="0">All Periods</option>');
		$('#overallGradeReportPeriod').html('<option value="0">All Periods</option>');

		if (data != null) {
			$('#pickGradingPeriod').append("<div id='pgp0' class='periodPicker newButton' style='margin:5px;'><table style='border-collapse:collapse;'><tbody><tr><td style='width:100%;'><p style='line-height:normal;' id='pgp00'>All Periods</p><p style='display:none;' id='pgp01'>01/01/0001</p><p style='display:none;' id='pgp02'>12/31/9999</p></td><td style='padding:5px; height: 35px; width: 45px;'></td></tr></tbody></table></div>");
		    for (var x=0; x<data.length; x++) {
				$('#gradeReportPeriod').append('<option value="' + data[x].gradePeriodId + '">' + data[x].name + '</option>');
				$('#overallGradeReportPeriod').append('<option value="' + data[x].gradePeriodId + '">' + data[x].name + '</option>');
		    	var ls = '<div id="pgp' + data[x].gradePeriodId + '" class="periodPicker newButton" style="margin:5px;">';
		    	ls = ls + '<table style="border-collapse:collapse;"><tr><td style="width:100%;">';
		    	ls = ls + '<p style="line-height:normal;" id="pgp' + data[x].gradePeriodId + '0">' + data[x].name + '</p>';
		    	ls = ls + '<p style="display:none;" id="pgp' + data[x].gradePeriodId + '1">' + formatDateToShow(data[x].startDate) + '</p>';
		    	ls = ls + '<p style="display:none;" id="pgp' + data[x].gradePeriodId + '2">' + formatDateToShow(data[x].endDate) + '</p>';
		    	ls = ls + '</td>';
		    	ls = ls + '<td style="padding:5px;"><img class="editGradingPeriod" id="epgp' + data[x].gradePeriodId + '" src="images/edit.png" style="cursor:pointer;"></td></tr></table></div>'
				$('#pickGradingPeriod').append(ls);
		    }
		}
		$('#pickGradingPeriod').append('<div id="addGradingPeriod" class="newButton" style="margin:5px;">Add Period</div>');

		
	}

	$('.periodPicker').live('click', function(e) {
		var ls = '#' + this.id + "0"
		$('#gradesPeriodLabel').html($(ls).html());
		gradesPeriodPicked = this.id.substr(3);
		
		storage.set('gradingPeriodId', gradesPeriodPicked);
		
		if (individualStudentGradesView) {
			showIndividualStudentGrades();
		} else {
			haveSortScoresData = false;
			currentGradesStudentId = '';
			showStudentGrades();
		}
	});	

	$('.scoreWeighting').click(function() {
		
		clearNotification('#scoreWeightingErrorMsg');
		
		if (window.location.hash == '#assignment') {
			$('#scoreWeightLabel').html($('#assignmentClassLabel').html());
			if (assignmentClassPicked == "pcall") {
				scoreWeightSubjectId = 0; 
			} else {
				scoreWeightSubjectId = assignmentClassPicked; 
			}
		} else {
			$('#scoreWeightLabel').html($('#assessmentClassLabel').html());
			if (assessmentClassPicked == "pcall") {
				scoreWeightSubjectId = 0; 
			} else {
				scoreWeightSubjectId = assessmentClassPicked;
			}
		}
	
		loadEditScoreWeights();

		showBox('#scoreWeightingBox', 10);
		
	});

	$('#sampleScoreWeights').click(function() {
		addAssignmentWeight("Homework", "10");
		addAssignmentWeight("Project", "20");
		addAssessmentWeight("Quiz", "30");
		addAssessmentWeight("Exam", "40");
		addStandardWeight("D", "Does not meet");
		addStandardWeight("M", "Meets");
		addStandardWeight("E", "Exceeds");
	});
	
	$('#cancelScoreWeighting').click(function() {
		hideBox('#scoreWeightingBox', 10);
	});
	
	$('#closeScoreWeighting').click(function() {
		hideBox('#scoreWeightingBox', 10);
	});
	
	$('#addAssignmentWeight').click(function() {
		addAssignmentWeight("", "");
	});

	function addAssignmentWeight(newName, newPercent) {
		
		var newPos;
		if (assignmentWeights == null) {
			assignmentWeights = new Array();
			newPos = 0;
		} else {
			newPos = assignmentWeights.length;
		}

		assignmentWeights[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="nameAssignmentWeight' + newPos + '" size="45" value="' + newName + '">';
		ls = ls + '<p style="display:none;" id="idAssignmentWeight' + newPos + '">0</p></td>';
		ls = ls + '<td><input type="text" id="percentAssignmentWeight' + newPos + '" size="5" value="' + newPercent + '"></td>';
		ls = ls + '<td><img class="removeAssignmentWeight" id="removeAssignmentWeight' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#assignmentWeightBody').append(ls);
		
	}	

	$('.removeAssignmentWeight').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substr(22);
		var aPos = parseInt(temp2,10);
		
		if ($('#idAssignmentWeight'+aPos).html() == 0 || confirm('Removing an existing Assignment Type will also remove it from any assignments set to this type. Are you sure you want to remove this Assignment Type?')) {
			for (var x=0; x<assignmentWeights.length; x++) {
				assignmentWeights[x].id = $('#idAssignmentWeight'+x).html();
				assignmentWeights[x].name = $('#nameAssignmentWeight'+x).val();
				assignmentWeights[x].percent = $('#percentAssignmentWeight'+x).val();
			}
			assignmentWeights.splice(aPos, 1);
			loadAssignmentWeightsTable();
		}
		
	});
	
	function loadAssignmentWeightsTable() {
		
		$('#assignmentWeightBody').html('');

		if (assignmentWeights != null) {
			for (var x=0; x<assignmentWeights.length; x++) {
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="nameAssignmentWeight' + x + '" size="45">';
				ls = ls + '<p style="display:none;" id="idAssignmentWeight' + x + '">' + assignmentWeights[x].id + '</p></td>';
				ls = ls + '<td><input type="text" id="percentAssignmentWeight' + x + '" size="5"></td>';
				ls = ls + '<td><img class="removeAssignmentWeight" id="removeAssignmentWeight' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#assignmentWeightBody').append(ls);
	
				$('#nameAssignmentWeight'+x).val(assignmentWeights[x].name);
				$('#percentAssignmentWeight'+x).val(assignmentWeights[x].percent);

			}
		}
		
	}

	$('#addAssessmentWeight').click(function() {
		addAssessmentWeight("", "");
	});

	function addAssessmentWeight(newName, newPercent) {
		
		var newPos;
		if (assessmentWeights == null) {
			assessmentWeights = new Array();
			newPos = 0;
		} else {
			newPos = assessmentWeights.length;
		}

		assessmentWeights[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="nameAssessmentWeight' + newPos + '" size="45" value="' + newName + '">';
		ls = ls + '<p style="display:none;" id="idAssessmentWeight' + newPos + '">0</p></td>';
		ls = ls + '<td><input type="text" id="percentAssessmentWeight' + newPos + '" size="5" value="' + newPercent + '"></td>';
		ls = ls + '<td><img class="removeAssessmentWeight" id="removeAssessmentWeight' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#assessmentWeightBody').append(ls);

	}

	$('.removeAssessmentWeight').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substr(22);
		var aPos = parseInt(temp2,10);
		
		if ($('#idAssessmentWeight'+aPos).html() == 0 || confirm('Removing an existing Assessment Type will also remove it from any assessments set to this type. Are you sure you want to remove this Assessment Type?')) {
			for (var x=0; x<assessmentWeights.length; x++) {
				assessmentWeights[x].id = $('#idAssessmentWeight'+x).html();
				assessmentWeights[x].name = $('#nameAssessmentWeight'+x).val();
				assessmentWeights[x].percent = $('#percentAssessmentWeight'+x).val();
			}
			assessmentWeights.splice(aPos, 1);
			loadAssessmentWeightsTable();
		}
	});
	
	function loadAssessmentWeightsTable() {
		
		$('#assessmentWeightBody').html('');

		if (assessmentWeights != null) {
			for (var x=0; x<assessmentWeights.length; x++) {
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="nameAssessmentWeight' + x + '" size="45">';
				ls = ls + '<p style="display:none;" id="idAssessmentWeight' + x + '">' + assessmentWeights[x].id + '</p></td>';
				ls = ls + '<td><input type="text" id="percentAssessmentWeight' + x + '" size="5"></td>';
				ls = ls + '<td><img class="removeAssessmentWeight" id="removeAssessmentWeight' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#assessmentWeightBody').append(ls);
	
				$('#nameAssessmentWeight'+x).val(assessmentWeights[x].name);
				$('#percentAssessmentWeight'+x).val(assessmentWeights[x].percent);

			}
		}
		
	}

	$('#addStandardWeight').click(function() {
		addStandardWeight("", "");
	});

	function addStandardWeight(newCode, newName) {
		
		var newPos;
		if (standardWeights == null) {
			standardWeights = new Array();
			newPos = 0;
		} else {
			newPos = standardWeights.length;
		}

		standardWeights[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="codeStandardWeight' + newPos + '" size="5" value="' + newCode + '">';
		ls = ls + '<p style="display:none;" id="idStandardWeight' + newPos + '">0</p></td>';
		ls = ls + '<td><input type="text" id="nameStandardWeight' + newPos + '" size="45" value="' + newName + '"></td>';
		ls = ls + '<td><img class="removeStandardWeight" id="removeStandardWeight' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#standardWeightBody').append(ls);

	}

	$('.removeStandardWeight').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substr(22);
		var aPos = parseInt(temp2,10);
		
		for (var x=0; x<standardWeights.length; x++) {
			standardWeights[x].id = $('#idStandardWeight'+x).html();
			standardWeights[x].code = $('#codeStandardWeight'+x).val();
			standardWeights[x].name = $('#nameStandardWeight'+x).val();
		}
		standardWeights.splice(aPos, 1);
		loadStandardWeightsTable();

	});
	
	function loadStandardWeightsTable() {
		
		$('#standardWeightBody').html('');

		if (standardWeights != null) {
			for (var x=0; x<standardWeights.length; x++) {
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="codeStandardWeight' + x + '" size="5">';
				ls = ls + '<p style="display:none;" id="idStandardWeight' + x + '">' + standardWeights[x].id + '</p></td>';
				ls = ls + '<td><input type="text" id="nameStandardWeight' + x + '" size="45"></td>';
				ls = ls + '<td><img class="removeStandardWeight" id="removeStandardWeight' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#standardWeightBody').append(ls);
	
				$('#codeStandardWeight'+x).val(standardWeights[x].code);
				$('#nameStandardWeight'+x).val(standardWeights[x].name);

			}
		}
		
	}

	$('#applyScoreWeighting').click(function() {
		
		var valError = false;
		clearNotification('#scoreWeightingErrorMsg');
		var totalPercent = 0;
		
		if (assignmentWeights != null) {
			for (var x=0; x<assignmentWeights.length; x++) {
	 
				if ($.trim($('#nameAssignmentWeight'+x).val()) == "") {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'Please enter a name for each assignment type');
				}
			
				var percent = $.trim($('#percentAssignmentWeight'+x).val());
				if ($.trim($('#percentAssignmentWeight'+x).val()) == "") {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'Please enter a percent for each assignment type');
				} else if (isNaN(percent) || (parseFloat(percent) != parseInt(percent))) {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'All percents must be numeric');
				}
	
				if (valError == false) {
					assignmentWeights[x].id = $('#idAssignmentWeight'+x).html();
					assignmentWeights[x].name = $.trim($('#nameAssignmentWeight'+x).val());
					assignmentWeights[x].percent = percent;
					totalPercent = totalPercent*1 + percent*1;
				}
	
			}
		}
	
		if (assessmentWeights != null) {
			for (var x=0; x<assessmentWeights.length; x++) {
	 
				if ($.trim($('#nameAssessmentWeight'+x).val()) == "") {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'Please enter a name for each assessment type');
				}
			
				var percent = $.trim($('#percentAssessmentWeight'+x).val());
				if ($.trim($('#percentAssessmentWeight'+x).val()) == "") {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'Please enter a percent for each assessment type');
				} else if (isNaN(percent) || (parseFloat(percent) != parseInt(percent))) {
					valError = true;
					showNotification('#scoreWeightingErrorMsg', 'All percents must be numeric');
				}
	
				if (valError == false) {
					assessmentWeights[x].id = $('#idAssessmentWeight'+x).html();
					assessmentWeights[x].name = $.trim($('#nameAssessmentWeight'+x).val());
					assessmentWeights[x].percent = percent;
					totalPercent = totalPercent*1 + percent*1;
				}
	
			}
		}
		
		if (valError == false && totalPercent != 100 && totalPercent != 0) {
			valError = true;
			showNotification('#scoreWeightingErrorMsg', 'Percents must total to 100');
		}
		
		if (valError == false) {

			jsonData = new Object();
			jsonData.subjectId = scoreWeightSubjectId;
			
			jsonData.assignmentWeights = new Array();
			for (var x=0; x<assignmentWeights.length; x++) {
				jsonData.assignmentWeights[x] = JSON.stringify({ id : assignmentWeights[x].id, name : assignmentWeights[x].name, percentage : assignmentWeights[x].percent });
			}
			jsonData.assessmentWeights = new Array();
			for (var x=0; x<assessmentWeights.length; x++) {
				jsonData.assessmentWeights[x] = JSON.stringify({ id : assessmentWeights[x].id, name : assessmentWeights[x].name, percentage : assessmentWeights[x].percent }); 
			}
			jsonData.standardWeights = new Array();
			for (var x=0; x<standardWeights.length; x++) {
				standardWeights[x].id = $('#idStandardWeight'+x).html();
				standardWeights[x].code = $.trim($('#codeStandardWeight'+x).val());
				standardWeights[x].name = $.trim($('#nameStandardWeight'+x).val());
				jsonData.standardWeights[x] = JSON.stringify({ id : standardWeights[x].id, code : standardWeights[x].code, name : standardWeights[x].name }); 
			}

			if (paymentNeeded == false) {
				action="updateWeights";
				showLoading();
				$.post('updateScoreWeightsServlet', jsonData, scoreWeightsUpdated, "json");
			} else {
				showExpiredMsg();
			}
			
		}

	});

	function scoreWeightsUpdated(data) {
		
		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
				hideBox('#scoreWeightingBox', 10);
				loadScoreWeights(data);
				showAction();
			}
		}		

	}

	function loadScoreWeights(data) {
		
		allAssignmentWeights = new Array();
		allAssessmentWeights = new Array();

		if (data.scoreWeights != null) {
			var gPos = 0;
			var mPos = 0;
			for (var x=0; x<data.scoreWeights.length; x++) {
				if (data.scoreWeights[x].type == "g") {
					allAssignmentWeights[gPos] = new Object();
					allAssignmentWeights[gPos].id = data.scoreWeights[x].scoreWeightId;
					allAssignmentWeights[gPos].name = data.scoreWeights[x].name;
					allAssignmentWeights[gPos].percent = data.scoreWeights[x].percentage;
					allAssignmentWeights[gPos].subjectId = data.scoreWeights[x].subjectId;
					gPos++;
				} else {
					allAssessmentWeights[mPos] = new Object();
					allAssessmentWeights[mPos].id = data.scoreWeights[x].scoreWeightId;
					allAssessmentWeights[mPos].name = data.scoreWeights[x].name;
					allAssessmentWeights[mPos].percent = data.scoreWeights[x].percentage;
					allAssessmentWeights[mPos].subjectId = data.scoreWeights[x].subjectId;
					mPos++;
				}
			}
		}

		allStandardWeights = new Array();
		if (data.standardWeights != null) {
			for (var x=0; x<data.standardWeights.length; x++) {
				allStandardWeights[x] = new Object();
				allStandardWeights[x].id = data.standardWeights[x].standardScoreWeightId;
				allStandardWeights[x].code = data.standardWeights[x].code;
				allStandardWeights[x].name = data.standardWeights[x].name;
				allStandardWeights[x].subjectId = data.standardWeights[x].subjectId;
			}
		}

	}

	function getWeightName(weightId, weightType) {
		
		var weightName = "";
		
		if (weightType == "g") {
			if (allAssignmentWeights != null && allAssignmentWeights.length > 0) {
				for (var x=0; x<allAssignmentWeights.length; x++) {
					if (allAssignmentWeights[x].id == weightId) {
						weightName = allAssignmentWeights[x].name;
						break;
					} 
				}
			}
		} else {
			if (allAssessmentWeights != null && allAssessmentWeights.length > 0) {
				for (var x=0; x<allAssessmentWeights.length; x++) {
					if (allAssessmentWeights[x].id == weightId) {
						weightName = allAssessmentWeights[x].name;
						break;
					} 
				}
			}
		}
		
		return weightName;
	}
	
	function loadEditScoreWeights() {
		
		assignmentWeights = new Array();
		assessmentWeights = new Array();
		standardWeights = new Array();

		if (allAssignmentWeights != null) {
			var iPos = 0;
			for (var x=0; x<allAssignmentWeights.length; x++) {
				if (allAssignmentWeights[x].subjectId == scoreWeightSubjectId) {
					assignmentWeights[iPos] = new Object();
					assignmentWeights[iPos].id = allAssignmentWeights[x].id;
					assignmentWeights[iPos].name = allAssignmentWeights[x].name;
					assignmentWeights[iPos].percent = allAssignmentWeights[x].percent;
					iPos++;
				}
			}
		}

		if (allAssessmentWeights != null) {
			var iPos = 0;
			for (var x=0; x<allAssessmentWeights.length; x++) {
				if (allAssessmentWeights[x].subjectId == scoreWeightSubjectId) {
					assessmentWeights[iPos] = new Object();
					assessmentWeights[iPos].id = allAssessmentWeights[x].id;
					assessmentWeights[iPos].name = allAssessmentWeights[x].name;
					assessmentWeights[iPos].percent = allAssessmentWeights[x].percent;
					iPos++;
				}
			}
		}

		if (allStandardWeights != null) {
			var iPos = 0;
			for (var x=0; x<allStandardWeights.length; x++) {
				if (allStandardWeights[x].subjectId == scoreWeightSubjectId) {
					standardWeights[iPos] = new Object();
					standardWeights[iPos].id = allStandardWeights[x].id;
					standardWeights[iPos].code = allStandardWeights[x].code;
					standardWeights[iPos].name = allStandardWeights[x].name;
					iPos++;
				}
			}
		}

		loadAssignmentWeightsTable();
		loadAssessmentWeightsTable();
		loadStandardWeightsTable();
		
	}
	
	function sortDisplayList(order, listItem, ul) {
		$ul = $(ul).eq(0);
	    $li = $('li#'+listItem).data('order', order);

		var o = $li.appendTo($ul).data('order');// initially, append to end of
												// the list, and read its order
												// attribute
		$ul.find("li").each(function() {
			if(o < $(this).data('order')) {
				$li.insertBefore(this); // if $li's order` is less than current
										// item's order, then move $li above
										// current item.
				return false; // break
			}
		});
	}
	
	$('.formatButton').live('click', function() {

		var tempSection = this.id;
		var n = this.id.indexOf("FormatButton");
		if (n != -1) {
			tempSection = this.id.substring(0,n);
		}
		
		if (tempSection == currentFormatSection && $('#formatBox').css('display') != "none") {

			$('#formatBox').hide();
			
		} else {
			
			currentFormatSection = tempSection;
			
			if (currentFormatSection == "tab13") {
				$('#titleShowCell').hide();
				$('#bodyFormatRow').hide();
			} else if (currentFormatSection == "event" || currentFormatSection == "newEvent") {
				$('#titleShowCell').hide();
				$('#bodyFormatRow').show();
			} else {
				$('#titleShowCell').show();
				$('#bodyFormatRow').show();
			}
			
			var x =  $(this).offset().left;
			var y = $(this).offset().top + $(this).height() + 5;

			if ($(this).hasClass('formatButton-align-right')) {
				x = x - 409;
			}
			
			$('#formatBox').css({
				'left': x,
	            'top': y,
	            'z-index' : 11
			}).show();
			
			if ($('#'+currentFormatSection+'Hide').html() == "N") {
				$('#formatTitleShow').prop('checked',true);
			} else {
				$('#formatTitleShow').prop('checked',false);
			}

			$('#formatTitleFont').val($('#'+currentFormatSection+'Font').html());
			$('#formatTitleSize').val($('#'+currentFormatSection+'Size').html());

			$('#formatTextFont').val($('#'+currentFormatSection+'TextFont').html());
			$('#formatTextSize').val($('#'+currentFormatSection+'TextSize').html());

			if ($('#'+currentFormatSection+'Format').css('font-weight') == "700" || $('#'+currentFormatSection+'Format').css('font-weight') == "bold") {$('#formatTitleB').css({'background-color':'#D3D7CF'});} else {$('#formatTitleB').css({'background-color':'#eee'});}
			if ($('#'+currentFormatSection+'Format').css('font-style') == "italic") {$('#formatTitleI').css({'background-color':'#D3D7CF'});} else {$('#formatTitleI').css({'background-color':'#eee'});}
			if ($('#'+currentFormatSection+'Format').css('text-decoration') == "underline") {$('#formatTitleU').css({'background-color':'#D3D7CF'});} else {$('#formatTitleU').css({'background-color':'#eee'});}

			if ($('#'+currentFormatSection+'FormatText').css('font-weight') == "700" || $('#'+currentFormatSection+'FormatText').css('font-weight') == "bold") {$('#formatTextB').css({'background-color':'#D3D7CF'});} else {$('#formatTextB').css({'background-color':'#eee'});}
			if ($('#'+currentFormatSection+'FormatText').css('font-style') == "italic") {$('#formatTextI').css({'background-color':'#D3D7CF'});} else {$('#formatTextI').css({'background-color':'#eee'});}
			if ($('#'+currentFormatSection+'FormatText').css('text-decoration') == "underline") {$('#formatTextU').css({'background-color':'#D3D7CF'});} else {$('#formatTextU').css({'background-color':'#eee'});}
			
			$("#formatTitleColor").spectrum({
			    showPaletteOnly: true,
			    togglePaletteOnly: true,
			    togglePaletteMoreText: 'more',
			    togglePaletteLessText: 'less',
			    preferredFormat: "hex",
			    color: $('#'+currentFormatSection+'Format').css('color'),
			    palette: [colors1]
			});
			$("#formatTitleFillColor").spectrum({
			    showPaletteOnly: true,
			    togglePaletteOnly: true,
			    togglePaletteMoreText: 'more',
			    togglePaletteLessText: 'less',
			    preferredFormat: "hex",
			    color: $('#'+currentFormatSection+'Format').css('background-color'),
			    palette: [colors1]
			});
			$("#formatTextColor").spectrum({
			    showPaletteOnly: true,
			    togglePaletteOnly: true,
			    togglePaletteMoreText: 'more',
			    togglePaletteLessText: 'less',
			    preferredFormat: "hex",
			    color: $('#'+currentFormatSection+'FormatText').css('color'),
			    palette: [colors1]
			});
			$("#formatTextFillColor").spectrum({
			    showPaletteOnly: true,
			    togglePaletteOnly: true,
			    togglePaletteMoreText: 'more',
			    togglePaletteLessText: 'less',
			    preferredFormat: "hex",
			    color: $('#'+currentFormatSection+'FormatText').css('background-color'),
			    palette: [colors1]
			});
			
		}
		
	});
	
	$('#formatTitleShow').change(function() {
		if ($('#formatTitleShow').prop('checked') == true) {
			$('#'+currentFormatSection+'Hide').html("N");
		} else {
			$('#'+currentFormatSection+'Hide').html("Y");
		}
	});
	
	$('#formatTitleFont').change(function() {
		$('#'+currentFormatSection+'Format').css({'font-family':fontTypes[$('#formatTitleFont').val()]});
		$('#'+currentFormatSection+'Font').html($('#formatTitleFont').val());
	});
	
	$('#formatTextFont').change(function() {
		$('#'+currentFormatSection+'FormatText').css({'font-family':fontTypes[$('#formatTextFont').val()]});
		$('#'+currentFormatSection+'TextFont').html($('#formatTextFont').val());
	});

	$('#formatTitleSize').change(function() {
		$('#'+currentFormatSection+'Format').css({'font-size':$('#formatTitleSize').val()+'pt'});
		$('#'+currentFormatSection+'Size').html($('#formatTitleSize').val());
	});
	
	$('#formatTextSize').change(function() {
		$('#'+currentFormatSection+'FormatText').css({'font-size':$('#formatTextSize').val()+'pt'});
		$('#'+currentFormatSection+'TextSize').html($('#formatTextSize').val());
	});

	$('#formatTitleB').click(function() {
		if ($('#formatTitleB').css('background-color') == '#D3D7CF' || $('#formatTitleB').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTitleB').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'Format').css({'font-weight':'normal'});
		} else {
			$('#formatTitleB').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'Format').css({'font-weight':'700'});
		}
	});

	$('#formatTextB').click(function() {
		if ($('#formatTextB').css('background-color') == '#D3D7CF' || $('#formatTextB').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTextB').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'FormatText').css({'font-weight':'normal'});
		} else {
			$('#formatTextB').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'FormatText').css({'font-weight':'700'});
		}
	});
	
	$('#formatTitleI').click(function() {
		if ($('#formatTitleI').css('background-color') == '#D3D7CF' || $('#formatTitleI').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTitleI').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'Format').css({'font-style':'normal'});
		} else {
			$('#formatTitleI').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'Format').css({'font-style':'italic'});
		}
	});

	$('#formatTextI').click(function() {
		if ($('#formatTextI').css('background-color') == '#D3D7CF' || $('#formatTextI').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTextI').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'FormatText').css({'font-style':'normal'});
		} else {
			$('#formatTextI').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'FormatText').css({'font-style':'italic'});
		}
	});

	$('#formatTitleU').click(function() {
		if ($('#formatTitleU').css('background-color') == '#D3D7CF' || $('#formatTitleU').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTitleU').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'Format').css({'text-decoration':'none'});
		} else {
			$('#formatTitleU').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'Format').css({'text-decoration':'underline'});
		}
	});

	$('#formatTextU').click(function() {
		if ($('#formatTextU').css('background-color') == '#D3D7CF' || $('#formatTextU').css('background-color') == 'rgb(211, 215, 207)') {
			$('#formatTextU').css({'background-color':'#eee'});
			$('#'+currentFormatSection+'FormatText').css({'text-decoration':'none'});
		} else {
			$('#formatTextU').css({'background-color':'#D3D7CF'});
			$('#'+currentFormatSection+'FormatText').css({'text-decoration':'underline'});
		}
	});

	$("#formatTitleColor").change(function() {
		var tempColor = $('#formatTitleColor').spectrum('get') + "format";
		var n = tempColor.indexOf("format");
		var temp2Color = tempColor.substring(0,n);
		$('#'+currentFormatSection+'Format').css({'color':temp2Color});
	});

	$("#formatTitleFillColor").change(function() {
		var tempColor = $('#formatTitleFillColor').spectrum('get') + "format";
		var n = tempColor.indexOf("format");
		var temp2Color = tempColor.substring(0,n);
		$('#'+currentFormatSection+'Format').css({'background-color':temp2Color});
	});
	
	$("#formatTextColor").change(function() {
		var tempColor = $('#formatTextColor').spectrum('get') + "format";
		var n = tempColor.indexOf("format");
		var temp2Color = tempColor.substring(0,n);
		$('#'+currentFormatSection+'FormatText').css({'color':temp2Color});
	});

	$("#formatTextFillColor").change(function() {
		var tempColor = $('#formatTextFillColor').spectrum('get') + "format";
		var n = tempColor.indexOf("format");
		var temp2Color = tempColor.substring(0,n);
		$('#'+currentFormatSection+'FormatText').css({'background-color':temp2Color});
	});

	$('#cMore').click(function() {
		
		if ($('#cHidden').css('display') == 'none') {
			$('#cHidden').css({
		        'position': 'absolute',
		        'left': $(this).offset().left,
		        'top': $(this).offset().top + $(this).height() + 5
			}).show();
		} else {
			$('#cHidden').hide();
		}

	});
	
	$('#assessmentAction').click(function() {
		if ($('#assessmentActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#assessmentActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		}
	});
	
	$('#assignmentAction').click(function() {
		if ($('#assignmentActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#assignmentActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#assignmentActions').hide();
		}
	});

	$('#templateAction').click(function() {
		if ($('#templateActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#templateActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#templateActions').hide();
		}
	});
	
	$('#layoutAction').click(function() {
		if ($('#layoutActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#layoutActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		}else {
			$('#pickListTop').hide();
			$('#layoutActions').hide();
		}
	});

	$('#strategyAction').click(function() {
		if ($('#strategyActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#strategyActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#strategyActions').hide();
		}
	});

	$('#unitAction').click(function() {
		if ($('#unitActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#unitActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#unitActions').hide();
		}
	});

	$('#classAction').click(function() {
		if ($('#classActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#classActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#classActions').hide();
		}
	});
	
	$('#myListAction').click(function() {
		if ($('#myListActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#myListActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#myListActions').hide();
		}
	});

	$('#eventAction').click(function() {
		if ($('#eventActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#eventActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			$('.eventActionHS').hide();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#eventActions').hide();
		}
	});
	
	$('#studentAction').click(function() {
		if ($('#studentActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#studentActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-13}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#studentActions').hide();
		}
	});
	
	$('#schoolYearAction').click(function() {
		if ($('#schoolYearActions').css('display') == 'none') {
			$('#pickListTop').css({'top':$(this).offset().top+44,'left':$(this).offset().left+$(this).width()-15}).show();
			$('#schoolYearActions').css({'top':$(this).offset().top+52,'left':$(this).offset().left-33}).show();
			return false;
		} else {
			$('#pickListTop').hide();
			$('#schoolYearActions').hide();
		}
	});

	$(document).on("mouseenter", ".lesson", function() {
		$('.head'+this.id).show();
	});

	$(document).on("mouseleave", ".lesson", function() {
	    $('.head'+this.id).hide();
	});
	
	$(document).on("mouseenter", ".event", function() {
	    $('.head'+this.id).show();
	});

	$(document).on("mouseleave", ".event", function() {
	    $('.head'+this.id).hide();
	});

	$(document).on("mouseenter", ".lessonCell", function() {
		$('.head'+this.id).show();
	});

	$(document).on("mouseleave", ".lessonCell", function() {
	    $('.head'+this.id).hide();
	});
	
	$(document).on("mouseenter", ".event1", function() {
	    $('.head'+this.id.substring(1)).show();
	});

	$(document).on("mouseleave", ".event1", function() {
	    $('.head'+this.id.substring(1)).hide();
	});
	
	$('#lessonTitle, #customStart, #customEnd').on('change keyup paste', function() {
		saveLesson = true;
	});
	
	function checkAutoSave() {
		if (saveLesson) {
			startApplyLesson();
		} else {
			clearTimeout(autoSaveTimeOut);
			autoSaveTimeOut = setTimeout(function() {autoSaved = true;checkAutoSave()}, userInfo.autosaveInterval*1000);
		}
	}
	
	$('.cButton').click(function() {
		$('#'+this.id).toggleClass('bttnPressed');
		if ($('#'+this.id).hasClass('bttnPressed')) {
			$('#'+this.id).css({'background-color':'#D3D7CF'});
		} else {
			$('#'+this.id).css({'background-color':'#eee'});
		}
	});
	
	$('#adminAddLayoutButton').click(function() {
		addAdminLayout();
	});

	function addAdminLayout() {
			
		$('#layoutAction').hide();
		
		currentLessonLayoutId = 0;

		action = "newAdminLayout";

		clearNotification('#adminLayoutErrorMsg');

		$('#adminLayoutName').val('');

		$('#adminLessonLabel').val('Lesson');
		$('#adminTab2Label').val('Homework');
		$('#adminTab3Label').val('Notes');
		$('#adminTab4Label').val('Not Used');
		$('#adminTab5Label').val('Not Used');
		$('#adminTab6Label').val('Not Used');
		$('#adminMyStandardsLabel').val('My List');
		$('#adminSharedStandardsLabel').val('Standards');
		$('#adminSchoolStandardsLabel').val('School List');
		$('#adminStrategiesLabel').val('Instructional Strategies');

		$('#adminLessonEnabled').prop('checked',true);
		$('#adminTab2Enabled').prop('checked',true);
		$('#adminTab3Enabled').prop('checked',true);
		$('#adminTab4Enabled').prop('checked',false);
		$('#adminTab5Enabled').prop('checked',false);
		$('#adminTab6Enabled').prop('checked',false);
		$('#adminMyStandardsEnabled').prop('checked',false);
		$('#adminSharedStandardsEnabled').prop('checked',true);
		$('#adminSchoolStandardsEnabled').prop('checked',false);
		$('#adminStrategiesEnabled').prop('checked',false);

		sortDisplayList(1, 'adminLiLesson', 'ul#adminSortableSection');
		sortDisplayList(2, 'adminLiTab2', 'ul#adminSortableSection');
		sortDisplayList(3, 'adminLiTab3', 'ul#adminSortableSection');
		sortDisplayList(4, 'adminLiTab4', 'ul#adminSortableSection');
		sortDisplayList(5, 'adminLiTab5', 'ul#adminSortableSection');
		sortDisplayList(6, 'adminLiTab6', 'ul#adminSortableSection');
		sortDisplayList(7, 'adminLiStrategies', 'ul#adminSortableSection');
		sortDisplayList(8, 'adminLiMy', 'ul#adminSortableSection');
		sortDisplayList(9, 'adminLiShared', 'ul#adminSortableSection');
		sortDisplayList(10, 'adminLiSchool', 'ul#adminSortableSection');
  		
		showBox('#adminLayoutBox', 10);

	}
	
	$('.adminYearList').live('click', function() {
		
		$('#layoutAction').show();

		currentLessonLayoutId = this.id.substr(3);
		
		action = "updateAdminLayout";

		clearNotification('#adminLayoutErrorMsg');

		var yearPos = 0;
		for (var x=0; x<adminLayouts.length; x++) {
			if (adminLayouts[x].lessonLayoutId == currentLessonLayoutId) {
				yearPos = x;
				break;
			}
		}
		
		$('#adminLayoutName').val(adminLayouts[yearPos].name)
		
		$('#adminLessonLabel').val(adminLayouts[yearPos].tab1Label);
		$('#adminTab2Label').val(adminLayouts[yearPos].tab2Label);
		$('#adminTab3Label').val(adminLayouts[yearPos].tab3Label);
		$('#adminTab4Label').val(adminLayouts[yearPos].tab4Label);
		$('#adminTab5Label').val(adminLayouts[yearPos].tab5Label);
		$('#adminTab6Label').val(adminLayouts[yearPos].tab6Label);
		$('#adminMyStandardsLabel').val(adminLayouts[yearPos].tab7Label);
		$('#adminSharedStandardsLabel').val(adminLayouts[yearPos].tab8Label);
		$('#adminSchoolStandardsLabel').val(adminLayouts[yearPos].tab9Label);
		$('#adminStrategiesLabel').val(adminLayouts[yearPos].strategiesLabel);

		if (adminLayouts[yearPos].tab1Enabled == "Y") {$('#adminLessonEnabled').prop('checked',true);} else {$('#adminLessonEnabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab2Enabled == "Y") {$('#adminTab2Enabled').prop('checked',true);} else {$('#adminTab2Enabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab3Enabled == "Y") {$('#adminTab3Enabled').prop('checked',true);} else {$('#adminTab3Enabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab4Enabled == "Y") {$('#adminTab4Enabled').prop('checked',true);} else {$('#adminTab4Enabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab5Enabled == "Y") {$('#adminTab5Enabled').prop('checked',true);} else {$('#adminTab5Enabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab6Enabled == "Y") {$('#adminTab6Enabled').prop('checked',true);} else {$('#adminTab6Enabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab7Enabled == "Y") {$('#adminMyStandardsEnabled').prop('checked',true);} else {$('#adminMyStandardsEnabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab8Enabled == "Y") {$('#adminSharedStandardsEnabled').prop('checked',true);} else {$('#adminSharedStandardsEnabled').prop('checked',false);}
		if (adminLayouts[yearPos].tab9Enabled == "Y") {$('#adminSchoolStandardsEnabled').prop('checked',true);} else {$('#adminSchoolStandardsEnabled').prop('checked',false);}
		if (adminLayouts[yearPos].strategiesEnabled == "Y") {$('#adminStrategiesEnabled').prop('checked',true);} else {$('#adminStrategiesEnabled').prop('checked',false);}
		
		sortDisplayList(adminLayouts[yearPos].tab1DisplayOrder, 'adminLiLesson', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab2DisplayOrder, 'adminLiTab2', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab3DisplayOrder, 'adminLiTab3', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab4DisplayOrder, 'adminLiTab4', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab5DisplayOrder, 'adminLiTab5', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab6DisplayOrder, 'adminLiTab6', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab7DisplayOrder, 'adminLiMy', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab8DisplayOrder, 'adminLiShared', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].tab9DisplayOrder, 'adminLiSchool', 'ul#adminSortableSection');
		sortDisplayList(adminLayouts[yearPos].strategiesDisplayOrder, 'adminLiStrategies', 'ul#adminSortableSection');
       	
		showBox('#adminLayoutBox', 10);
		
	});
		
	$('#applyAdminLayout').click(function() {
	
		var valError = false;
		clearNotification('#adminLayoutErrorMsg');

		if ($.trim($('#adminLayoutName').val()) == "") {
			valError = true;
			showNotification('#adminLayoutErrorMsg', 'Please enter a name for layout');
		}
		
		if (valError == false) {
			if (($('#adminLessonEnabled').prop('checked') && $.trim($('#adminLessonLabel').val()) == "") ||
				($('#adminTab2Enabled').prop('checked') && $.trim($('#adminTab2Label').val()) == "") ||
				($('#adminTab3Enabled').prop('checked') && $.trim($('#adminTab3Label').val()) == "") ||
				($('#adminTab4Enabled').prop('checked') && $.trim($('#adminTab4Label').val()) == "") ||
				($('#adminTab5Enabled').prop('checked') && $.trim($('#adminTab5Label').val()) == "") ||
				($('#adminTab6Enabled').prop('checked') && $.trim($('#adminTab6Label').val()) == "") ||
				($('#adminStrategiesEnabled').prop('checked') && $.trim($('#adminStrategiesLabel').val()) == "") ||
				($('#adminMyStandardsEnabled').prop('checked') && $.trim($('#adminMyStandardsLabel').val()) == "") ||
				($('#adminSharedStandardsEnabled').prop('checked') && $.trim($('#adminSharedStandardsLabel').val()) == "") ||
				($('#adminSchoolStandardsEnabled').prop('checked') && $.trim($('#adminSchoolStandardsLabel').val()) == "")) {
					valError = true;
					showNotification('#adminLayoutErrorMsg', 'Please enter a name for each active lesson section');
			}
		}
		
		
		if (valError == false) {
			if ($('#adminLessonEnabled').prop('checked') == false &&
			    $('#adminTab2Enabled').prop('checked') == false &&
			    $('#adminTab3Enabled').prop('checked') == false &&
			    $('#adminTab4Enabled').prop('checked') == false &&
			    $('#adminTab5Enabled').prop('checked') == false &&
			    $('#adminTab6Enabled').prop('checked') == false &&
			    $('#adminStrategiesEnabled').prop('checked') == false &&
			    $('#adminMyStandardsEnabled').prop('checked') == false &&
			    $('#adminSharedStandardsEnabled').prop('checked') == false) {
					valError = true;
					showNotification('#adminLayoutErrorMsg', 'At least one Lesson Section must be enabled');
			} 
		}
		
		if (valError == false) {

			jsonInfo = new Object();
			
			jsonInfo.name = $.trim($('#adminLayoutName').val());
			
			jsonInfo.lessonLabel = $.trim($('#adminLessonLabel').val());
			jsonInfo.tab1Order = $('#adminSortableSection li').index($('#adminLiLesson'))+1;
			if ($('#adminLessonEnabled').prop('checked')) {jsonInfo.lessonEnabled = "Y";} else {jsonInfo.lessonEnabled = "N";}
			
			jsonInfo.tab2Label = $.trim($('#adminTab2Label').val());
			jsonInfo.tab2Order = $('#adminSortableSection li').index($('#adminLiTab2'))+1;
			if ($('#adminTab2Enabled').prop('checked')) {jsonInfo.tab2Enabled = "Y";} else {jsonInfo.tab2Enabled = "N";}

			jsonInfo.tab3Label = $.trim($('#adminTab3Label').val());
			jsonInfo.tab3Order = $('#adminSortableSection li').index($('#adminLiTab3'))+1;
			if ($('#adminTab3Enabled').prop('checked')) {jsonInfo.tab3Enabled = "Y";} else {jsonInfo.tab3Enabled = "N";}

			jsonInfo.tab4Label = $.trim($('#adminTab4Label').val());
			jsonInfo.tab4Order = $('#adminSortableSection li').index($('#adminLiTab4'))+1;
			if ($('#adminTab4Enabled').prop('checked')) {jsonInfo.tab4Enabled = "Y";} else {jsonInfo.tab4Enabled = "N";}

			jsonInfo.tab5Label = $.trim($('#adminTab5Label').val());
			jsonInfo.tab5Order = $('#adminSortableSection li').index($('#adminLiTab5'))+1;
			if ($('#adminTab5Enabled').prop('checked')) {jsonInfo.tab5Enabled = "Y";} else {jsonInfo.tab5Enabled = "N";}

			jsonInfo.tab6Label = $.trim($('#adminTab6Label').val());
			jsonInfo.tab6Order = $('#adminSortableSection li').index($('#adminLiTab6'))+1;
			if ($('#adminTab6Enabled').prop('checked')) {jsonInfo.tab6Enabled = "Y";} else {jsonInfo.tab6Enabled = "N";}

			jsonInfo.strategiesLabel = $.trim($('#adminStrategiesLabel').val());
			jsonInfo.strategiesOrder = $('#adminSortableSection li').index($('#adminLiStrategies'))+1;
			if ($('#adminStrategiesEnabled').prop('checked')) {jsonInfo.strategiesEnabled = "Y";} else {jsonInfo.strategiesEnabled = "N";}

			jsonInfo.myStandardsLabel = $.trim($('#adminMyStandardsLabel').val());
			jsonInfo.myStandardsOrder = $('#adminSortableSection li').index($('#adminLiMy'))+1;
			if ($('#adminMyStandardsEnabled').prop('checked')) {jsonInfo.myStandardsEnabled = "Y";} else {jsonInfo.myStandardsEnabled = "N";}

			jsonInfo.sharedStandardsLabel = $.trim($('#adminSharedStandardsLabel').val());
			jsonInfo.sharedStandardsOrder = $('#adminSortableSection li').index($('#adminLiShared'))+1;
			if ($('#adminSharedStandardsEnabled').prop('checked')) {jsonInfo.sharedStandardsEnabled = "Y";} else {jsonInfo.sharedStandardsEnabled = "N";}

			jsonInfo.schoolStandardsLabel = $.trim($('#adminSchoolStandardsLabel').val());
			jsonInfo.schoolStandardsOrder = $('#adminSortableSection li').index($('#adminLiSchool'))+1;
			if ($('#adminSchoolStandardsEnabled').prop('checked')) {jsonInfo.schoolStandardsEnabled = "Y";} else {jsonInfo.schoolStandardsEnabled = "N";}
			
			jsonInfo.lessonLayoutId = currentLessonLayoutId;

			jsonInfo.schoolId = userInfo.schoolId;
	       	
			if (paymentNeeded == false) {
				showLoading();
				$.post('updateAdminLayout', jsonInfo, loadAdminLayouts, "json");
			} else {
				showExpiredMsg();
			}

		}
	
	});
	
	$('#deleteAdminLayout').click(function() {

		action = 'deleteAdminLayout';

		jsonInfo = new Object();
		jsonInfo.lessonLayoutId = currentLessonLayoutId;
		
		if (paymentNeeded == false) {
			action = 'deleteAdminLayout';
			showLoading();
			$.getJSON('deleteAdminLayout', jsonInfo, loadAdminLayouts);
		} else {
			showExpiredMsg();
		}

	});
	
	$('#cancelAdminLayout').click(function() {
		hideBox('#adminLayoutBox', 10);
	});
	
	function loadAdminLayouts(data) {
	
		hideLoading();
	
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
	
			haveAdminLayouts = true;

			hideBox('#adminLayoutBox', 10);
			
			$('#adminLayoutBody').html("");
	
			adminLayouts = new Array();
			
      		if (data.adminLayouts != null) {
				
      			for (var y=0; y<data.adminLayouts.length; y++) {
	      			
					adminLayouts[y] = new Object();

					adminLayouts[y].lessonLayoutId = data.adminLayouts[y].lessonLayoutId;
					adminLayouts[y].name = data.adminLayouts[y].name;

		      		adminLayouts[y].tab1Label = data.adminLayouts[y].tab1Label;
		      		adminLayouts[y].tab2Label = data.adminLayouts[y].tab2Label;
		      		adminLayouts[y].tab3Label = data.adminLayouts[y].tab3Label;
		      		adminLayouts[y].tab4Label = data.adminLayouts[y].tab4Label;
		      		adminLayouts[y].tab5Label = data.adminLayouts[y].tab5Label;
		      		adminLayouts[y].tab6Label = data.adminLayouts[y].tab6Label;
		      		adminLayouts[y].tab7Label = data.adminLayouts[y].tab7Label;
		      		adminLayouts[y].tab8Label = data.adminLayouts[y].tab8Label;
		      		adminLayouts[y].tab9Label = data.adminLayouts[y].tab9Label;
		      		adminLayouts[y].strategiesLabel = data.adminLayouts[y].strategiesLabel;
		      		
		      		adminLayouts[y].tab1DisplayOrder = data.adminLayouts[y].tab1DisplayOrder;
		      		adminLayouts[y].tab2DisplayOrder = data.adminLayouts[y].tab2DisplayOrder;
		      		adminLayouts[y].tab3DisplayOrder = data.adminLayouts[y].tab3DisplayOrder;
		      		adminLayouts[y].tab4DisplayOrder = data.adminLayouts[y].tab4DisplayOrder;
		      		adminLayouts[y].tab5DisplayOrder = data.adminLayouts[y].tab5DisplayOrder;
		      		adminLayouts[y].tab6DisplayOrder = data.adminLayouts[y].tab6DisplayOrder;
		      		adminLayouts[y].tab7DisplayOrder = data.adminLayouts[y].tab7DisplayOrder;
		      		adminLayouts[y].tab8DisplayOrder = data.adminLayouts[y].tab8DisplayOrder;
		      		adminLayouts[y].tab9DisplayOrder = data.adminLayouts[y].tab9DisplayOrder;
		      		adminLayouts[y].strategiesDisplayOrder = data.adminLayouts[y].strategiesDisplayOrder;
		      		
		      		adminLayouts[y].tab1Enabled = data.adminLayouts[y].tab1Enabled;
		      		adminLayouts[y].tab2Enabled = data.adminLayouts[y].tab2Enabled;
		      		adminLayouts[y].tab3Enabled = data.adminLayouts[y].tab3Enabled;
		      		adminLayouts[y].tab4Enabled = data.adminLayouts[y].tab4Enabled;
		      		adminLayouts[y].tab5Enabled = data.adminLayouts[y].tab5Enabled;
		      		adminLayouts[y].tab6Enabled = data.adminLayouts[y].tab6Enabled;
		      		adminLayouts[y].tab7Enabled = data.adminLayouts[y].tab7Enabled;
		      		adminLayouts[y].tab8Enabled = data.adminLayouts[y].tab8Enabled;
		      		adminLayouts[y].tab9Enabled = data.adminLayouts[y].tab9Enabled;
		      		adminLayouts[y].strategiesEnabled = data.adminLayouts[y].strategiesEnabled;
		      		
	      			var ls = '<tr class="pickRow adminYearList" style="cursor:pointer;" id="asy' + data.adminLayouts[y].lessonLayoutId + '">';
					ls = ls + '<td class="slCell" style="text-align:left;">' + data.adminLayouts[y].name + '</td>';
					ls = ls + '</tr>';
					$('#adminLayoutBody').append(ls);
					
	      		}
      		}

			var ls = '<tr style="background-color:transparent;"><td><img src="spacer.gif" width="200px" height="1"></td></tr>';
			$('#adminLayoutBody').append(ls);
			
			if (action == "getAdminLayouts") {
				showAdminLayouts();
			} else {   
				showAction();
			}
			
		}		
	}

	function showAdminLayouts() {
		
		if (haveAdminLayouts == false) {
			action = "getAdminLayouts";
			showLoading();
			$.getJSON('getAdminLayouts', 'schoolId='+userInfo.schoolId, loadAdminLayouts);
		} else {
			hideMessage();
			hideAll();
			$('#adminLayoutView').show();
		}
		
	}	
	
	$('#addCommentButton').click(function() {
		if (haveCommentTo == false && userMode == "T") {
			getCommentTo();
		} else {
			addComment();
		}
	});
		
	function addComment() {

		clearNotification('#commentErrorMsg');
		$('#commentText').val('');

		if (userMode == "T") {
			$('#commentSendTo').val(0);
		} else {
			$('#commentSendTo').val(currentTeacherId);
		}

		showBox('#editCommentBox', 10);
	}
	
	function getCommentTo() {
		jsonInfo = new Object ();
		jsonInfo.userMode = userMode;
		showLoading();
		$.getJSON('getCommentsTo', jsonInfo, loadCommentTo);
	}
	
	function loadCommentTo(data) {
		
		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
			$('#commentSendTo').html('<option value="0">Administration</option>');
			$('#gradeReportStudent2').html('');
			if (data.studentCount != 0) {
				$('#commentSendTo').append('<option value="1">Students - All (' + data.studentCount + ')</option>');
				$('#gradeReportStudent2').append('<option value="1">Students - All (' + data.studentCount + ')</option>');
				if (data.classes != null) {
					for (var x=0; x<data.classes.length; x++) {
						$('#commentSendTo').append('<option value="' + data.classes[x].classId + '">Students - ' + data.classes[x].className + ' (' + data.classes[x].numStudents + ')</option>');
						$('#gradeReportStudent2').append('<option value="' + data.classes[x].classId + '">Students - ' + data.classes[x].className + ' (' + data.classes[x].numStudents + ')</option>');
					}
				}
				if (data.students != null) {
					for (var x=0; x<data.students.length; x++) {
						$('#commentSendTo').append('<option value="' + data.students[x].studentId + '">' + data.students[x].lastName + ', ' + data.students[x].firstName + '</option>');
						$('#gradeReportStudent2').append('<option value="' + data.students[x].studentId + '">' + data.students[x].lastName + ', ' + data.students[x].firstName + '</option>');
					}
				}
			}
			
			if (individualStudentGradesView) {
				$('#gradeReportStudent2').val(currentGradesStudentId);
			} else {
				$('#gradeReportStudent2').val('1');
			}
			
			haveCommentTo = true;
			
			if (window.location.hash == "#comment") {
				addComment();
			}
			
		}
	}
	
	$('#cancelComment').click(function() {
		hideBox('#editCommentBox', 10);
	});
	
	$('#sampleLayouts, #adminSampleLayouts').click(function() {
		showBox('#sampleLayoutsBox', 0);
	});
	
	$('#cancelSampleLayouts').click(function() {
		hideBox('#sampleLayoutsBox', 0);
	});

	$('#applyLayout1').click(function() {

		if (userMode == "T") {
			
			$('#lessonLabel').val('Lesson');
			$('#tab2Label').val('Homework');
			$('#tab3Label').val('Notes');
			$('#tab4Label').val('Not Used');
			$('#tab5Label').val('Not Used');
			$('#tab6Label').val('Not Used');
			$('#myStandardsLabel').val('My List');
			$('#sharedStandardsLabel').val('Standards');
			$('#schoolStandardsLabel').val('School List');
			$('#strategiesLabel').val('Instructional Strategies');

			$('#lessonEnabled').prop('checked',true);
			$('#tab2Enabled').prop('checked',true);
			$('#tab3Enabled').prop('checked',true);
			$('#tab4Enabled').prop('checked',false);
			$('#tab5Enabled').prop('checked',false);
			$('#tab6Enabled').prop('checked',false);
			$('#myStandardsEnabled').prop('checked',false);
			$('#sharedStandardsEnabled').prop('checked',true);
			$('#schoolStandardsEnabled').prop('checked',false);
			$('#strategiesEnabled').prop('checked',false);

			sortDisplayList(1, 'liLesson', 'ul#sortableSection');
			sortDisplayList(2, 'liTab2', 'ul#sortableSection');
			sortDisplayList(3, 'liTab3', 'ul#sortableSection');
			sortDisplayList(4, 'liShared', 'ul#sortableSection');
			sortDisplayList(5, 'liTab4', 'ul#sortableSection');
			sortDisplayList(6, 'liTab5', 'ul#sortableSection');
			sortDisplayList(7, 'liTab6', 'ul#sortableSection');
			sortDisplayList(8, 'liMy', 'ul#sortableSection');
			sortDisplayList(9, 'liSchool', 'ul#sortableSection');
			sortDisplayList(10, 'liStrategies', 'ul#sortableSection');

		} else {
			
			$('#adminLessonLabel').val('Lesson');
			$('#adminTab2Label').val('Homework');
			$('#adminTab3Label').val('Notes');
			$('#adminTab4Label').val('Not Used');
			$('#adminTab5Label').val('Not Used');
			$('#adminTab6Label').val('Not Used');
			$('#adminMyStandardsLabel').val('My List');
			$('#adminSharedStandardsLabel').val('Standards');
			$('#adminSchoolStandardsLabel').val('School List');
			$('#adminStrategiesLabel').val('Instructional Strategies');

			$('#adminLessonEnabled').prop('checked',true);
			$('#adminTab2Enabled').prop('checked',true);
			$('#adminTab3Enabled').prop('checked',true);
			$('#adminTab4Enabled').prop('checked',false);
			$('#adminTab5Enabled').prop('checked',false);
			$('#adminTab6Enabled').prop('checked',false);
			$('#adminMyStandardsEnabled').prop('checked',false);
			$('#adminSharedStandardsEnabled').prop('checked',true);
			$('#adminSchoolStandardsEnabled').prop('checked',false);
			$('#adminStrategiesEnabled').prop('checked',false);

			sortDisplayList(1, 'adminLiLesson', 'ul#adminSortableSection');
			sortDisplayList(2, 'adminLiTab2', 'ul#adminSortableSection');
			sortDisplayList(3, 'adminLiTab3', 'ul#adminSortableSection');
			sortDisplayList(4, 'adminLiShared', 'ul#adminSortableSection');
			sortDisplayList(5, 'adminLiTab4', 'ul#adminSortableSection');
			sortDisplayList(6, 'adminLiTab5', 'ul#adminSortableSection');
			sortDisplayList(7, 'adminLiTab6', 'ul#adminSortableSection');
			sortDisplayList(8, 'adminLiMy', 'ul#adminSortableSection');
			sortDisplayList(9, 'adminLiSchool', 'ul#adminSortableSection');
			sortDisplayList(10, 'adminLiStrategies', 'ul#adminSortableSection');

		}
		
		$('#sampleLayoutsBox').hide();

	});

	$('#applyLayout2').click(function() {

		if (userMode == "T") {

			$('#lessonLabel').val('Objective');
			$('#tab2Label').val('Direct Instruction');
			$('#tab3Label').val('Guided Practice');
			$('#tab4Label').val('Independent Practice');
			$('#tab5Label').val('Homework');
			$('#tab6Label').val('Notes');
			$('#myStandardsLabel').val('My List');
			$('#sharedStandardsLabel').val('Standards');
			$('#schoolStandardsLabel').val('School List');
			$('#strategiesLabel').val('Instructional Strategies');

			$('#lessonEnabled').prop('checked',true);
			$('#tab2Enabled').prop('checked',true);
			$('#tab3Enabled').prop('checked',true);
			$('#tab4Enabled').prop('checked',true);
			$('#tab5Enabled').prop('checked',true);
			$('#tab6Enabled').prop('checked',true);
			$('#myStandardsEnabled').prop('checked',false);
			$('#sharedStandardsEnabled').prop('checked',true);
			$('#schoolStandardsEnabled').prop('checked',false);
			$('#strategiesEnabled').prop('checked',false);

			sortDisplayList(1, 'liLesson', 'ul#sortableSection');
			sortDisplayList(2, 'liTab2', 'ul#sortableSection');
			sortDisplayList(3, 'liTab3', 'ul#sortableSection');
			sortDisplayList(4, 'liTab4', 'ul#sortableSection');
			sortDisplayList(5, 'liTab5', 'ul#sortableSection');
			sortDisplayList(6, 'liTab6', 'ul#sortableSection');
			sortDisplayList(7, 'liShared', 'ul#sortableSection');
			sortDisplayList(8, 'liMy', 'ul#sortableSection');
			sortDisplayList(9, 'liSchool', 'ul#sortableSection');
			sortDisplayList(10, 'liStrategies', 'ul#sortableSection');
			
		} else {

			$('#adminLessonLabel').val('Objective');
			$('#adminTab2Label').val('Direct Instruction');
			$('#adminTab3Label').val('Guided Practice');
			$('#adminTab4Label').val('Independent Practice');
			$('#adminTab5Label').val('Homework');
			$('#adminTab6Label').val('Notes');
			$('#adminMyStandardsLabel').val('My List');
			$('#adminSharedStandardsLabel').val('Standards');
			$('#adminSchoolStandardsLabel').val('School List');
			$('#adminStrategiesLabel').val('Instructional Strategies');

			$('#adminLessonEnabled').prop('checked',true);
			$('#adminTab2Enabled').prop('checked',true);
			$('#adminTab3Enabled').prop('checked',true);
			$('#adminTab4Enabled').prop('checked',true);
			$('#adminTab5Enabled').prop('checked',true);
			$('#adminTab6Enabled').prop('checked',true);
			$('#adminMyStandardsEnabled').prop('checked',false);
			$('#adminSharedStandardsEnabled').prop('checked',true);
			$('#adminSchoolStandardsEnabled').prop('checked',false);
			$('#adminStrategiesEnabled').prop('checked',false);

			sortDisplayList(1, 'adminLiLesson', 'ul#adminSortableSection');
			sortDisplayList(2, 'adminLiTab2', 'ul#adminSortableSection');
			sortDisplayList(3, 'adminLiTab3', 'ul#adminSortableSection');
			sortDisplayList(4, 'adminLiTab4', 'ul#adminSortableSection');
			sortDisplayList(5, 'adminLiTab5', 'ul#adminSortableSection');
			sortDisplayList(6, 'adminLiTab6', 'ul#adminSortableSection');
			sortDisplayList(7, 'adminLiShared', 'ul#adminSortableSection');
			sortDisplayList(8, 'adminLiMy', 'ul#adminSortableSection');
			sortDisplayList(9, 'adminLiSchool', 'ul#adminSortableSection');
			sortDisplayList(10, 'adminLiStrategies', 'ul#adminSortableSection');
			
		}
		
		$('#sampleLayoutsBox').hide();
		
	});

	$('#applyLayout3').click(function() {

		if (userMode == "T") {
			
			$('#lessonLabel').val('Objectives / Essential Question');
			$('#tab2Label').val('Lesson / Instruction');
			$('#tab3Label').val('Differentiation / Accommodations');
			$('#tab4Label').val('Homework / Evidence of Learning');
			$('#tab5Label').val('Materials / Resources / Technology');
			$('#tab6Label').val('Notes / Reflection');
			$('#myStandardsLabel').val('My List');
			$('#sharedStandardsLabel').val('Standards');
			$('#schoolStandardsLabel').val('School List');
			$('#strategiesLabel').val('Instructional Strategies');

			$('#lessonEnabled').prop('checked',true);
			$('#tab2Enabled').prop('checked',true);
			$('#tab3Enabled').prop('checked',true);
			$('#tab4Enabled').prop('checked',true);
			$('#tab5Enabled').prop('checked',true);
			$('#tab6Enabled').prop('checked',true);
			$('#myStandardsEnabled').prop('checked',false);
			$('#sharedStandardsEnabled').prop('checked',true);
			$('#schoolStandardsEnabled').prop('checked',false);
			$('#strategiesEnabled').prop('checked',true);

			sortDisplayList(1, 'liShared', 'ul#sortableSection');
			sortDisplayList(2, 'liLesson', 'ul#sortableSection');
			sortDisplayList(3, 'liTab2', 'ul#sortableSection');
			sortDisplayList(4, 'liTab3', 'ul#sortableSection');
			sortDisplayList(5, 'liTab4', 'ul#sortableSection');
			sortDisplayList(6, 'liStrategies', 'ul#sortableSection');
			sortDisplayList(7, 'liTab5', 'ul#sortableSection');
			sortDisplayList(8, 'liTab6', 'ul#sortableSection');
			sortDisplayList(9, 'liMy', 'ul#sortableSection');
			sortDisplayList(10, 'liSchool', 'ul#sortableSection');

		} else {
		
			$('#adminLessonLabel').val('Objectives / Essential Question');
			$('#adminTab2Label').val('Lesson / Instruction');
			$('#adminTab3Label').val('Differentiation / Accommodations');
			$('#adminTab4Label').val('Homework / Evidence of Learning');
			$('#adminTab5Label').val('Materials / Resources / Technology');
			$('#adminTab6Label').val('Notes / Reflection');
			$('#adminMyStandardsLabel').val('My List');
			$('#adminSharedStandardsLabel').val('Standards');
			$('#adminSchoolStandardsLabel').val('School List');
			$('#adminStrategiesLabel').val('Instructional Strategies');

			$('#adminLessonEnabled').prop('checked',true);
			$('#adminTab2Enabled').prop('checked',true);
			$('#adminTab3Enabled').prop('checked',true);
			$('#adminTab4Enabled').prop('checked',true);
			$('#adminTab5Enabled').prop('checked',true);
			$('#adminTab6Enabled').prop('checked',true);
			$('#adminMyStandardsEnabled').prop('checked',false);
			$('#adminSharedStandardsEnabled').prop('checked',true);
			$('#adminSchoolStandardsEnabled').prop('checked',false);
			$('#adminStrategiesEnabled').prop('checked',true);

			sortDisplayList(1, 'adminLiShared', 'ul#adminSortableSection');
			sortDisplayList(2, 'adminLiLesson', 'ul#adminSortableSection');
			sortDisplayList(3, 'adminLiTab2', 'ul#adminSortableSection');
			sortDisplayList(4, 'adminLiTab3', 'ul#adminSortableSection');
			sortDisplayList(5, 'adminLiTab4', 'ul#adminSortableSection');
			sortDisplayList(6, 'adminLiStrategies', 'ul#adminSortableSection');
			sortDisplayList(7, 'adminLiTab5', 'ul#adminSortableSection');
			sortDisplayList(8, 'adminLiTab6', 'ul#adminSortableSection');
			sortDisplayList(9, 'adminLiMy', 'ul#adminSortableSection');
			sortDisplayList(10, 'adminLiSchool', 'ul#adminSortableSection');
			
		}
		
		$('#sampleLayoutsBox').hide();
		
	});

	$('#newLayout1').click(function() {

		newLayout1();
		
		updateDisplayList();
		
		$('#welcome3').hide();
		showWelcome5();

	});
	
	function newLayout1() {
		
		$('#newLessonLabel').val('Lesson');
		$('#newTab2Label').val('Homework');
		$('#newTab3Label').val('Notes');
		$('#newTab4Label').val('Not Used');
		$('#newTab5Label').val('Not Used');
		$('#newTab6Label').val('Not Used');
		$('#newMyStandardsLabel').val('My List');
		$('#newSharedStandardsLabel').val('Standards');
		$('#newSchoolStandardsLabel').val('School List');
		$('#newStrategiesLabel').val('Instructional Strategies');

		$('#newLessonEnabled').prop('checked',true);
		$('#newTab2Enabled').prop('checked',true);
		$('#newTab3Enabled').prop('checked',true);
		$('#newTab4Enabled').prop('checked',false);
		$('#newTab5Enabled').prop('checked',false);
		$('#newTab6Enabled').prop('checked',false);
		$('#newMyStandardsEnabled').prop('checked',false);
		$('#newSharedStandardsEnabled').prop('checked',true);
		$('#newSchoolStandardsEnabled').prop('checked',false);
		$('#newStrategiesEnabled').prop('checked',false);

		sortDisplayList(1, 'newLiLesson', 'ul#newSortableSection');
		sortDisplayList(2, 'newLiTab2', 'ul#newSortableSection');
		sortDisplayList(3, 'newLiTab3', 'ul#newSortableSection');
		sortDisplayList(4, 'newLiShared', 'ul#newSortableSection');
		sortDisplayList(5, 'newLiTab4', 'ul#newSortableSection');
		sortDisplayList(6, 'newLiTab5', 'ul#newSortableSection');
		sortDisplayList(7, 'newLiTab6', 'ul#newSortableSection');
		sortDisplayList(8, 'newLiMy', 'ul#newSortableSection');
		sortDisplayList(9, 'newLiSchool', 'ul#newSortableSection');
		sortDisplayList(10, 'newLiStrategies', 'ul#newSortableSection');
		
	}

	$('#newLayout2').click(function() {

		$('#newLessonLabel').val('Objective');
		$('#newTab2Label').val('Direct Instruction');
		$('#newTab3Label').val('Guided Practice');
		$('#newTab4Label').val('Independent Practice');
		$('#newTab5Label').val('Homework');
		$('#newTab6Label').val('Notes');
		$('#newMyStandardsLabel').val('My List');
		$('#newSharedStandardsLabel').val('Standards');
		$('#newSchoolStandardsLabel').val('School List');
		$('#newStrategiesLabel').val('Instructional Strategies');

		$('#newLessonEnabled').prop('checked',true);
		$('#newTab2Enabled').prop('checked',true);
		$('#newTab3Enabled').prop('checked',true);
		$('#newTab4Enabled').prop('checked',true);
		$('#newTab5Enabled').prop('checked',true);
		$('#newTab6Enabled').prop('checked',true);
		$('#newMyStandardsEnabled').prop('checked',false);
		$('#newSharedStandardsEnabled').prop('checked',true);
		$('#newSchoolStandardsEnabled').prop('checked',false);
		$('#newStrategiesEnabled').prop('checked',false);

		sortDisplayList(1, 'newLiLesson', 'ul#newSortableSection');
		sortDisplayList(2, 'newLiTab2', 'ul#newSortableSection');
		sortDisplayList(3, 'newLiTab3', 'ul#newSortableSection');
		sortDisplayList(4, 'newLiTab4', 'ul#newSortableSection');
		sortDisplayList(5, 'newLiTab5', 'ul#newSortableSection');
		sortDisplayList(6, 'newLiTab6', 'ul#newSortableSection');
		sortDisplayList(7, 'newLiShared', 'ul#newSortableSection');
		sortDisplayList(8, 'newLiMy', 'ul#newSortableSection');
		sortDisplayList(9, 'newLiSchool', 'ul#newSortableSection');
		sortDisplayList(10, 'newLiStrategies', 'ul#newSortableSection');
		
		updateDisplayList();
		
		$('#welcome3').hide();
		showWelcome5();		
	});

	$('#newLayout3').click(function() {

		$('#newLessonLabel').val('Objectives / Essential Question');
		$('#newTab2Label').val('Lesson / Instruction');
		$('#newTab3Label').val('Differentiation / Accommodations');
		$('#newTab4Label').val('Homework / Evidence of Learning');
		$('#newTab5Label').val('Materials / Resources / Technology');
		$('#newTab6Label').val('Notes / Reflection');
		$('#newMyStandardsLabel').val('My List');
		$('#newSharedStandardsLabel').val('Standards');
		$('#newSchoolStandardsLabel').val('School List');
		$('#newStrategiesLabel').val('Instructional Strategies');

		$('#newLessonEnabled').prop('checked',true);
		$('#newTab2Enabled').prop('checked',true);
		$('#newTab3Enabled').prop('checked',true);
		$('#newTab4Enabled').prop('checked',true);
		$('#newTab5Enabled').prop('checked',true);
		$('#newTab6Enabled').prop('checked',true);
		$('#newMyStandardsEnabled').prop('checked',false);
		$('#newSharedStandardsEnabled').prop('checked',true);
		$('#newSchoolStandardsEnabled').prop('checked',false);
		$('#newStrategiesEnabled').prop('checked',true);

		sortDisplayList(1, 'newLiShared', 'ul#newSortableSection');
		sortDisplayList(2, 'newLiLesson', 'ul#newSortableSection');
		sortDisplayList(3, 'newLiTab2', 'ul#newSortableSection');
		sortDisplayList(4, 'newLiTab3', 'ul#newSortableSection');
		sortDisplayList(5, 'newLiTab4', 'ul#newSortableSection');
		sortDisplayList(7, 'newLiMy', 'ul#newSortableSection');
		sortDisplayList(8, 'newLiTab5', 'ul#newSortableSection');
		sortDisplayList(9, 'newLiTab6', 'ul#newSortableSection');
		sortDisplayList(10, 'newLiSchool', 'ul#newSortableSection');
		sortDisplayList(6, 'newLiStrategies', 'ul#newSortableSection');
		
		updateDisplayList();

		$('#welcome3').hide();
		showWelcome5();	
		
	});
	
	function updateDisplayList() {
		
		userInfo.lessonLabel = $.trim($('#newLessonLabel').val());
		userInfo.tab1Order = $('#newSortableSection li').index($('#newLiLesson'))+1;
		if ($('#newLessonEnabled').prop('checked')) {userInfo.lessonEnabled = "Y";} else {userInfo.lessonEnabled = "N";}
		
		userInfo.tab2Label = $.trim($('#newTab2Label').val());
		userInfo.tab2Order = $('#newSortableSection li').index($('#newLiTab2'))+1;
		if ($('#newTab2Enabled').prop('checked')) {userInfo.tab2Enabled = "Y";} else {userInfo.tab2Enabled = "N";}

		userInfo.tab3Label = $.trim($('#newTab3Label').val());
		userInfo.tab3Order = $('#newSortableSection li').index($('#newLiTab3'))+1;
		if ($('#newTab3Enabled').prop('checked')) {userInfo.tab3Enabled = "Y";} else {userInfo.tab3Enabled = "N";}

		userInfo.tab4Label = $.trim($('#newTab4Label').val());
		userInfo.tab4Order = $('#newSortableSection li').index($('#newLiTab4'))+1;
		if ($('#newTab4Enabled').prop('checked')) {userInfo.tab4Enabled = "Y";} else {userInfo.tab4Enabled = "N";}

		userInfo.tab5Label = $.trim($('#newTab5Label').val());
		userInfo.tab5Order = $('#newSortableSection li').index($('#newLiTab5'))+1;
		if ($('#newTab5Enabled').prop('checked')) {userInfo.tab5Enabled = "Y";} else {userInfo.tab5Enabled = "N";}

		userInfo.tab6Label = $.trim($('#newTab6Label').val());
		userInfo.tab6Order = $('#newSortableSection li').index($('#newLiTab6'))+1;
		if ($('#newTab6Enabled').prop('checked')) {userInfo.tab6Enabled = "Y";} else {userInfo.tab6Enabled = "N";}

		userInfo.strategiesLabel = $.trim($('#newStrategiesLabel').val());
		userInfo.strategiesOrder = $('#newSortableSection li').index($('#newLiStrategies'))+1;
		if ($('#newStrategiesEnabled').prop('checked')) {userInfo.strategiesEnabled = "Y";} else {userInfo.strategiesEnabled = "N";}

		userInfo.myStandardsLabel = $.trim($('#newMyStandardsLabel').val());
		userInfo.myStandardsOrder = $('#newSortableSection li').index($('#newLiMy'))+1;
		if ($('#newMyStandardsEnabled').prop('checked')) {userInfo.myStandardsEnabled = "Y";} else {userInfo.myStandardsEnabled = "N";}

		userInfo.sharedStandardsLabel = $.trim($('#newSharedStandardsLabel').val());
		userInfo.sharedStandardsOrder = $('#newSortableSection li').index($('#newLiShared'))+1;
		if ($('#newSharedStandardsEnabled').prop('checked')) {userInfo.sharedStandardsEnabled = "Y";} else {userInfo.sharedStandardsEnabled = "N";}

		userInfo.schoolStandardsLabel = $.trim($('#newSchoolStandardsLabel').val());
		userInfo.schoolStandardsOrder = $('#newSortableSection li').index($('#newLiSchool'))+1;
		if ($('#newSchoolStandardsEnabled').prop('checked')) {userInfo.schoolStandardsEnabled = "Y";} else {userInfo.schoolStandardsEnabled = "N";}
		
	}
	
	
	$('#applyWelcome4').click(function() {
		
		var valError = false;
		clearNotification('#welcome4ErrorMsg');
		
		if ($.trim($('#newLessonLabel').val()) == "" ||
			$.trim($('#newTab2Label').val()) == "" ||
			$.trim($('#newTab3Label').val()) == "" ||
			$.trim($('#newTab4Label').val()) == "" ||
			$.trim($('#newTab5Label').val()) == "" ||
			$.trim($('#newTab6Label').val()) == "" ||
			$.trim($('#newStrategiesLabel').val()) == "" ||
			$.trim($('#newMyStandardsLabel').val()) == "" ||
			$.trim($('#newSharedStandardsLabel').val()) == "" ||
			$.trim($('#newSchoolStandardsLabel').val()) == "") {
			valError = true;
			showNotification('#welcome4ErrorMsg', 'Please enter a name for each Lesson Section');
		}
		
		if (valError == false) {

			updateDisplayList();
			
			$('#welcome4').hide();
			showWelcome5();

		}
	
	});

	function showWelcome5() {
		
		$('#welcome5').show();
		clearNotification('#welcome5ErrorMsg');
		
		var ls = '<tr class="tHeader"><th>Class Name</th><th>Color</th>';
		if (userInfo.classCycle == 'oneWeek') {
			ls = ls + '<th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th style="border-right:0;">Fri</th><th style="border:0; background-color:transparent;"></th>';
		} else if (userInfo.classCycle == 'twoWeeks') {
			ls = ls + '<th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th style="border-right:0;">Fri</th><th style="border:0; background-color:transparent;"></th>';
		} else {
			if (newClassDays == 2) {
				ls = ls + '<th>A</th><th style="border-right:0;">B</th><th style="border:0; background-color:transparent;"></th>';
			} else {
				for (var x=1; x<newClassDays; x++) {
					ls = ls + '<th>' + x + '</th>';
				}
				ls = ls + '<th style="border-right:0;">' + newClassDays + '</th><th style="border:0; background-color:transparent;"></th>';
			}
		}
		ls = ls + '</tr>';
		$('#newClassTableHead').html(ls);
		$('#newClassTableHead').hide();
		$('#newClassTableBody').html('');
		
		newAddClass("", "#3c995b");
		
	}
	
	$('#applyWelcome5').click(function() {
		
		var valError = false;
		clearNotification('#welcome5ErrorMsg');

		userInfo.newClassNames = new Array();
		userInfo.newClassColors = new Array();
		userInfo.newClassDays = new Array();
		
		if (newClasses != null) {
			for (var x=0; x<newClasses.length; x++) {
	 
				userInfo.newClassNames[x] = $.trim($('#newClassName'+x).val());
				userInfo.newClassColors[x] = $('#newClassColor'+x).spectrum('get');
				userInfo.newClassDays[x] = "";
				for (var y=0; y<newClassDays; y++) {
					if ($('#newClassDay'+y+x).prop('checked') == true) {
						userInfo.newClassDays[x] = userInfo.newClassDays[x] + "Y";
					} else {
						userInfo.newClassDays[x] = userInfo.newClassDays[x] + "N";
					}
				}
				
				if (userInfo.newClassNames[x] == "") {
					valError = true;
					showNotification('#welcome5ErrorMsg', 'Please enter a name for each class');
				}
	
			}
		}
		
		if (newClasses == null || newClasses.length == 0) {
			valError = true;
			showNotification('#welcome5ErrorMsg', 'Please add at least one class');
		}
		
		if (valError == false) {
			
			$('#welcome5').hide();

			var fDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave(userInfo.firstDay));
			var lDay = $.datepicker.parseDate("mm/dd/yy",  formatDateToSave(userInfo.lastDay));
			
			$('#holidayBody').html('');
			holidayCount = 0;
			for (var x=0; x<calArray.length; x++) {
				if (calArray[x].eDate >= fDay && calArray[x].eDate <= lDay) {
					var ls = '<tr><td><input type="checkbox" id="hol' + holidayCount + '" value="Y"><span id="holTitle' + holidayCount + '" style="margin-left:4px;">' + calArray[x].eTitle + '</span>, <span id="holDate' + holidayCount + '">' +  formatDateToShow($.datepicker.formatDate('mm/dd/yy', calArray[x].eDate)) + '</span></td></tr>';
					$('#holidayBody').append(ls);
					$('#hol'+holidayCount).prop("checked",true);
					holidayCount++;
				}
			}
			
			$('#addYear3').show();
			$('#applyWelcome6').show();
			$('#cancelWelcome6').show();
			$('#addYear3Title').hide();

		}
		
	});
	
	$('#elementaryClasses').click(function() {
		
		if (newClasses != null && newClasses.length == 1) {
			if ($.trim($('#newClassName0').val()) == "") {
				newClasses.splice(0, 1);
				loadNewClassTable();
			}
		}
		
		newAddClass("Language Arts", "#603f99");
		newAddClass("Mathematics", "#fe090a");
		newAddClass("Reading", "#fe9c0a");
		newAddClass("Science", "#3c995b");
		newAddClass("Social Studies", "#914d14");
		newAddClass("Writing", "#0000ff");

	});
	
	
	$('#newAddClass').click(function() {
		newAddClass("", "#3c995b");
	});

	function newAddClass(newClassName, newClassColor) {
			
		var dayWidth = 35;
		if (newClassDays > 14) {dayWidth = 23;}

		var newPos;
		if (newClasses == null) {
			newClasses = new Array();
			newPos = 0;
		} else {
			newPos = newClasses.length;
		}

		newClasses[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="newClassName' + newPos + '" size="20" style="height:25px; width:200px;" placeholder="e.g. Mathematics"></td>';
		ls = ls + '<td><div style="margin-right:5px;"><input type="text" id="newClassColor' + newPos + '" size="1" class="newClassColor"></div></td>';
		for (var x=0; x<newClassDays; x++) {
			ls = ls + '<td><div style="width:' + dayWidth + 'px; text-align:center;"><input type="checkbox" id="newClassDay' + x + newPos + '" value="Y"></div></td>';
		}
		ls = ls + '<td><img class="newRemoveClass" id="newClassX' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#newClassTableBody').append(ls);
		$('#newClassTableHead').show();
		
		$('#newClassName'+newPos).val(newClassName);

		$('#newClassColor'+newPos).spectrum({
		    showPaletteOnly: true,
		    togglePaletteOnly: true,
		    togglePaletteMoreText: 'more',
		    togglePaletteLessText: 'less',
		    preferredFormat: "hex",
		    color: newClassColor,
		    palette: [colors1]
		});

		for (var x=0; x<newClassDays; x++) {
			$('#newClassDay'+x+newPos).prop('checked',true);
		}
		
	}

	$('.newRemoveClass').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substring(9);
		var removePos = parseInt(temp2,10);
 
		for (var x=0; x<newClasses.length; x++) {
			newClasses[x].name = $('#newClassName'+x).val();
			newClasses[x].color = $('#newClassColor'+x).spectrum('get');
			newClasses[x].day = "";
			for (var y=0; y<newClassDays; y++) {
				if ($('#newClassDay'+y+x).prop('checked') == true) {
					newClasses[x].day = newClasses[x].day + "Y";
				} else {
					newClasses[x].day = newClasses[x].day + "N";
				}
			}
		}
		
		newClasses.splice(removePos, 1);

		loadNewClassTable();

	});

	function loadNewClassTable() {
		
		$('#newClassTableBody').html('');

		var dayWidth = 35;
		if (newClassDays > 14) {dayWidth = 23;}
		
		if (newClasses != null) {
			for (var newPos=0; newPos<newClasses.length; newPos++) {

				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="newClassName' + newPos + '" size="20" style="height:25px; width:200px;"></td>';
				ls = ls + '<td><div style="width:60px; text-align:center;"><input type="text" id="newClassColor' + newPos + '" size="1" class="newClassColor"></div></td>';
				for (var x=0; x<newClassDays; x++) {
					ls = ls + '<td><div style="width:' + dayWidth + 'px; text-align:center;"><input type="checkbox" id="newClassDay' + x + newPos + '" value="Y"></div></td>';
				}
				ls = ls + '<td><img class="newRemoveClass" id="newClassX' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#newClassTableBody').append(ls);
				
				$('#newClassName'+newPos).val(newClasses[newPos].name);

				$('#newClassColor'+newPos).spectrum({
				    showPaletteOnly: true,
				    togglePaletteOnly: true,
				    togglePaletteMoreText: 'more',
				    togglePaletteLessText: 'less',
				    preferredFormat: "hex",
				    color: newClasses[newPos].color,
				    palette: [colors1]
				});
				
				for (var x=0; x<newClassDays; x++) {
					if (newClasses[newPos].day.substr(x,1) == "Y") {
						$('#newClassDay'+x+newPos).prop('checked',true);
					} else {
						$('#newClassDay'+x+newPos).prop('checked',false);
					}
				}

			}
		}
		
		if (newClasses == null || newClasses.length == 0) {
			$('#newClassTableHead').hide();
		}

	}

	$('#pwGenerate').click(function() {
		$('#studentPassword').val(pwGenerate());
	});

	function pwGenerate (length, special) {
		    
		var iteration = 0;
		var password = "";
		var randomNumber;
		    
		while(iteration < 8){
			randomNumber = (Math.floor((Math.random() * 100)) % 94) + 33;
			if ((randomNumber >=33) && (randomNumber <=47)) { continue; }
			if ((randomNumber >=58) && (randomNumber <=64)) { continue; }
			if ((randomNumber >=91) && (randomNumber <=96)) { continue; }
			if ((randomNumber >=123) && (randomNumber <=126)) { continue; }
			iteration++;
			password += String.fromCharCode(randomNumber);
		}
		    
		return password;
		  
	}
	
	$('#gradeReportStandardGrade').change(function(){ 
		getGradeReportStandards();
	}); 
		
	$('#gradeReportStandardState').change(function(){
		getGradeReportStandards();
	}); 

	$('#gradeReportStandardSubject').change(function(){ 
		setGradeReportCategoryDropdown();
	});
	
	function getGradeReportStandards() {

		showLoading();

		jsonInfo = new Object();
		jsonInfo.currentGrade = $('#gradeReportStandardGrade').val();
		jsonInfo.currentState = $('#gradeReportStandardState').val();
		jsonInfo.currentSubject = $('#gradeReportStandardSubject').val();
		jsonInfo.currentClassId = 0;
		
		$.getJSON('getStandards', jsonInfo, loadGradeReportStandards);
	}

	function loadGradeReportStandards(data) {
		
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			var ls;
			
			$('#gradeReportStandardSubject').html('<option value="0">All Subjects</option>');
			if (data.showSubjectIds != null) {
				for (var x=0; x<data.subjects.length; x++) {
					for (var z=0; z< data.showSubjectIds.length; z++) {
						if (data.showSubjectIds[z] == data.subjects[x].subjectId) {
							$('#gradeReportStandardSubject').append('<option value="' + data.subjects[x].subjectId + '">' + data.subjects[x].subjectDesc + '</option>');
						}
					}
				}
			}
			
			grCategoryId	= new Array();
			grCategoryDesc = new Array();
			grCategoryType = new Array();
			
			for (var x=0; x<data.categories.length; x++) {
				grCategoryId[x] = data.categories[x].categoryId;
				grCategoryDesc[x] = data.categories[x].categoryDesc;
				grCategoryType[x] = data.categories[x].subject;
			}
			
			setGradeReportCategoryDropdown();
		}
	}

	function setGradeReportCategoryDropdown() {
		
		var subject = $('#gradeReportStandardSubject').val();
		
		$('#gradeReportStandardCategory').html('<option value="0">All Categories</option>');

		for (var x=0; x<grCategoryId.length; x++) {
			if (grCategoryType[x] == subject) {
				$('#gradeReportStandardCategory').append('<option value= "' + grCategoryId[x] + '">' + grCategoryDesc[x] + '</option>');
			}
		}

		$('#gradeReportStandardCategory').val('0');
	}
	
	$('.lessonAssessment').live('click', function(e) {
		
		jsonInfo = new Object();
		jsonInfo.assessmentId = this.id.substring(16);
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssessmentServlet', jsonInfo, loadLessonAssessment);

	});
	
	$('.scoreHeader.asmGradeCol').live('click', function(e) {
		
		jsonInfo = new Object();
		jsonInfo.assessmentId = this.id.substring(11);
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssessmentServlet', jsonInfo, loadLessonAssessment);

	});

	function loadLessonAssessment(data) {

		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			if (userMode == "T") {
				
				$('#assessmentAction').show();

				action = "updateAssessment";
				clearNotification('#assessmentErrorMsg');

				currentAssessmentId = "asm" + data.assessmentId;
				
				$('#assessmentClass').val(data.subjectId);
				setClassStartEnd($('#assessmentClass').val());
				
				$('#assessmentUnit').html('<option value="0">Select Unit</option>');
				for (var y=0; y<classUnits.length; y++) {
					if ($('#assessmentClass').val() == classUnits[y].classId) {
						var unitNumLabel = "";
						if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
						$('#assessmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
					}
				}
				$('#assessmentUnit').val(data.unitId);
				
				$('#assessmentStart').val(formatDateToShow(data.assessmentStart));
				$('#assessmentEnd').val(formatDateToShow(data.assessmentEnd));
				$('#assessmentTitle').val(data.assessmentTitle);
				$('#assessmentDesc').val(data.assessmentDesc);

				loadAssessmentTypes($('#assessmentClass').val());
				$('#assessmentType').val(data.scoreWeightId);

				$('#assessmentPoints').val(data.totalPoints);
				
				attachType = 'attachAst';
				if (data.attachments != null && data.attachments.length > 0) {
					loadAttachmentsArray(data.attachments);
					$('#'+attachType+'Table').show();
					loadAttachmentsTable();
				} else {
					$('#'+attachType+'Table').hide();
					attachments = null;
				}
				
				standardType = "Assessment";
				standardBody = '#asmStandardsBody';
				$(standardBody).html('');

				if (data.standards != null && data.standards.length > 0) {
					loadStandardArrays(data.standards);
					for (x=0; x<standards.length; x++) {
						var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
						ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
						ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
						$(standardBody).append(ls);
					}
					var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
					$(standardBody).append(ls);
				} else {
					standards = null;
				}
				
				showBox('#editAssessmentBox', 10);
				
			} else {
				
				// for admin or students, allow them to view but not edit
				
				$('#assessmentClass2').html(data.className);

				var unitNumLabel = "";
				if (data.unitNum != "") {unitNumLabel = data.unitNum + " - ";}
				$('#assessmentUnit2').html(unitNumLabel + data.unitTitle);

				$('#assessmentType2').html(data.scoreWeightName);

				var dateLabel = "";
				if (data.assessmentStart != "" && data.assessmentEnd != "") {dateLabel = " - ";}
				$('#assessmentDate2').html(formatDateToShow(data.assessmentStart) + dateLabel + formatDateToShow(data.assessmentEnd));

				$('#assessmentTitle2').html(data.assessmentTitle);
				$('#assessmentDesc2').html(data.assessmentDesc);
				$('#assessmentPoints2').html(data.totalPoints);
				
				attachType = 'attachAst';
				$('#'+attachType+'Body2').html('');
				$('#showAssessmentAttachments').hide();
				if (data.attachments != null && data.attachments.length > 0) {
					for (var x=0; x<data.attachments.length; x++) {
						var ls;
						if (data.attachments[x].url == null || data.attachments[x].url == "") {
							ls = '<tr><td class="showAttachment" style="text-align:left;" width="100%"><span class="attached">' + data.attachments[x].filename + '</span></td></tr>';
						} else {
							ls = '<tr><td class="showAttachment" style="text-align:left;" width="100%"><a href="'+ data.attachments[x].url + '" target="_blank">' + data.attachments[x].filename + '</a></td></tr>';
						}
						$('#'+attachType+'Body2').append(ls);
					}
					$('#'+attachType+'Table2').show();
					$('#showAssessmentAttachments').show();
				} else {
					$('#'+attachType+'Table2').hide();
				}
				
				standardBody = '#asmStandardsBody2';
				$(standardBody).html('');
				$('#showAssessmentStandards').hide();
				if (data.standards != null && data.standards.length > 0) {
					for (var x=0; x<data.standards.length; x++) {
						var ls = '<tr><td class="slCell">' + data.standards[x].id + '</td>';
						ls = ls + '<td class="srCell" style="border-right:0px;">' + data.standards[x].desc + '</td></tr>';
						$(standardBody).append(ls);
					}
					$('#showAssessmentStandards').show();
				}
				
				showBox('#showAssessmentBox', 10);
				
			}
		}
	}

	$('.lessonAssignment').live('click', function(e) {
	
		jsonInfo = new Object();
		jsonInfo.assignmentId = this.id.substring(16);
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssignmentServlet', jsonInfo, loadLessonAssignment);

	});
	
	$('.scoreHeader.asgGradeCol').live('click', function(e) {
		
		jsonInfo = new Object();
		jsonInfo.assignmentId = this.id.substring(11);
		jsonInfo.userMode = userMode;
		
		showLoading();
		$.getJSON('getAssignmentServlet', jsonInfo, loadLessonAssignment);

	});
	
	function loadLessonAssignment(data) {

		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {

			if (userMode == "T") {

				$('#assignmentAction').show();

				action = "updateAssignment";
				clearNotification('#assignmentErrorMsg');

				currentAssignmentId = "asg" + data.assignmentId;

				$('#assignmentClass').val(data.subjectId);
				setClassStartEnd($('#assignmentClass').val());
				
				$('#assignmentUnit').html('<option value="0">Select Unit</option>');
				for (var y=0; y<classUnits.length; y++) {
					if ($('#assignmentClass').val() == classUnits[y].classId) {
						var unitNumLabel = "";
						if (classUnits[y].unitNum != "") {unitNumLabel = classUnits[y].unitNum + " - ";}
						$('#assignmentUnit').append('<option value="' + classUnits[y].unitId + '">' + unitNumLabel + classUnits[y].unitTitle + '</option>');
					}
				}
				$('#assignmentUnit').val(data.unitId);
				
				$('#assignmentStart').val(formatDateToShow(data.assignmentStart));
				$('#assignmentEnd').val(formatDateToShow(data.assignmentEnd));
				$('#assignmentTitle').val(data.assignmentTitle);
				$('#assignmentDesc').val(data.assignmentDesc);

				loadAssignmentTypes($('#assignmentClass').val());
				$('#assignmentType').val(data.scoreWeightId);
				
				$('#assignmentPoints').val(data.totalPoints);
				
				attachType = 'attachAsg';
				if (data.attachments != null && data.attachments.length > 0) {
					loadAttachmentsArray(data.attachments);
					$('#'+attachType+'Table').show();
					loadAttachmentsTable();
				} else {
					$('#'+attachType+'Table').hide();
					attachments = null;
				}
				
				standardType = "Assignment";
				standardBody = '#asgStandardsBody';
				$(standardBody).html('');

				if (data.standards != null && data.standards.length > 0) {
					loadStandardArrays(data.standards);
					for (x=0; x<standards.length; x++) {
						var ls = '<tr><td class="slCell">' + standards[x].id + '</td>';
						ls = ls + '<td class="srCell" style="border-right:0px;">' + standards[x].desc + '</td>';
						ls = ls + '<td class="scCell"><div class="removeStan buttonsmall" style="padding:5px 4px 3px 4px; margin-right:5px;" id="stan' + x + '"><img src="images/trash.png"></div></td></tr>';
						$(standardBody).append(ls);
					}
					var ls = '<tr style="background-color:#DBDFE8;"><td><img src="spacer.gif" width="60px" height="1"></td><td></td><td></td></tr>';
					$(standardBody).append(ls);
				} else {
					standards = null;
				}
				
				showBox('#editAssignmentBox', 10);

			} else {
				
				// for admin or students, allow them to view but not edit
				
				$('#assignmentClass2').html(data.className);

				var unitNumLabel = "";
				if (data.unitNum != "") {unitNumLabel = data.unitNum + " - ";}
				$('#assignmentUnit2').html(unitNumLabel + data.unitTitle);

				$('#assignmentType2').html(data.scoreWeightName);

				var dateLabel = "";
				if (data.assignmentStart != "" && data.assignmentEnd != "") {dateLabel = " - ";}
				$('#assignmentDate2').html(formatDateToShow(data.assignmentStart) + dateLabel + formatDateToShow(data.assignmentEnd));
				
				$('#assignmentTitle2').html(data.assignmentTitle);
				$('#assignmentDesc2').html(data.assignmentDesc);
				$('#assignmentPoints2').html(data.totalPoints);
				
				attachType = 'attachAsg';
				$('#'+attachType+'Body2').html('');
				$('#showAssignmentAttachments').hide();
				if (data.attachments != null && data.attachments.length > 0) {
					for (var x=0; x<data.attachments.length; x++) {
						var ls;
						if (data.attachments[x].url == null || data.attachments[x].url == "") {
							ls = '<tr><td class="showAttachment" style="text-align:left;" width="100%"><span class="attached">' + data.attachments[x].filename + '</span></td></tr>';
						} else {
							ls = '<tr><td class="showAttachment" style="text-align:left;" width="100%"><a href="'+ data.attachments[x].url + '" target="_blank">' + data.attachments[x].filename + '</a></td></tr>';
						}
						$('#'+attachType+'Body2').append(ls);
					}
					$('#'+attachType+'Table2').show();
					$('#showAssignmentAttachments').show();
				} else {
					$('#'+attachType+'Table2').hide();
				}
				
				standardBody = '#asgStandardsBody2';
				$(standardBody).html('');
				$('#showAssignmentStandards').hide();
				if (data.standards != null && data.standards.length > 0) {
					for (var x=0; x<data.standards.length; x++) {
						var ls = '<tr><td class="slCell">' + data.standards[x].id + '</td>';
						ls = ls + '<td class="srCell" style="border-right:0px;">' + data.standards[x].desc + '</td></tr>';
						$(standardBody).append(ls);
					}
					$('#showAssignmentStandards').show();
				}
				
				showBox('#showAssignmentBox', 10);
				
			}
		}
	}
	
	$('.leUnit').live('click', function(e) {

		var ls = '#' + this.id.replace("LUN", "UT");
		var cs = '#' + this.id.replace("LUN", "CID");
		var pos = this.id.indexOf("d");
		
		jsonInfo = new Object();
		jsonInfo.unitId = $(ls).html();
		jsonInfo.userMode = userMode;
		jsonInfo.subjectId = $(cs).html();
		
		showLoading();
		$.getJSON('getUnit', jsonInfo, loadLessonUnit);
		
	});
	
	function loadLessonUnit(data) {

		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true") {
			showErrorMsg();
		} else {
		
			if (userMode == "T") {
				
				loadUnitDetail(data);
				
			} else {
		
				var ls = "";
				
				$('#unitClass2').html(data.className);
				$('#unitDesc2').html(data.unitDesc);

				var numLabel = "";
				if (data.unitNum != "" && data.unitTitle != "") {numLabel = " - ";}
				$('#unitTitle2').html(data.unitNum + numLabel + data.unitTitle);
				
				var dateLabel = "";
				if (data.unitStart != "" && data.unitEnd != "") {dateLabel = " - ";}
				$('#unitDate2').html(formatDateToShow(data.unitStart) + dateLabel + formatDateToShow(data.unitEnd));
				
				$('#unitStandardsBody2').html("");
				$('#showUnitStandards').hide();
				if (data.standards != null && data.standards.length > 0) {
					for (x=0; x<data.standards.length; x++) {
						ls = '<tr><td class="slCell">' + data.standards[x].id + '</td>';
						ls = ls + '<td class="srCell" style="border-right:0px;">' + data.standards[x].desc + '</td></tr>';
						$('#unitStandardsBody2').append(ls);
					}
					$('#showUnitStandards').show();
				}

				$('#attachUnitBody2').html('');
				if (data.attachments != null && data.attachments.length > 0) {
					for (var x=0; x<data.attachments.length; x++) {
						if (data.attachments[x].url == null || data.attachments[x].url == "") {
							ls = '<tr><td class="slCell" style="text-align:left;" width="100%"><span class="attached">' + data.attachments[x].filename + '</span></td></tr>';
						} else {
							ls = '<tr><td class="slCell" style="text-align:left;" width="100%"><a href="'+ data.attachments[x].url + '" target="_blank">' + data.attachments[x].filename + '</a></td></tr>';
						}
						$('#attachUnitBody2').append(ls);
					}		
				}

				$('#unitAssignmentsBody2').html("");
				$('#showUnitAssignments').hide();
				if (data.assignments != null && data.assignments.length > 0) {
					for (var x=0; x<data.assignments.length; x++) {
						ls = '<tr><td class="slCell" style="text-align:left;">' + data.assignments[x].assignmentTitle + '</td></tr>';
						$('#unitAssignmentsBody2').append(ls);
					}
					$('#showUnitAssignments').show();
				}
				
				$('#unitAssessmentsBody2').html("");
				$('#showUnitAssessments').hide();
				if (data.assessments != null && data.assessments.length > 0) {
					for (var x=0; x<data.assessments.length; x++) {
						ls = '<tr><td class="slCell" style="text-align:left;">' + data.assessments[x].assessmentTitle + '</td></tr>';
						$('#unitAssessmentsBody2').append(ls);
					}
					$('#showUnitAssessments').show();
				}
				
				showBox('#showUnitBox', 10);

			}
		}
	}
	
	$('#cancelShowAssessment').click(function() {
		hideBox('#showAssessmentBox', 10);
	});

	$('#cancelShowAssignment').click(function() {
		hideBox('#showAssignmentBox', 10);
	});
	
	$('#cancelShowUnit').click(function() {
		hideBox('#showUnitBox', 10);
	});
	
	$('#cancelShowStudent').click(function() {
		hideBox('#showStudentBox', 10);
	});
	
	$('#showLetterGrades').click(function() {
		clearNotification('#letterGradesErrorMsg');
		showBox('#letterGradesBox', 10);
	});	
	
	$('#cancelLetterGrades').click(function() {
		hideBox('#letterGradesBox', 10);
	});

	$('#sampleLetterGrades').click(function() {
		addLetterGrade("A","90");
		addLetterGrade("B","80");
		addLetterGrade("C","70");
		addLetterGrade("D","60");
		addLetterGrade("F","0");
	});
	
	$('#addLetterGrade').click(function() {
		addLetterGrade("","");
	});
	
	function addLetterGrade(aLetter, aPercent) {

		var newPos;
		if (letterGrades == null) {
			letterGrades = new Array();
			newPos = 0;
		} else {
			newPos = letterGrades.length;
		}

		letterGrades[newPos] = new Object();
		
		var ls = '<tr>';
		ls = ls + '<td><input type="text" id="nameLetterGrade' + newPos + '" style="width:98px;">';
		ls = ls + '<p style="display:none;" id="idLetterGrade' + newPos + '">0</p></td>';
		ls = ls + '<td><input type="text" id="percentLetterGrade' + newPos + '" style="width:98px;"></td>';
		ls = ls + '<td><img class="removeLetterGrade" id="removeLetterGrade' + newPos + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
		ls = ls + '</tr>';

		$('#letterGradesBody').append(ls);
		
		$('#nameLetterGrade'+newPos).val(aLetter);
		$('#percentLetterGrade'+newPos).val(aPercent);
		
		$('#letterGradesHead').show();

	}

	$('.removeLetterGrade').live('click', function() {
		
		var temp1 = this.id;
		var temp2 = temp1.substr(17);
		var aPos = parseInt(temp2,10);
		
			for (var x=0; x<letterGrades.length; x++) {
				letterGrades[x].id = $('#idLetterGrade'+x).html();
				letterGrades[x].name = $('#nameLetterGrade'+x).val();
				letterGrades[x].percent = $('#percentLetterGrade'+x).val();
			}
			letterGrades.splice(aPos, 1);
			loadLetterGradesTable();
		
	});
	
	function loadLetterGradesTable() {
		
		$('#letterGradesBody').html('');

		if (letterGrades != null && letterGrades.length > 0) {
			for (var x=0; x<letterGrades.length; x++) {
	
				var ls = '<tr>';
				ls = ls + '<td><input type="text" id="nameLetterGrade' + x + '" style="width:98px;">';
				ls = ls + '<p style="display:none;" id="idLetterGrade' + x + '">' + letterGrades[x].id + '</p></td>';
				ls = ls + '<td><input type="text" id="percentLetterGrade' + x + '" style="width:98px;"></td>';
				ls = ls + '<td><img class="removeLetterGrade" id="removeLetterGrade' + x + '" border="0" src="images/close3.png" onmouseover="this.src=\'images/onclose.jpg\'" onmouseout="this.src=\'images/close3.png\'" style="cursor:pointer;"></td>';
				ls = ls + '</tr>';

				$('#letterGradesBody').append(ls);
	
				$('#nameLetterGrade'+x).val(letterGrades[x].name);
				$('#percentLetterGrade'+x).val(letterGrades[x].percent);

			}
			$('#letterGradesHead').show();
		} else {
			$('#letterGradesHead').hide();
		}
		
	}
	
	$('#applyLetterGrades').click(function() {
		
		var valError = false;
		clearNotification('#letterGradesErrorMsg');
		
		if (letterGrades != null) {
			for (var x=0; x<letterGrades.length; x++) {
	 
				if ($.trim($('#nameLetterGrade'+x).val()) == "") {
					valError = true;
					showNotification('#letterGradesErrorMsg', 'Please enter a name for each letter grade');
				}
			
				var percent = $.trim($('#percentLetterGrade'+x).val());
				if (percent == "") {
					valError = true;
					showNotification('#letterGradesErrorMsg', 'Please enter a minimum percent for each letter grade');
				} else if (isNaN(percent) || percent > 100 || percent < 0) {
					valError = true;
					showNotification('#letterGradesErrorMsg', 'Each minimum percent must be between 0 and 100');
				}
	
				if (valError == false) {
					letterGrades[x].id = $('#idLetterGrade'+x).html();
					letterGrades[x].name = $.trim($('#nameLetterGrade'+x).val());
					letterGrades[x].percent = percent;
				}
	
			}
		}
	
		if (valError == false) {

			jsonData = new Object();
			
			jsonData.letterGrades = new Array();
			for (var x=0; x<letterGrades.length; x++) {
				jsonData.letterGrades[x] = "{'id':" + letterGrades[x].id + ",'name':" + letterGrades[x].name + ",'percentage':" + letterGrades[x].percent + "}";
			}

			if (paymentNeeded == false) {
				action="updateLetterGrades";
				showLoading();
				$.post('updateLetterGradesServlet', jsonData, letterGradesUpdated, "json");
			} else {
				showExpiredMsg();
			}
			
		}

	});

	function letterGradesUpdated(data) {
		
		hideLoading();

		if (data.notLoggedIn == "true") {
			showLogin();
		} else {
			if (data.error == "true") {
				showErrorMsg();
			} else {
				hideBox('#letterGradesBox', 10);
				loadLetterGrades(data);
				haveSortScoresData = false;
				haveAllStudentGrades = false;
				showStudentGrades();
				showAction();
			}
		}		

	}

	function loadLetterGrades(data) {
		
		letterGrades = new Array();

		if (data.letterGrades != null) {
			for (var x=0; x<data.letterGrades.length; x++) {
				letterGrades[x] = new Object();
				letterGrades[x].id = data.letterGrades[x].letterGradeId;
				letterGrades[x].name = data.letterGrades[x].name;
				letterGrades[x].percent = data.letterGrades[x].percentage;
			}
		}

		loadLetterGradesTable();

	}

	$('input[type=radio][name=gradeReportStandardsShow]').change(function() {
		if (this.value == '0') {
			$('#gradeReportSelectedStandards').hide();
		} else {
			$('#gradeReportSelectedStandards').show();
		}
	});
	
	$('#allAssignments').live('click', function() {
		allAssignments();
	});

	function allAssignments() {
		$('.asgGradesButton').removeClass('selected');
		$('#allAssignments').addClass('selected');
		$('.asgGradeCol').show();
		asgGradesButtonId = 'allAssignments';
		if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
	}

	$('#noAssignments').live('click', function() {
		noAssignments();
	});

	function noAssignments() {
		$('.asgGradesButton').removeClass('selected');
		$('#noAssignments').addClass('selected');
		$('.asgGradeCol').hide();
		asgGradesButtonId = 'noAssignments';
	}
	
	$('#allAssessments').live('click', function() {
		allAssessments();
	});

	function allAssessments() {
		$('.asmGradesButton').removeClass('selected');
		$('#allAssessments').addClass('selected');
		$('.asmGradeCol').show();
		asmGradesButtonId = 'allAssessments';
		if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
	}

	$('#noAssessments').live('click', function() {
		noAssessments();
	});

	function noAssessments() {
		$('.asmGradesButton').removeClass('selected');
		$('#noAssessments').addClass('selected');
		$('.asmGradeCol').hide();
		asmGradesButtonId = 'noAssessments';
	}

	$('#nextAssignment').live('click', function() {
		nextAssignment();
	});

	function nextAssignment() {
		if (asgGradeCols != null && asgGradeCols.length > 0) {
			$('.asgGradesButton, .asmGradesButton').removeClass('selected');
			$('#noAssessments').addClass('selected');
			asmGradesButtonId = 'noAssessments';
			$('.asgGradeCol').hide();
			$('.asmGradeCol').hide();
			if (asgGradesButtonId == "allAssignments" || asgGradesButtonId == "noAssignments") {
				asgGradeColsPos = 0;
			} else {
				asgGradeColsPos++;
				if (asgGradeColsPos >= asgGradeCols.length) {asgGradeColsPos = 0;}
			}
			$(asgGradeCols[asgGradeColsPos]).show();
			$('#nextAssignment').addClass('selected');
			asgGradesButtonId = 'nextAssignment';
			if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
		}
	}

	$('#priorAssignment').live('click', function() {
		priorAssignment();
	});

	function priorAssignment() {
		if (asgGradeCols != null && asgGradeCols.length > 0) {
			$('.asgGradesButton, .asmGradesButton').removeClass('selected');
			$('#noAssessments').addClass('selected');
			asmGradesButtonId = 'noAssessments';
			$('.asgGradeCol').hide();
			$('.asmGradeCol').hide();
			if (asgGradesButtonId == "allAssignments" || asgGradesButtonId == "noAssignments") {
				asgGradeColsPos = 0;
			} else {
				asgGradeColsPos--;
				if (asgGradeColsPos < 0) {asgGradeColsPos = asgGradeCols.length-1;}
			}
			$(asgGradeCols[asgGradeColsPos]).show();
			$('#priorAssignment').addClass('selected');
			asgGradesButtonId = 'priorAssignment';
			if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
		}
	}
	
	$('#nextAssessment').live('click', function() {
		nextAssessment();
	});

	function nextAssessment() {
		if (asmGradeCols != null && asmGradeCols.length > 0) {
			$('.asgGradesButton, .asmGradesButton').removeClass('selected');
			$('#noAssignments').addClass('selected');
			asgGradesButtonId = 'noAssignments';
			$('.asgGradeCol').hide();
			$('.asmGradeCol').hide();
			if (asmGradesButtonId == "allAssessments" || asmGradesButtonId == "noAssessments") {
				asmGradeColsPos = 0;
			} else {
				asmGradeColsPos++;
				if (asmGradeColsPos >= asmGradeCols.length) {asmGradeColsPos = 0;}
			}
			$(asmGradeCols[asmGradeColsPos]).show();
			$('#nextAssessment').addClass('selected');
			asmGradesButtonId = 'nextAssessment';
			if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
		}
	}
	
	$('#priorAssessment').live('click', function() {
		priorAssessment();
	});

	function priorAssessment() {
		if (asmGradeCols != null && asmGradeCols.length > 0) {
			$('.asgGradesButton, .asmGradesButton').removeClass('selected');
			$('#noAssignments').addClass('selected');
			asgGradesButtonId = 'noAssignments';
			$('.asgGradeCol').hide();
			$('.asmGradeCol').hide();
			if (asmGradesButtonId == "allAssessments" || asmGradesButtonId == "noAssessments") {
				asmGradeColsPos = 0;
			} else {
				asmGradeColsPos--;
				if (asmGradeColsPos < 0) {asmGradeColsPos = asmGradeCols.length-1;}
			}
			$(asmGradeCols[asmGradeColsPos]).show();
			$('#priorAssessment').addClass('selected');
			asmGradesButtonId = 'priorAssessment';
			if ($('#hsStandards').html() == "Show Standards") {$('.standardGradeCol').hide();}
		}
	}

	$('#gradesButton').click(function() {
		$('#printButton').show();
		showStudentGrades2();
	});	
	
	function showStudentGrades2() {
		
		if (haveStudentGrades == false) {
			jsonData = new Object();
			jsonData.studentId = studentData.studentId;
			showLoading();
			$.getJSON('getScoresForStudentServlet', jsonData, loadStudentGrades2);
		} else {
			hideMessage();
			hideAll();
			$('#studentGradesView2').show();
			var boxHeight = $(window).height() - 230;
			if (boxHeight < 200) {boxHeight = 200;}
			$('#studentGradesBox2').css({'height':boxHeight+'px'});
			initStudentGradesView();
		}

	}	

	function loadStudentGrades2(data) {
		
		var sLine = "<tr><td class='sgsHeader' style='padding:5px; text-align:left; border-width:1px 0px 1px 1px; border-style:solid; color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#0057C1; border-color:#0057C1;'>";
		var sGrade = "</td><td class='sgsHeader' style='padding:5px; text-align:right; border-width:1px 1px 1px 0px; border-style:solid; border-color:#0057C1; color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#0057C1;'><div style='width:90px;'>";

		var cLine = "<tr><td colspan='2' style='padding:5px 5px 5px 15px; text-align:left; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-style:italic; background-color:#DBDFE8;'>";

		var iLine = "<tr><td style='padding:5px 5px 5px 25px; text-align:left; border-width:0px 0px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF;'>";
		var iGrade = "</td><td style='padding:5px; text-align:right; border-width:1px 1px 1px 0px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF;'>";
		var eLine = "</td></tr>";

		var s2Line = "<tr><td colspan='3' style='padding:5px; text-align:left; border-width:1px 0px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-size:12pt; font-weight:bold; background-color:#DBDFE8;'>";
		var c2Line = "<tr><td colspan='3' style='padding:5px; text-align:left; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8; background-color:#FFFFFF; font-style:italic; background-color:#F4F4F6;'>";
		var s1Cell = "<tr><td style='padding:5px; text-align:center; border-width:0px 1px 1px 1px; border-style:solid; border-color:#DBDFE8;'><div style='width:75px; text-align:center;'>";
		var s2Cell = "</div></td><td style='padding:5px; text-align:left; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;'>";
		var s3Cell = "</td><td style='padding:5px; text-align:center; border-width:0px 1px 1px 0px; border-style:solid; border-color:#DBDFE8;'><div style='width:75px; text-align:center;'>";
		var e2Line = "</div></td></tr>";
		
		hideLoading();
		
		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {

			$('#studentGradesBox2').html("");
			
			$('#studentGradesBox2').data('standards', data.standards);
			
			if (data.teachers && data.teachers.length > 0) {
				$.each(data.teachers, function() {
					var teacherId = this.teacherId;
					var $teacherContainer = $('<div/>').addClass('sgsTeacher sgsTeacher' + this.teacherId);
					var $gradesSummary = $('<table/>');
					var gradePeriods = getGradePeriods(data, this.teacherId);
					var $gradesSummaryHeader = $('<thead>').append($('<tr><th></th></tr>').append($('<th><div>' + this.displayName +'</div><div>View Details</div></th>').data(createElementData(teacherId, 0, 0))));
					var $gradesSummaryBody = $('<tbody/>');
					if(gradePeriods.length > 0) {
						var $headerRow = $gradesSummaryHeader.find('tr');
						$.each(gradePeriods, function(){
							$headerRow.append($('<th></th>').text(this.gradePeriodName).addClass('sgsGradePeriod').data(createElementData(teacherId, this.gradePeriodId, 0)));
						});
						$headerRow.append($('<th>Overall</th>').addClass('sgsGradePeriod').data(createElementData(teacherId, 0, 0)));
					} else {
						$gradesSummaryHeader.find('tr').append($('<th>Overall</th>').data(createElementData(teacherId, 0, 0)));
					}
					var subjects = getSubjects(data, teacherId);
					$.each(subjects, function(i){
						var hasGradePeriod = false;
						var subjectColor = (this.color<=45?colors1[this.color]:this.color);
						var $subjectRow = $('<tr></tr>').addClass((i % 2 == 0) ? 'odd' : 'even');
						$subjectRow.append($('<td/>').data(createElementData(teacherId, 0, this.id)).css('background-color', subjectColor));
						$subjectRow.append($('<td>' + this.name + '</td>').data(createElementData(teacherId, 0, this.id)));
						$.each(this.objects, function(){
							if(!hasGradePeriod && this.gradePeriod) {
								hasGradePeriod = true;
							} 
							var gradePeriodId = this.gradePeriod ? this.gradePeriod.gradePeriodId : 0;
							var $percentage = $('<td/>').data(createElementData(teacherId, gradePeriodId, this.subjectId));
							$percentage.append($('<div></div>').text(this.percentage + '%'));
							$percentage.append($('<div></div>').text(this.letterGrade));
							if (hasGradePeriod) {
								$percentage.addClass('sgsGradePeriod');
							}
							$subjectRow.append($percentage);
						});
						
						if (hasGradePeriod) {
							var $overallPercentage = $('<td/>').data(createElementData(teacherId, 0, this.id)).addClass('sgsGradePeriod');
							$overallPercentage.append($('<div></div>').text(this.overallPercentage + '%'));
							$overallPercentage.append($('<div></div>').text(this.overallLetterGrade));
							$subjectRow.append($overallPercentage);
						}
						
						$gradesSummaryBody.append($subjectRow);
					});
					
					$gradesSummary.append($gradesSummaryHeader);
					$gradesSummary.append($gradesSummaryBody);
					$teacherContainer.append($gradesSummary);
					
					
					$('#studentGradesBox2').append($teacherContainer);
					
					if (data.subjects && data.subjects.length > 0) {
						for (var x=0; x<data.subjects.length; x++) {
							var subject = data.subjects[x];
							if (subject.teacher.id == this.teacherId) {
								var $subject = $("<table style='margin-bottom:20px; border-collapse:collapse;'/>").data(data.subjects[x]).addClass('studentGradesSubjects');
								$subject.append("<col width='100%' />");
								$subject.append("<col width='100px' />");
								var $subjectTBody = $("<tbody style='background-color:white;'/>");
								var teacher = data.subjects[x].teacher;
								var gradePeriod = data.subjects[x].gradePeriod;
								var gradePeriodName = gradePeriod ? (' - ' + gradePeriod.name) : '';

								var letterGrade = data.subjects[x].letterGrade;
								if (letterGrade == null) {letterGrade = "";}
								
								$subjectTBody.append(sLine + data.subjects[x].name + gradePeriodName + sGrade + data.subjects[x].percentage + "%&nbsp;&nbsp;" + letterGrade + e2Line);
				
								if (data.subjects[x].scoreWeights != null && data.subjects[x].scoreWeights.length > 0) {
									for (var y=0; y<data.subjects[x].scoreWeights.length; y++) {
										var type = data.subjects[x].scoreWeights[y].type;
										$subjectTBody.append($(cLine + data.subjects[x].scoreWeights[y].name + " (" + data.subjects[x].scoreWeights[y].percentage + "%)" + eLine).addClass('sgsClassWork').data('type', type));
										if (data.subjects[x].scoreWeights[y].items != null && data.subjects[x].scoreWeights[y].items.length > 0) {
											for (var z=0; z<data.subjects[x].scoreWeights[y].items.length; z++) {
												$subjectTBody.append($(iLine + data.subjects[x].scoreWeights[y].items[z].title + "&nbsp;" + data.subjects[x].scoreWeights[y].items[z].score + iGrade + data.subjects[x].scoreWeights[y].items[z].percentage + "%" + eLine).addClass('sgsClassWork').data('type', type));
											}
										}
									}
								}
								
								if (data.subjects[x].items != null && data.subjects[x].items.length > 0) {
									for (var z=0; z<data.subjects[x].items.length; z++) {
										$subjectTBody.append(iLine + data.subjects[x].items[z].title + "&nbsp;" + data.subjects[x].items[z].score + iGrade + data.subjects[x].items[z].percentage + "%" + eLine);
									}
								}
								
								var subjectColor = (subject.color<=45?colors1[subject.color]:subject.color);
								if (subjectColor) {
									$subjectTBody.find('.sgsHeader').css({'background-color' : subjectColor, 'border-color' : subjectColor});
								}
				
								$subject.append($subjectTBody);
								$('#classScores').append($subject);
							}
						}
					}
				});
			}
			
			initStudentGradesView();
			
			$('#studentGradeReportTeacher').html('');
			$('#overallGradeReportTeacher').html('');
			$('#studentGradeReportTeacher').append($('<option/>').text('All Teachers').val(0));
			$('#overallGradeReportTeacher').append($('<option/>').text('All Teachers').val(0));
			$('#studentGradeReportClass').html('');
			$('#overallGradeReportClass').html('');
			var classOptions = [{'text' : 'All Subjects', 'val' : 0, 'teacherId' : 0}];
			$.each(data.teachers, function(i) {
				$('#studentGradeReportTeacher').append($('<option/>').text(this.displayName).val(this.teacherId));
				$('#overallGradeReportTeacher').append($('<option/>').text(this.displayName).val(this.teacherId));
				var teacherId = this.teacherId;
				var subjects = getSubjects(data, teacherId);
				$.each(subjects, function(){
					classOptions.push({'text' : this.name, 'val' : this.id, 'teacherId' : teacherId});
				});
			});
			$('#studentGradeReportClass').data('options', classOptions);
			$('#overallGradeReportClass').data('options', classOptions);
			
			$('#studentGradeReportPeriod').html('');
			$('#overallGradeReportPeriod').html('');
			var periodOptions = [{'text' : 'All Periods', 'val' : 0, 'teacherId' : 0}]
			$.each(data.gradePeriods, function(i) {
				periodOptions.push({'text' : this.gradePeriodName, 'val' : this.gradePeriodId, 'teacherId' : this.teacherId});
			});
			$('#studentGradeReportPeriod').data('options', periodOptions);
			$('#overallGradeReportPeriod').data('options', periodOptions);
			haveStudentGrades = true;
			showStudentGrades2();

		}
	}
	
	$('#studentGradeReportTeacher').change(function(){
		var teacherId = $(this).val();
		$('#studentGradeReportClass').html('');
		$.each($('#studentGradeReportClass').data('options'), function(){
			if (this.teacherId == teacherId || this.val == 0) {
				$('#studentGradeReportClass').append($('<option/>').val(this.val).text(this.text));
			}
		});
		
		$('#studentGradeReportPeriod').html('');
		$.each($('#studentGradeReportPeriod').data('options'), function(){
			if (this.teacherId == teacherId || this.val == 0) {
				$('#studentGradeReportPeriod').append($('<option/>').val(this.val).text(this.text));
			}
		});
	});
	
	$('#overallGradeReportTeacher').change(function(){
		var teacherId = $(this).val();
		$('#overallGradeReportClass').html('');
		$.each($('#overallGradeReportClass').data('options'), function(){
			if (this.teacherId == teacherId || this.val == 0) {
				$('#overallGradeReportClass').append($('<option/>').val(this.val).text(this.text));
			}
		});
		
		$('#overallGradeReportPeriod').html('');
		$.each($('#overallGradeReportPeriod').data('options'), function(){
			if (this.teacherId == teacherId || this.val == 0) {
				$('#overallGradeReportPeriod').append($('<option/>').val(this.val).text(this.text));
			}
		});
		
	});
	
	
	
	function createElementData(teacherId, gradePeriodId, subjectId) {
		return {'teacherId' : teacherId, 'gradePeriodId'  : gradePeriodId, 'subjectId' : subjectId};
	}
	
	$('#classScoresBox > .close').click(function(){
		hideBox('#classScoresBox', 30);
	});
	
	$('.sgsTeacher > table > tbody > tr > td, .sgsTeacher > table > thead > tr > th:not(:first-child)').live('click', function(){
		var data = $(this).data();
		showStudentGradesViewDetail(data.teacherId, data.gradePeriodId, data.subjectId);
		showBox('#classScoresBox', 30);
	});
	
	$('.toggleStandards').click('click', function() {
		var currentMode = +$(this).data('mode');
		if (currentMode == 1) {
			$('.studentGradesStandards').hide();
			$(this).text('Show Standards');
			$(this).data('mode', 0);
		} else {
			$('.studentGradesStandards').show();
			if ($('.studentGradesStandards').length > 0) {
				$('#classScoresScroll').scrollTop($('.studentGradesStandards').offset().top);
			}
			$(this).text('Hide Standards');
			$(this).data('mode', 1);
		}
	});
	
	
	
	$('.toggleClasswork').live('click', function(){
		var type = $(this).data('type');
		var currentMode = +$(this).data('mode');
		var label = "";
		var mode;
		
		if (currentMode == 1) {
			label += 'Show ';
			mode = 0;
		} else {
			label += 'Hide ';
			mode = 1;
		}
		$(this).data('mode', mode);
		
		if (type == 'M') {
			label += 'Assessments';
		} else if (type == 'G') {
			label += 'Assignments';
		}
		
		$(this).text(label);
		
		$('.sgsClassWork').each(function(){
			var cwType = $(this).data('type');
			if (type == cwType) {
				if (mode == 0) {
					$(this).hide();
				} else {
					$(this).show();
				}
			}
		});
		
	});
	
	function getSubjects(data, teacherId) {
		var map = {};
		if (data.subjects) {
			$.each(data.subjects, function(i){
				if (this.teacher.id == teacherId) {
					var item = map[this.subjectId];
					if (!item) {
						item = map[this.subjectId] = { 'id' : this.subjectId, 'name' : this.name, 'objects' : [], 'index' : i, 'color' : this.color, 'overallLetterGrade' : this.overallLetterGrade, 'overallPercentage' : this.overallPercentage };
					}
					item.objects.push(this);
				}
			});
		}
		return toArray(map, 'index');
	}
	
	 function toArray(obj, sortValue){
	      var keysSorted = Object.keys(obj).sort(function(a,b){return obj[a][sortValue]-obj[b][sortValue]});
	      var objSorted = [];
	      for(var i = 0; i < keysSorted.length; i++){
	    	  objSorted.push(obj[keysSorted[i]]);
	      }
	      return objSorted;
	    }
	
	function getGradePeriods(data, teacherId) {
		var gradePeriods = [];
		if (data.gradePeriods) {
			$.each(data.gradePeriods, function(){
				if (this.teacherId == teacherId) {
					gradePeriods.push(this);
				}
			});
		}
		return gradePeriods;
	}
	
	function initStudentGradesView(){
		var selectedTeacherId = +$('#studentList').data('selected');
		var selectedPeriodId = +$('#gradePeriodList').data('selected');
		var selectedSubjectId = 0;
		
		$('.sgsTeacher').hide();
		if (selectedTeacherId > 0) {
			$('.sgsTeacher' + selectedTeacherId).show();
		} else {
			$('.sgsTeacher').show();
		}
		
		$('.sgsGradePeriod').show();
		if (selectedPeriodId != 0){
			$('.sgsGradePeriod').each(function(){
				if ($(this).data().gradePeriodId != selectedPeriodId) {
					$(this).hide();
				}
			});
		}
	}
	
	function showStudentGradesViewDetail(selectedTeacherId, selectedPeriodId, selectedSubjectId) {
		$('.studentGradesSubjects').show();
		$('.studentGradesSubjects').each(function() {
			var data = $(this).data();
			var periodId = (data.gradePeriod) ? data.gradePeriod.gradePeriodId : 0;
			var teacherId = data.teacher.id;
			var subjectId = data.subjectId;
			var showElement = true;
			if (selectedTeacherId != 0 && selectedTeacherId != teacherId) {
				showElement = false;
			}
			
			if (showElement && selectedPeriodId != 0 && selectedPeriodId != periodId) {
				showElement = false;
			}
			
			if (showElement && selectedSubjectId != 0 && selectedSubjectId != subjectId) {
				showElement = false;
			}
			
			if (!showElement) {
				$(this).hide();
			}
		});
		
		showStudentGradesStandardsDetail(selectedTeacherId, selectedPeriodId, selectedSubjectId);
		
		resetClassworkView();
	} 
	
	function showStudentGradesStandardsDetail(selectedTeacherId, selectedPeriodId, selectedSubjectId) {
		var data = $('#studentGradesBox2').data('standards');
		if (userMode == 'A') {
			data = $('#schoolStudentGradesBox').data('standards');
		}
		$('.studentGradesStandards').remove();
		var $standards = $('<table/>').css({'margin-bottom' : '20px', 'border-collapse' : 'collapse'}).addClass('studentGradesStandards');
		$standards.append($('<tr><td colspan="3">Standards</td></tr>'));
		$.each(data, function() {
			if (this.teacherId == selectedTeacherId && this.gradePeriodId == selectedPeriodId && this.subjectId == selectedSubjectId) {
				$standards.append($('<tr><td class="standardSuject" colspan="3">' + this.desc + '</td></tr>'));
				$.each(this.categories, function(){
					$standards.append($('<tr><td class="standardCategory" colspan="3">' + this.desc + '</td></tr>'));
					$.each(this.scores, function() {
						$standards.append($('<tr class="standardScore"><td><div>' + this.standardId + '</div></td><td>' + this.standardDesc +'</td><td><div>' + (this.code ? this.code : '') + '</div></td></tr>'));
					});
				});
				$('#classScores').append($standards);
			}
		});
	}
	
	function resetClassworkView() {
		$('.toggleClasswork').data('mode', '0').click();
		$('.toggleStandards').data('mode', '0').click();
		$('#classScoresScroll').scrollTop(0);
	}

	function fillLessonLayout() {
		
		var lPos = 0;
		for (var x=0; x<lessonLayouts.length; x++) {
			if (lessonLayouts[x].lessonLayoutId == userInfo.currentLessonLayoutId) {
				lPos = x;
				break;
			}
		}
		
		userInfo.tab1Order = lessonLayouts[lPos].tab1DisplayOrder
		userInfo.lessonEnabled = lessonLayouts[lPos].tab1Enabled
		userInfo.lessonLabel = lessonLayouts[lPos].tab1Label
		userInfo.tab2Order = lessonLayouts[lPos].tab2DisplayOrder
		userInfo.tab2Enabled = lessonLayouts[lPos].tab2Enabled
		userInfo.tab2Label = lessonLayouts[lPos].tab2Label
		userInfo.tab3Order = lessonLayouts[lPos].tab3DisplayOrder
		userInfo.tab3Enabled = lessonLayouts[lPos].tab3Enabled
		userInfo.tab3Label = lessonLayouts[lPos].tab3Label
		userInfo.tab4Order = lessonLayouts[lPos].tab4DisplayOrder
		userInfo.tab4Enabled = lessonLayouts[lPos].tab4Enabled
		userInfo.tab4Label = lessonLayouts[lPos].tab4Label
		userInfo.tab5Order = lessonLayouts[lPos].tab5DisplayOrder
		userInfo.tab5Enabled = lessonLayouts[lPos].tab5Enabled
		userInfo.tab5Label = lessonLayouts[lPos].tab5Label
		userInfo.tab6Order = lessonLayouts[lPos].tab6DisplayOrder
		userInfo.tab6Enabled = lessonLayouts[lPos].tab6Enabled
		userInfo.tab6Label = lessonLayouts[lPos].tab6Label
		userInfo.strategiesOrder = lessonLayouts[lPos].strategiesDisplayOrder
		userInfo.strategiesEnabled = lessonLayouts[lPos].strategiesEnabled
		userInfo.strategiesLabel = lessonLayouts[lPos].strategiesLabel
		userInfo.myStandardsOrder = lessonLayouts[lPos].tab7DisplayOrder
		userInfo.myStandardsEnabled = lessonLayouts[lPos].tab7Enabled
		userInfo.myStandardsLabel = lessonLayouts[lPos].tab7Label
		userInfo.sharedStandardsOrder = lessonLayouts[lPos].tab8DisplayOrder
		userInfo.sharedStandardsEnabled = lessonLayouts[lPos].tab8Enabled
		userInfo.sharedStandardsLabel = lessonLayouts[lPos].tab8Label
		userInfo.schoolStandardsOrder = lessonLayouts[lPos].tab9DisplayOrder
		userInfo.schoolStandardsEnabled = lessonLayouts[lPos].tab9Enabled
		userInfo.schoolStandardsLabel = lessonLayouts[lPos].tab9Label
		
	}
	
	(function() {
		var se = document.createElement('script'); se.type = 'text/javascript'; se.async = true;
		se.src = '//storage.googleapis.com/code.snapengage.com/js/3a9939b2-47ee-44e3-96b7-401e000936b1.js';
		var done = false;
		se.onload = se.onreadystatechange = function() {
		if (!done&&(!this.readyState||this.readyState==='loaded'||this.readyState==='complete')) {
		done = true;
		/* Place your SnapEngage JS API code below */
		SnapEngage.hideButton();
		$('#snapengage-button').hide();
		/* SnapEngage.allowChatSound(true); Example JS API: Enable sounds for Visitors. */
		}
		};
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(se, s);
		})();

	$('#toDoList').click(function(){ 
		showToDos();
	});

	$('#closeToDo').click(function(){ 
		$('#toDoBox').hide();
	}); 
	
	$('#refreshToDo').click(function(){ 
		getToDos();
	}); 

	function showToDos() {
		if (haveToDos == false) {
			getToDos();
		} else {
			showBox('#toDoBox', 0);
		}
	}
	
	function getToDos() {
		showLoading();
		action = "getToDos";
		$.getJSON('getToDos', 'classId=all', loadToDos);
	}

	function loadToDos(data) {

		hideLoading();
		
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {

			haveToDos = true;
			$('#toDoBody').html("");
			
			for (var x=0; x<data.toDos.length; x++) {
				
				var priority = "";
				if (data.toDos[x].priority == 3) {
					priority = "High";
				} else if (data.toDos[x].priority == 2) {
					priority = "Medium";
				} else if (data.toDos[x].priority == 1) {
					priority = "Low";
				}				
				
				var done = '';
				if (data.toDos[x].done == 1) {
					done = '<img src="images/apply.png">';
				}
				
				var ls = '<tr>';
				ls = ls + '<td class="srCell toDoCell toDoDone" style="text-align:center;" id="toDo1' + data.toDos[x].toDoId + '">' + done + '</td>';
				ls = ls + '<td class="scCell toDoCell toDoPriority" id="toDo2' + data.toDos[x].toDoId + '">' + priority + '</td>';
				ls = ls + '<td class="scCell"><input type="text" class="toDoDate" id="toDo3' + data.toDos[x].toDoId + '" style="height:20px; width:75px; border:0;" value="' + formatDateToShow(data.toDos[x].dueDate) + '"></td>';
				ls = ls + '<td style="border-right:0;" class="srCell"><input type="text" class="toDoText" id="toDo4' + data.toDos[x].toDoId + '" style="height:20px; width:355px; border:0;" value="' + data.toDos[x].toDoText + '"></td>';
				ls = ls + '<td style="background-color:#FFFFFF; border-bottom:1px solid #DBDFE8;"><div class="toDoRemove buttonsmall" style="padding:2px 4px 1px 4px;" id="toDo5' + data.toDos[x].toDoId + '"><img src="images/trash.png"></div></td>';
				ls = ls + '</tr>';
				
				$('#toDoBody').append(ls);
			
			}

			var df = "mm" + userInfo.dateDelimiter + "dd" + userInfo.dateDelimiter + "yy";
			if (userInfo.dateFormat == 2) {
				df = "dd" + userInfo.dateDelimiter + "mm" + userInfo.dateDelimiter + "yy";
			} 
			$('.toDoDate').datepicker({dateFormat : df});
			showToDos();

			showAction();

		}
	}

	$('.toDoDone').live('click', function() {
		if ($(this).html() == '<img src="images/apply.png">') {
			$(this).html('');
		} else {
			$(this).html('<img src="images/apply.png">');
		}
		updateToDo(this.id.substr(5));
	});

	$('.toDoPriority').live('click', function() {
		if ($(this).html() == '') {
			$(this).html('High');
		} else if ($(this).html() == 'High') {
			$(this).html('Medium');
		} else if ($(this).html() == 'Medium') {
			$(this).html('Low');
		} else {
			$(this).html('');
		}
		updateToDo(this.id.substr(5));
	});

	$('.toDoDate').live('change', function() {
		updateToDo(this.id.substr(5));
	});

	$('.toDoText').live('change', function() {
		updateToDo(this.id.substr(5));
	});

	$('.toDoRemove').live('click', function() {
		jsonInfo = new Object();
		jsonInfo.toDoId = this.id.substr(5);
		jsonInfo.action = "D";
		showLoading();
		$.getJSON('updateToDo', jsonInfo, loadToDos);
	});
	
	$('#addToDo').click(function(){ 
		jsonInfo = new Object();
		jsonInfo.action = "A";
		showLoading();
		$.getJSON('updateToDo', jsonInfo, addToDoDone);
	});

	function addToDoDone(data) {
		hideLoading();
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {
			var ls = '<tr>';
			ls = ls + '<td class="srCell toDoCell toDoDone" style="text-align:center;" id="toDo1' + data.toDoId + '"></td>';
			ls = ls + '<td class="scCell toDoCell toDoPriority" id="toDo2' + data.toDoId + '"></td>';
			ls = ls + '<td class="scCell"><input type="text" class="toDoDate" id="toDo3' + data.toDoId + '" style="height:20px; width:75px; border:0;" value=""></td>';
			ls = ls + '<td style="border-right:0;" class="srCell"><input type="text" class="toDoText" id="toDo4' + data.toDoId + '" style="height:20px; width:355px; border:0;" value=""></td>';
			ls = ls + '<td style="background-color:#FFFFFF; border-bottom:1px solid #DBDFE8;"><div class="toDoRemove buttonsmall" style="padding:2px 4px 1px 4px;" id="toDo5' + data.toDoId + '"><img src="images/trash.png"></div></td>';
			ls = ls + '</tr>';
			$('#toDoBody').prepend(ls);
		}
	}
	
	function updateToDo(toDoId) {
		jsonInfo = new Object();
		jsonInfo.action = "U";
		jsonInfo.toDoId = toDoId;

		if ($('#toDo1'+toDoId).html() == '<img src="images/apply.png">') {
			jsonInfo.done = 1;
		} else {
			jsonInfo.done = 0;
		}

		if ($('#toDo2'+toDoId).html() == '') {
			jsonInfo.priority = 0;
		} else if ($('#toDo2'+toDoId).html() == 'High') {
			jsonInfo.priority = 3;
		} else if ($('#toDo2'+toDoId).html() == 'Medium') {
			jsonInfo.priority = 2;
		} else {
			jsonInfo.priority = 1;
		}

		if ($('#toDo3'+toDoId).val() != "") {
			jsonInfo.dueDate = formatDateToSave($('#toDo3'+toDoId).val());
		}
		
		jsonInfo.toDoText = $.trim($('#toDo4'+toDoId).val())
		
		$.getJSON('updateToDo', jsonInfo, updateToDoComplete);
	}
	
	function updateToDoComplete(data) {
		if (data.notLoggedIn == "true") {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} 
	}
	
	function toDate(data) {
	    var from = data.split("/");
	    return new Date(from[2], from[0] - 1, from[1]);
	}
	
	$('#todayEvent').click(function(){ 
		showTodayEvent();
	});
	
	function showTodayEvent() {
		if (todayEventPos == 0) {
			$('#listEventBox').scrollTop(0);
			var rows = $('tr', '#eventTable');
			var row = $(rows.get(todayEventRow));
			todayEventPos = row.offset().top - 262;
		}
		$('#listEventBox').scrollTop(todayEventPos);
	}

	$('#todayLesson').click(function(){ 
		showTodayLesson();
	});
	
	function showTodayLesson() {
		if (todayLessonPos == 0) {
			$('#listLessonBox').scrollTop(0);
			var rows = $('tr', '#listTable');
			var row = $(rows.get(todayLessonRow));
			todayLessonPos = row.offset().top - 452;
		}
		$('#listLessonBox').scrollTop(todayLessonPos);
	}

	$('#todayFromLesson').click(function(){ 
		showTodayFromLesson();
	});
	
	function showTodayFromLesson() {
		if (todayFromLessonPos == 0) {
			$('#importFromLessonBox').scrollTop(0);
			var rows = $('tr', '#importFromTable');
			var row = $(rows.get(todayFromLessonRow));
			todayFromLessonPos = row.offset().top - $('#importFromLessonBox').offset().top - 52;
		}
		$('#importFromLessonBox').scrollTop(todayFromLessonPos);
	}

	$('#todayToLesson').click(function(){
		showTodayToLesson();
	});
	
	function showTodayToLesson() {
		if (todayToLessonPos == 0) {
			$('#importToLessonBox').scrollTop(0);
			var rows = $('tr', '#importToTable');
			var row = $(rows.get(todayToLessonRow));
			todayToLessonPos = row.offset().top - $('#importToLessonBox').offset().top - 52;
		}
		$('#importToLessonBox').scrollTop(todayToLessonPos);
	}
	
	$('#cancelCSVImport').click(function(){
		hideBox('#importCSVFileBox', 30);
	});
	
	$('#cancelAddCopyTeacher').click(function(){
		hideBox('#addCopyTeacherBox', 30);
	});
	
	$('#copyChangeTeacher').click(function() {
		if ($('#pickCopyTeacher').css('display') == 'none') {
			$('#pickCopyTeacher').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickCopyTeacher = true;
		} else {
			$('#pickCopyTeacher').hide();
		}
	});

	$('#copyChangeYear').click(function() {
		if ($('#pickCopyYear').css('display') == 'none') {
			if ($('#pickCopyYear').html() == "") {
				showErrorBox('Please select a Teacher');
			} else {
				$('#pickCopyYear').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
				changePickCopyYear = true;
			}
		} else {
			$('#pickCopyYear').hide();
		}
	});

	$('#copyChangeClass').click(function() {
		if ($('#pickCopyClass').css('display') == 'none') {
			if ($('#pickCopyClass').html() == "") {
				if (copyYearPos == "") {
					showErrorBox('Please select a School Year');
				} else {
					showErrorBox('There are no classes currently set as viewable for this teacher and school year. Please contact the teacher to request that one or more classes be made viewable.');
				}
			} else {
				$('#pickCopyClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
				changePickCopyClass = true;
			}
		} else {
			$('#pickCopyClass').hide();
		}
	});

	$('#copyToClass').click(function() {
		if ($('#pickToClass').css('display') == 'none') {
			$('#pickToClass').css({'top':$(this).offset().top+45,'left':$(this).offset().left}).show();
			changePickToClass = true;
		} else {
			$('#pickToClass').hide();
		}
	});

	$('#deleteCopyTeacher').click(function() {
		jsonInfo = new Object();
		jsonInfo.sharedUserEmail = $.trim($('#shareEmail').val());
		jsonInfo.sharedUserKey = $.trim($('#shareKey').val());
		jsonInfo.action = "D";
		showLoading();
		$.getJSON('saveSharedTeacher', jsonInfo, sharedTeacherSaved);
	});
	
	$('.copyTeacherPicker').live('click', function() {
		$('#importFromBody').html('');
		clearNotification('#importErrorMsg');
		if (this.id == "addCopyTeacher" ) {
			$('#shareEmail').val("");
			$('#shareKey').val("");
			clearNotification('#addCopyTeacherErrorMsg');
			$('#deleteCopyTeacher').hide();
			showBox('#addCopyTeacherBox', 30);
		} else if (this.id == "showCSVImport" ) {
			if (toClassPos == "") {
				showErrorBox('Please select a class to copy TO');
			} else {
				showBox('#importCSVFileBox', 30);
			}
		} else {
			jsonInfo = new Object();
			if (this.id == "copyMyClasses" ) {
				importTab = 'M';
				jsonInfo.sharedUserEmail = userInfo.emailAddress;
				jsonInfo.sharedUserKey = userInfo.sharedUserKey;
				$('#copyTeacherLabel').html("My Classes");
			} else {
				importTab = 'T';
				copyTeacherPos = this.id.substr(11);
				jsonInfo.sharedUserEmail = savedTeachers[copyTeacherPos].sharedEmail;
				jsonInfo.sharedUserKey = savedTeachers[copyTeacherPos].sharedKey;
				$('#copyTeacherLabel').html(savedTeachers[copyTeacherPos].sharedEmail);
			}
			copyYearPos = "";
			$('#copyYearLabel').html("Select Year");
			copyClassPos = "";
			$('#copyClassLabel').html("Select Class");
			$('#showFromLessons').hide();
			showLoading();
			$.getJSON('getSharedClasses', jsonInfo, chooseShareClass);
		}
	});
	
	$('.copyYearPicker').live('click', function() {
		$('#importFromBody').html('');
		copyYearPos = this.id.substr(8);
		copyClassPos = "";
		$('#copyClassLabel').html("Select Class");
		$('#showFromLessons').hide();
		$('#pickCopyClass').html('');
		for (var x=0; x<shareYears[copyYearPos].classes.length; x++) {
			$('#pickCopyClass').append('<div id="copyClass' + x + '" class="copyClassPicker"><p style="width:150px; overflow-x:hidden;">' + shareYears[copyYearPos].classes[x].className + '</p></div>');
		}
		$('#copyYearLabel').html(shareYears[copyYearPos].yearName);
	}); 

	$('.copyClassPicker').live('click', function() {
		$('#importFromBody').html('');
		copyClassPos = this.id.substr(9);
		$('#copyClassLabel').html(shareYears[copyYearPos].classes[copyClassPos].className);
		$('#showFromLessons').show();
		showFromLessons();
	}); 
	
	$('.toClassPicker').live('click', function() {
		$('#importToBody').html('');
		toClassPos = this.id.substr(11);
		$('#toClassLabel').html(classNames[toClassPos]);
		showToLessons();
	}); 
	
	$('.editCopyTeacher').live('click', function() {
		var pos = this.id.substr(15);
		$('#shareEmail').val(savedTeachers[pos].sharedEmail);
		$('#shareKey').val(savedTeachers[pos].sharedKey);
		clearNotification('#addCopyTeacherErrorMsg');
		clearNotification('#importErrorMsg');
		$('#deleteCopyTeacher').show();
		showBox('#addCopyTeacherBox', 30);
		$('#pickCopyTeacher').hide();
		return false;
	}); 
	
	$('.strategyRow').live('click', function(e) {
		currentStrategyId = this.id;
		$('#strategyAction').show();
		hideLists();
		editStrategy();
	});


	$('#strategyButton, #schoolStrategyButton').click(function() {
		browserButton = false;
		window.location.hash = "strategies";
		viewStrategies();
	});

	function viewStrategies() {
		if (haveStrategies == false) {
			getMyStrategies();
		} else {
			showStrategies();
		}
	}
	
	function showStrategies() {
		hideAll();
		$('#myStrategiesView').show();
	}
	
	function getMyStrategies() {
		
		jsonInfo = new Object ();
		if (userMode == 'A') {
			jsonInfo.group = userInfo.schoolId;
		} else {
			jsonInfo.group = userInfo.userId;
		}
		
		showLoading();
		$.getJSON('getStrategies', jsonInfo, loadMyStrategies);
	}
	
	$('#addStrategy').click(function() {

		action = "addStrategy";
		clearNotification('#editStrategyErrorMsg');
		
		$('#strategyCode').val('');
		$('#strategyTitle').val('');
		$('#strategyDescription').val('');
		
		$('#strategyAction').hide();

		showBox('#editStrategyBox', 10);
		
		$('#strategyTitle').focus();	
		
	});

	function editStrategy() {
		
		action = "updateStrategy";
		clearNotification('#editStrategyErrorMsg');
		
		$('#strategyCode').val($('#'+currentStrategyId+'1').html());
		$('#strategyTitle').val($('#'+currentStrategyId+'2').html());
		$('#strategyDescription').val($('#'+currentStrategyId+'3').html());
		
		$('#strategyAction').show();

		showBox('#editStrategyBox', 10);
		
		$('#strategyTitle').focus();	

	}

	$('#deleteStrategy').click(function() {
		
		if (paymentNeeded == false) {
			if (confirm('This will also remove the strategy from all lessons. Are you sure you want to delete?')) {

				jsonInfo = new Object ();
				jsonInfo.action = "D";
				jsonInfo.strategyId = currentStrategyId.substr(8);
				jsonInfo.userMode = userMode;

				if (userMode == 'A') {
					jsonInfo.group = userInfo.schoolId;
				} else {
					jsonInfo.group = userInfo.userId;
				}
				
				hideBox('#editMyListBox', 10);

				action = 'deleteStrategy';
				showLoading();
				$.getJSON('updateStrategy', jsonInfo, loadMyStrategies);

			}
		} else {
			showExpiredMsg();
		}
				
	});

	$('#cancelEditStrategy').click(function() {
		hideBox('#editStrategyBox', 10);
	});

	$('#applyEditStrategy').click(function() {

		var valError = false;
		clearNotification('#editStrategyErrorMsg');

		if ($.trim($('#strategyTitle').val()) == "") {
			valError = true;
			showNotification('#editStrategyErrorMsg', 'Please enter a title for your Strategy');
		}
		
		if (valError == false) {

			jsonInfo = new Object ();

			if (userMode == 'A') {
				jsonInfo.group = userInfo.schoolId;
			} else {
				jsonInfo.group = userInfo.userId;
			}

			jsonInfo.category = '';
			jsonInfo.code = $.trim($('#strategyCode').val());
			jsonInfo.title = $.trim($('#strategyTitle').val());
			jsonInfo.description = $.trim($('#strategyDescription').val());
			
			if (action == "addStrategy") {
				jsonInfo.action = "A";
			} else {
				jsonInfo.action = "U";
				jsonInfo.strategyId = currentStrategyId.substr(8);
			}
			
			if (paymentNeeded == false) {
				showLoading();
					$.post('updateStrategy', jsonInfo, loadMyStrategies, "json");
			} else {
				showExpiredMsg();
			}

		}
		
	});

	function loadMyStrategies(data) {

		hideLoading();

		if (data.notLoggedIn == "true" || data.notLoggedIn == true) {
			showLogin();
		} else if (data.error == "true" || data.error == true) {
			showErrorMsg();
		} else {

			hideBox('#editStrategyBox', 10);
			
			$('#strategiesBody').html('');
			
			var fromHeight = $(window).height() - 220;
			if (fromHeight < 200) {fromHeight = 200;}
			$('#listMyStrategiesBox').css({'height':fromHeight+'px'});

			if (data.strategies != null && data.strategies.length > 0) {
				for (var x=0; x<data.strategies.length; x++) {
					var id = 'strategy' + data.strategies[x].strategyId;
					var ls = '<tr class="pickRow strategyRow" style="cursor:pointer;" id="' + id + '">';
					ls = ls + '<td class="slCell" id="' + id + '1">' + data.strategies[x].code + '</td>';
					ls = ls + '<td class="srCell" id="' + id + '2">' + data.strategies[x].title + '</td>';
					ls = ls + '<td style="display:none;" id="' + id + '3">' + data.strategies[x].description + '</td>';
					ls = ls + '</tr>';
					$('#strategiesBody').append(ls);
				}
			}

			haveStrategies = true;
			showStrategies();
			
			if (action == "addStrategy" || action == "updateStrategy" || action == "deleteStrategy") {
				showAction();
			}

		}

	}

	$('#importStudentsFileButton').click(function() {
		hideBox('#importBoxStudents', 10);
		haveStudents = false;
		action = "showPlans";
		showPlans();
	});
	
	$('#deleteLayout').click(function() {
		showBox('#msgDeleteLayout',30);
	});

	$('#cancelDeleteLayout').click(function() {
		hideBox('#msgDeleteLayout',30);
	});

	$('#applyDeleteLayout').click(function() {
		
		hideBox('#msgDeleteLayout',30);
		
		jsonInfo = new Object();
		jsonInfo.lessonLayoutId = currentLessonLayoutId;
		jsonInfo.schoolId = userInfo.schoolId;
		jsonInfo.action = "D";
		
		if (paymentNeeded == false) {
			showLoading();
			$.post('updateAdminLayout', jsonInfo, loadAdminLayouts, "json");
		} else {
			showExpiredMsg();
		}
		
	});
	
	function loadAssignmentTypes(checkSubjectId) {

		var typeFound = false;
		
		$('#assignmentType').html('<option value="0">Select Type</option>');
		if (allAssignmentWeights != null && allAssignmentWeights.length > 0) {

			for (var x=0; x<allAssignmentWeights.length; x++) {
				if (allAssignmentWeights[x].subjectId == checkSubjectId) {
					$('#assignmentType').append('<option value="' +  allAssignmentWeights[x].id + '">' + allAssignmentWeights[x].name + '</option>');
					typeFound = true;
				}
			}
			
			if (checkSubjectId != 0 && typeFound == false) {
				for (var x=0; x<allAssignmentWeights.length; x++) {
					if (allAssignmentWeights[x].subjectId == 0) {
						$('#assignmentType').append('<option value="' +  allAssignmentWeights[x].id + '">' + allAssignmentWeights[x].name + '</option>');
					}
				}
			}
			
		}
	}

	function loadAssessmentTypes(checkSubjectId) {

		var typeFound = false;
		
		$('#assessmentType').html('<option value="0">Select Type</option>');
		if (allAssessmentWeights != null && allAssessmentWeights.length > 0) {

			for (var x=0; x<allAssessmentWeights.length; x++) {
				if (allAssessmentWeights[x].subjectId == checkSubjectId) {
					$('#assessmentType').append('<option value="' +  allAssessmentWeights[x].id + '">' + allAssessmentWeights[x].name + '</option>');
					typeFound = true;
				}
			}
			
			if (checkSubjectId != 0 && typeFound == false) {
				for (var x=0; x<allAssessmentWeights.length; x++) {
					if (allAssessmentWeights[x].subjectId == 0) {
						$('#assessmentType').append('<option value="' +  allAssessmentWeights[x].id + '">' + allAssessmentWeights[x].name + '</option>');
					}
				}
			}

		}
	}
	
	$('.closeHead').hover(
		function() {
			$(this).html('<img src="images/close-x-blue.png">');
		}, function() {
			$(this).html('<img src="images/close-x-white.png">');
		}
	);
		
	function setMondayStart(newDate) {
		
		var dtCh= "/";
		var pos1=newDate.indexOf(dtCh);
		var pos2=newDate.indexOf(dtCh,pos1+1);
		
		var month=parseInt(newDate.substring(0,pos1),10);
		var day=parseInt(newDate.substring(pos1+1,pos2),10);
		var year=parseInt(newDate.substring(pos2+1),10);

		if (year < 100) {year = year + 2000;}
		
		showDate = new Date (year, month-1, day);

		getMonday.setTime(showDate.getTime());
		
		var showDay=showDate.getDay();
		switch (showDay) {
			case 0: getMonday.setDate(getMonday.getDate()+1); break;
			case 1: getMonday.setDate(getMonday.getDate()+0); break;
			case 2: getMonday.setDate(getMonday.getDate()-1); break;
			case 3: getMonday.setDate(getMonday.getDate()-2); break;
			case 4: getMonday.setDate(getMonday.getDate()-3); break;
			case 5: getMonday.setDate(getMonday.getDate()-4); break;
			default: getMonday.setDate(getMonday.getDate()+2);
		}

		gDate = getMonday.getDate();
		gMonth = getMonday.getMonth(); gMonth++;
		gYear = getMonday.getFullYear();
		
		gMonday = gMonth + "/" + gDate + "/" + gYear;

	}
	
});